{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","APP_URL","GRAPHQL_DEV_CLIENT","URL","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","url","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ALLSTYLORISILVERLISTINGBOTTOMBANNERS","ALLSTYLORISILVERLANDINGBANNERS","ALLSTYLORISILVERLISTINGPAGE","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ORDERS","queries_templateObject","queries_templateObject2","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","useStyles2","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","handleDelete","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","FormControlLabel","control","Switch","checked","inputProps","labelPlacement","Table","borderColor","stickyHeader","TableHead","TableRow","TableCell","TableBody","val","index","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","alt","src","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","log","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","Input_excluded","onKeyPress","which","input-label","textOverflow","overflow","input","&::placeholder","process","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","buildGradient","start","end","gradients","blue","indigo","green","orange","validate","require","schema","email","presence","allowEmpty","password","position","borderTopRightRadius","borderBottomRightRadius","white","breakpoints","down","backgroundImage","loginForm","divider","person","fields","submitButton","withRouter","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","handleChange","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","setItem","accessToken","forEach","element","pageurl","is_write","history","alert","hasError","Card","CardContent","gutterBottom","autoComplete","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Component","Dashboard_","Container","components_Input_Input","Dashboard","paddingLeft","FullLoader","isopen","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","fieldHint","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","CardHeader","Divider","cardcontent","test","defaultValue","renderTags","getTagProps","InputProps","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","isreorderable","Radio","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","zIndex","placeholderzindex","paddingRight","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","handleInputChange","includes","button","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","justify","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chipFocused","noOptionsMessage","singleValue","borderBottom","formControl","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","selectedOption","default_metal_size","Step5_excluded","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","product_id","filepath","replace","image_url","axios","put","file","unshift","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","setLoading","handleNext","error_content","formdata","keyvalue","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","textAlign","&:hover","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","lighten","light","primary","dark","clip","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","address","gstNo","createdAt","vendordata","pincode","SelectProps","native","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","_row$trans_sku_lists","trans_sku_lists","sku_id","Visibility_default","product_name","vendor_code","textarea","resize","backdrop","errorTable","LinearProgressWithLabel","Box","mr","LinearProgress","Math","round","ChooseWareHouse","_data$allWarehouses$n","_data$allWarehouses","getOptionSelected","allWarehouses","warehouse","newValue","setWarehouse","required","endAdornment","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","close","fullScreen","AppBar","Toolbar","IconButton","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","ProductSync_ChooseWareHouse","ChipInput_default","onAdd","_data$list","_data$list2","list","toConsumableArray","onDelete","newChipKeyCodes","join","rowSpan","Backdrop","Productlist","setMasters","setFilterparams","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Productlist_ProductSync","Header","Header_excluded","inner","Results","Results_excluded","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Results_Results_excluded","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","enddate","strictCompareDates","VoucherComponent","_React$createElement","VoucherComponent_excluded","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","producttypes","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","AboutVoucher_AboutVoucher_excluded","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","myDate","setDate","getDate","orderstatus","OrderList_components_Header_Header_excluded","fromDate","setFromDate","ToDate","setToDate","statusval","setStatusval","handleDateChange","date","orderStatus","borderTop","select","onSelect","InputAdornment","MenuItem","DatePicker","onDate","Header_SortHeader","containergrid","OrderList_components_Results_Results_excluded","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","columnsname","showcolumns","col","iswrite","showorderdetails","paymentmode","paymentstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","APTRANSACTIONID","fail_reason","TRANSACTIONPAYMENTSTATUS","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","filter","data_filter","match","username","min","max","fromdate","todate","date_filter","OrderList_components_Results_Results","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","closeButton","other","Addmetalprice_excluded","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","vendor","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup_excluded","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","materiallist","puritylist","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","allPricingMarkups","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Markuppricesetup_components_Product","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","VoucherComponent_VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","Avatar","small","oninit","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","OrderItems","OrderItems_excluded","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","trans_sku_list","sku_weight","diamond_type","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities_components_Results_Results_excluded","Masterpurities","DiscountList_components_Header_Header_excluded","DiscountList_components_Results_Results_excluded","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","AttributesComponent_excluded","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","productAttributes","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","masterroles","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","General_excluded","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","Userwishlist_components_Results_Results_excluded","setInvoices","invoice","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses_components_Results_Results_excluded","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","AttributesComponent_AttributesComponent","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","inputField","HolidayModal","holiday","editItem","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","InventoryModal","setError","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","iconButton","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","warehouseId","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","setState","spaceing","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","Menu_Menu","noValidate","lassName","columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","selected","setSelected","dense","emptyRows","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","CmsHome","SilverLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","allBanners","onChangeData","create_banner_data","now","toISOString","SilverListingPage","SpecificListPages","urlParam","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamondType","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","some","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","_Object$assign","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","EditPrice_excluded","pricerun","Skupricesync","_Skupricesync","priceobj","costPriceTax","sellingPriceTax","markupPrice","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","selectcolumnfilter","Components_columns_Columns","minHeight","Productimages","image_count","productimages","setProductimages","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","styleFile","wordBreak","ishover","aria-hidden","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Comments","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","_this","call","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e0eff20.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\nexport const APP_URL = \"https://staging.nacjewellers.net\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\nexport const URL = \"https://console-staging.nacjewellers.net\";\nexport const BASE_IMAGE_URL = \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\";\n//  export const GRAPHQL_DEV_CLIENT = \"http://localhost:8080/graphql\"\n//  export const API_URL = \"http://localhost:8080\"\n//  export const BASE_URL = \"http://localhost:8000\"\n//  export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={props.url ? URL + props.url : URL + \"configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query ($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  }\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst REVIEWQUERY = `\n  query {\n    allCustomerReviews {\n      nodes {\n        customerName\n        id\n        isActive\n        isPublish\n        message\n        nodeId\n        productSku\n        rating\n        title\n        updatedAt\n        userprofileId\n        productId\n      }\n    }\n  }\n`;\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = gql`\n  query MyQuery($productId: String!) {\n    productListByProductId(productId: $productId) {\n      productMetalcoloursByProductId {\n        nodes {\n          productColor\n          id\n          __typename\n        }\n        __typename\n      }\n      productName\n      productType\n      vendorCode\n      gender\n      earringBacking\n      isactive\n      prodDescription\n      productMaterialsByProductSku {\n        nodes {\n          materialName\n          __typename\n        }\n        __typename\n      }\n      productDiamondsByProductSku {\n        nodes {\n          itemName\n          subItemName\n          description\n          diamondClarity\n          diamondColour\n          diamondSettings\n          diamondShape\n          diamondType\n          id\n          stoneCount\n          stoneWeight\n          stoneAmount\n          stoneRate\n\n          __typename\n        }\n        __typename\n      }\n      productGemstonesByProductSku {\n        nodes {\n          itemName\n          subItemName\n          description\n          gemstoneSetting\n          gemstoneShape\n          gemstoneSize\n          gemstoneType\n          gemstonsSize\n          id\n          stoneCount\n          stoneWeight\n          stoneAmount\n          stoneRate\n          __typename\n        }\n        __typename\n      }\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n        nodes {\n          id\n          imagePosition\n          productId\n          imageUrl\n          ishover\n          isdefault\n          productColor\n          __typename\n        }\n        __typename\n      }\n      productPuritiesByProductId {\n        nodes {\n          purity\n          id\n          __typename\n        }\n        __typename\n      }\n      productThemesByProductId(condition: { isActive: true }) {\n        nodes {\n          themeName\n          id\n          __typename\n        }\n        __typename\n      }\n      productStonecolorsByProductId {\n        nodes {\n          id\n          stonecolor\n          __typename\n        }\n        __typename\n      }\n      productStylesByProductId(condition: { isActive: true }) {\n        nodes {\n          styleName\n          id\n          __typename\n        }\n        __typename\n      }\n      productCollectionsByProductId {\n        nodes {\n          collectionName\n          id\n          __typename\n        }\n        __typename\n      }\n      productOccassionsByProductId(condition: { isActive: true }) {\n        nodes {\n          occassionName\n          id\n          __typename\n        }\n        __typename\n      }\n      productStonecountsByProductId {\n        nodes {\n          id\n          stonecount\n          __typename\n        }\n        __typename\n      }\n      transSkuListsByProductId {\n        nodes {\n          skuSize\n          diamondType\n          metalColor\n          purity\n          productId\n          skuWeight\n          generatedSku\n          costPrice\n          costPriceTax\n          discountPrice\n          discountPriceTax\n          markupPrice\n          marginOnSalePercentage\n          markupPriceTax\n          marginOnSalePercentage\n          sellingPrice\n          discountDesc\n          sellingPriceTax\n          isReadyToShip\n          discount\n          isActive\n          isdefault\n          vendorDeliveryTime\n          id\n          isActive\n\n          transSkuDescriptionsBySkuId {\n            nodes {\n              skuDescription\n              certificate\n              ringsizeImage\n              __typename\n            }\n            __typename\n          }\n          maxOrderQty\n          minOrderQty\n          __typename\n        }\n        __typename\n      }\n      productCategory\n      sizeVarient\n      height\n      length\n      width\n      __typename\n      productVendorCode\n    }\n  }\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst HOLIDAYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\n    allHolidayManagers(\n      first: $first\n      offset: $offset\n      filter: $filter\n      orderBy: DATE_ASC\n    ) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n        isActive\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        createdAt\n        updatedAt\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query ($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst STOCKSTATUS = gql`\n  query {\n    allWarehouses {\n      nodes {\n        name\n        isActive\n        inventoriesByWarehouseId {\n          aggregates {\n            sum {\n              numberOfItems\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst VERIFYTAGNO = gql`\n  query ($tagno: String!) {\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst ALLBANNERSCOMPLETE = `\nquery MyQuery {\n  allBanners\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst ALLBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"landing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATEALLBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLLISTINGBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"listing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATELISTINGBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"listing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLSPECIFICLISTINGPAGE = `\nquery MyQuery {\n  allBanners\n  (condition: {url: \"specificListingPage\"}) \n  {\n    nodes {\n      id\n      mobile\n      position\n      web\n      urlParam\n    }\n  }\n}\n`;\n\nconst CREATESPECIFICLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $urlParam :String\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: \"specificListingPage\"\n        web: $web\n        urlParam : $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst DELETEALLBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteBannerById(input: {id: $id}) {\n    banner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst ALLMASTERPRODUCTSIZE = gql`\n  query allproductsizes($productType: String) {\n    allMasterRingsSizes(condition: { productType: $productType }) {\n      nodes {\n        name\n        nodeId\n        id\n        size\n        updatedAt\n        productType\n        gender\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst IMAGEDELETE = `\nmutation MyMutation($productimageid: UUID!) {\n  deleteProductImageById(input: { id: $productimageid }) {\n    productListByProductId {\n      productId\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"bottom\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"landing\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLISTINGPAGE = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"listingPage\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst ALLSTYLORISILVERROUTINGPAGE = `\nquery MyQuery {\n  allBanners(condition: {url: \"#\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam :\"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\n\nconst CREATESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: $url\n        web: $web\n        urlParam: \"bottom\"\n        position: $position\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst CREATESILVERLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam: \"listingPage\"\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n\n`;\n\nconst CREATESTYLORISILVERROUTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $position: Int\n  $urlParam: String\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: \"S\"\n        web: $web\n        urlParam: $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id: Int!) {\n  deleteBannerById(input: { id: $id }) {\n    banner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n\n`;\n\nconst DELETESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation($id: Int!) {\n  deleteBannerById(input: { id: $id }) {\n    banner {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLFEATUREDPRODUCT = `query MyQuery {\n  allFeaturedProducts {\n    nodes {\n      productId\n      productListByProductId {\n        productName\n        productId\n        productImagesByProductId(condition: { ishover: true }) {\n          nodes {\n            imageUrl\n          }\n        }\n        transSkuListsByProductId {\n          nodes {\n            costPrice\n            markupPrice\n            skuUrl\n            transSkuDescriptionsBySkuId {\n              nodes {\n                skuDescription\n              }\n            }\n            sellingPrice\n          }\n        }\n      }\n      isActive\n    }\n  }\n}\n\n`;\n\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  createFeaturedProduct(\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\n  ) {\n    featuredProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\n\nconst   ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  updateFeaturedProductByProductId(\n    input: {\n      featuredProductPatch: { isActive: $isActive }\n      productId: $ProductId\n    }\n  ) {\n    featuredProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\n    featuredProduct {\n      productId\n    }\n  }\n}\n`;\n\n\nexport {\n  ALLBANNERS,\n  ALLLISTINGBANNERS,\n  ALLSPECIFICLISTINGPAGE,\n  CREATEALLBANNERS,\n  CREATELISTINGBANNERS,\n  CREATESPECIFICLISTINGPAGE,\n  DELETEALLBANNER,\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n  STOCKSTATUS,\n  VERIFYTAGNO,\n  ALLMASTERPRODUCTSIZE,\n  IMAGEDELETE,\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  ALLSTYLORISILVERLISTINGPAGE,\n  ALLSTYLORISILVERROUTINGPAGE,\n  CREATESILVERLANDINGBANNER,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  CREATESILVERLISTINGPAGE,\n  CREATESTYLORISILVERROUTINGPAGE,\n  DELETESILVERLANDINGBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n  ALLFEATUREDPRODUCT,\n  CREATEFEATUREDPRODUCT,\n  ISACTIVEFEATUREDPRODUCT,\n  DELETEFEATUREDPRODUCT,\n  REVIEWQUERY,\n};\n","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: {\n      called: false,\n      data: [],\n      loading: true,\n      error: false,\n      parsedData: [],\n    },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(\n    initialNetworkCtx.networkCtx\n  );\n\n  return (\n    <NetworkContext.Provider\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\n    >\n      {props.children}\n    </NetworkContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\nconst DownloadCsv = () => {\n  const [loader, setLoader] = useState(false);\n  const [showdownload, setShowDownload] = useState(false);\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const fetchCSVdata = async (event, done) => {\n    setLoader(true);\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n    let responseData = responseCSV.res_json;\n\n    if (responseCSV.statuscode === 200) {\n      let keyData = [];\n\n      for (const [key] of Object.entries(responseData[0])) {\n        keyData.push({ label: key, key: key });\n      }\n\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      setLoader(false);\n      setShowDownload(true);\n    }\n  };\n\n  const clearCsv = () => {\n    setDataCSV({ keyCSV: [], valueCSV: [] });\n    setShowDownload(false);\n  };\n\n  return (\n    <>\n      {loader ? (\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\n          <CircularProgress size={20} />\n        </Button>\n      ) : showdownload ? (\n        <CSVLink\n          header={dataCSV.keyCSV}\n          data={dataCSV.valueCSV}\n          filename={\"product-details.csv\"}\n          onClick={() => {\n            clearCsv();\n          }}\n          style={{ textDecoration: \"none\" }}\n        >\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\n            Download CSV\n          </Button>\n        </CSVLink>\n      ) : (\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\n          Load CSV\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default DownloadCsv;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React from \"react\";\nexport let AlertProps = {\n  vertical: {\n    top: \"top\",\n    bottom: \"bottom\",\n  },\n  horizontal: {\n    left: \"left\",\n    right: \"right\",\n    center: \"center\",\n  },\n  severity: {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n  },\n};\n\n/**\n * AlertContext store the props which are neccessary to show the Alert component,\n * which is provided at the /src/App.js using the /src/App.alert.js.\n */\nexport let AlertContext = React.createContext({\n  open: false,\n  severity: AlertProps.severity.success,\n  msg: \"\",\n  vertical: AlertProps.vertical.top,\n  horizontal: AlertProps.horizontal.center,\n  onclose: () => null,\n  setSnack: () => null,\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogTitle, DialogContent, TextField, CircularProgress, Grid } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useApolloClient } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport {AlertContext} from \"../../../context/AlertContext\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport exportFromJSON from \"export-from-json\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst FullCSVData = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const [loader, setLoader] = React.useState(false);\n  const [productType, setProductType] = React.useState(null);\n  const client = useApolloClient();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    client\n      .query({\n        query: gql`\n          query {\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\n              nodes {\n                name\n              }\n            }\n          }\n        `,\n      })\n      .then((res) => {\n        setOptions(res.data.type.nodes.map((i) => i.name));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const onDownload = () => {\n    if (productType == null) {\n      return snack.setSnack({\n        open: true,\n        severity: \"warning\",\n        msg: \"Please choose a product type!\",\n      });\n    }\n    setLoader(true);\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType })\n      .then((data) => {\n        exportFromJSON({\n          data,\n          fileName: `${productType}`,\n          exportType: \"xls\",\n        });\n        setOpen(false);\n        setLoader(false);\n        setProductType(null);\n      })\n      .catch((err) => {\n        console.error(err);\n        setOpen(false);\n        setLoader(false);\n        return snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occurred while downloading, Please try again!\",\n        });\n      });\n  };\n\n  return (\n    <Grid>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={{ marginRight: \"8px\" }}>\n        Full Data Download\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Choose Product Type to download data?\"}</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            id=\"type\"\n            options={options}\n            value={productType}\n            getOptionLabel={(option) => option}\n            style={{ width: 300 }}\n            onChange={(e, value) => {\n              setProductType(value);\n            }}\n            renderInput={(params) => <TextField {...params} label=\"Product Type\" variant=\"outlined\" />}\n          />\n        </DialogContent>\n        <DialogActions>\n          {loader && <CircularProgress size={28} />}\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onDownload} color=\"primary\">\n            Download\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default FullCSVData;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport DownloadCsv from \"./components/downloadcsv\";\nimport { Search, Filter } from \"./components\";\nimport FullCSVData from \"./components/FullCSVData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        <Grid container>\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\n          <Grid>\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\n              <FilterListIcon className={classes.filterIcon} /> Filter\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n//MuiAlert component which is shown inside the Snackbar component\nlet Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nexport const Alerts = (props) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.onclose();\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      id=\"main_alert_snackbar\"\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal,\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\n        {props.msg}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport React, { useEffect, useState } from \"react\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\nimport {\n  ALLFEATUREDPRODUCT,\n  CREATEFEATUREDPRODUCT,\n  DELETEFEATUREDPRODUCT,\n  ISACTIVEFEATUREDPRODUCT,\n} from \"../../../graphql/query\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst FeaturedProuductComponent = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\n    productId: \"\",\n    isActive: false,\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLFEATUREDPRODUCT,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\n\n          setAllFeaturedProduct(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const onChangeChecked = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.checked,\n    });\n  };\n  const handleChangeIsActive = (productId) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISACTIVEFEATUREDPRODUCT,\n        variables: { ProductId: productId, isActive: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (ProductId) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETEFEATUREDPRODUCT,\n        variables: { ProductId: ProductId },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_featured_Product = {\n      ProductId: createFeaturedProduct.productId,\n      isActive: createFeaturedProduct.isActive,\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATEFEATUREDPRODUCT,\n        variables: create_featured_Product,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography\n              component=\"h6\"\n              variant=\"h6\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              NAC - Landing Page - Featured Product\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">\n            {\" \"}\n            NAC - Landing Page - Featured Product :{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"productId\"\n              label=\"Product Id\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createFeaturedProduct.productId}\n              name=\"productId\"\n            />\n            <FormControlLabel\n              value=\"start\"\n              control={\n                <Switch\n                  checked={createFeaturedProduct.isActive}\n                  onChange={onChangeChecked}\n                  name=\"isActive\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              }\n              label=\"Product Active\"\n              labelPlacement=\"start\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>Product Id</TableCell>\n                <TableCell>Proudct Name</TableCell>\n                <TableCell>Image</TableCell>\n                <TableCell>Active</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allFeaturedProudct.map((val, index) => (\n                <TableRow key={index}>\n                  <TableCell>{val.productId}</TableCell>\n                  <TableCell>\n                    {val?.productListByProductId?.productName}\n                  </TableCell>\n                  <TableCell>\n                    <img\n                      alt=\"nacimages\"\n                      src={\n                        val?.productListByProductId?.productImagesByProductId\n                          ?.nodes[0]?.imageUrl\n                      }\n                      style={{ width: \"50px\", height: \"auto\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Switch\n                      checked={val.isActive ?? false}\n                      onChange={handleChangeIsActive(val.productId)}\n                      color=\"primary\"\n                      name=\"isActive\"\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => handleDelete(val.productId)}\n                      style={{\n                        color: \"#fff\",\n                        backgroundColor: \"red\",\n                        cursor: \"pointer !important\",\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default FeaturedProuductComponent;\n","import React from \"react\";\n\nimport { Breadcrumbs } from \"../index\";\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\nconst FeaturedProduct = (props) => {\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <FeaturedProductComponent />\n    </>\n  );\n};\nexport default FeaturedProduct;\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\nimport { REVIEWQUERY } from \"../../../graphql/query\";\n\nconst columns = [\n  { id: \"product_sku\", label: \"Product Sku\" },\n  { id: \"customerName\", label: \"customer Name\" },\n  { id: \"rating\", label: \"Rating\" },\n  { id: \"title\", label: \"Title\" },\n  { id: \"message\", label: \"Message\" },\n  { id: \"ispublish\", label: \"Publish\" },\n  { id: \"isactive\", label: \"Active\" },\n];\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\n    updateCustomerReviewById(\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\n    ) {\n      customerReview {\n        id\n        isActive\n        message\n        productId\n        title\n        customerName\n        productSku\n        rating\n      }\n    }\n  }\n`;\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\n  updateCustomerReviewById(\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\n  ) {\n    customerReview {\n      id\n      isPublish\n      message\n      productId\n      title\n      customerName\n      productSku\n      rating\n    }\n  }\n}\n`;\nconst CustomerReview = (props) => {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [allReview, setAllReview] = useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: REVIEWQUERY }),\n    };\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        let data = fatchvalue.data.allCustomerReviews.nodes;\n        console.log(data);\n        setAllReview(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  const handleChangeIsPublish = (Id) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISPUBLISHREVIEW,\n        variables: { id: Id, isPublish: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n  const handleChangeIsActive = (Id) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISACTIVEREVIEW,\n        variables: { id: Id, isActive: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map((headCell) => (\n                <TableCell\n                  key={headCell.id}\n                  style={{ whiteSpace: \"nowrap\" }}\n                  align={headCell.numeric ? \"right\" : \"left\"}\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\n                >\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {allReview\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row.id}>\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\n                  <TableCell align=\"left\">{row.rating}</TableCell>\n                  <TableCell align=\"left\">{row.title}</TableCell>\n                  <TableCell align=\"left\">{row.message}</TableCell>\n                  <TableCell align=\"left\">\n                    <Switch\n                      checked={row.isPublish ?? false}\n                      onChange={handleChangeIsPublish(row.id)}\n                    />\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Switch\n                      checked={row.isActive ?? false}\n                      onChange={handleChangeIsActive(row.id)}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\n                count={allReview.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default CustomerReview;\n","import React from \"react\";\nimport { Breadcrumbs } from \"../index\";\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\n\nconst FeaturedProduct = (props) => {\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <Reviewcomponent />\n    </>\n  );\n};\nexport default FeaturedProduct;\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: [],\n    productname: \"\",\n    material: \"\",\n    description: \"\",\n    minOrderQty: \"\",\n    maxOrderQty: \"\",\n    height: \"\",\n    length: \"\",\n    earringbacking: [],\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: [],\n    vendorcode: [],\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    productSize: [],\n    masterProductSize: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    diamonditemname: \"\",\n    diamondsubitemname: \"\",\n    diamonddescription: \"\",\n    gemstoneitemname: \"\",\n    gemstonesubitemname: \"\",\n    gemstonedescription: \"\",\n    metalindex: -1,\n    themes: [],\n    prod_styles: [],\n    occassions: [],\n    collections: [],\n    stonecount: [],\n    stonecolour: [],\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst orderCtxInitial = {\n  orderCtx: {},\n  orderMaster: {\n    orders: [],\n  },\n  setOrderCtx: () => null,\n};\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\n\n  return orderCtxInitial.orderCtx;\n};\n\nexport const OrderProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"orderCtx s\", orderCtx);\n  }, [orderCtx.order]);\n\n  return (\n    <OrderContext.Provider\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\n    >\n      {props.children}\n    </OrderContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { Helmet } from 'react-helmet';\nimport PropTypes from \"prop-types\";\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n\n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}\n","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  React.useEffect(async () => {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }, []);\n\n  React.useEffect(() => {}, [productCtx]);\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Male\"\n          // ) {\n          //   minvalue = 13;\n          //   maxvalue = 25;\n          //   default_size = 15;\n          // }\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Female\"\n          // ) {\n          //   minvalue = 8;\n          //   maxvalue = 23;\n          //   default_size = 12;\n          // }\n          // for (var i = minvalue; i < maxvalue; i++) {\n          //   selected_sizes.push({\n          //     value: i,\n          //     label: \"\" + i,\n          //   });\n          // }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: \"\",\n          product_type: \"\",\n          size,\n          selected_sizes: \"\",\n        });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({\n        ...productCtx,\n        [type]: value,\n        vendorleadtime: value.vendorDelivaryDays,\n      });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n\n    // for (var i = minvalue; i < maxvalue; i++) {\n    // selected_sizes.push(\"\" + i);\n    // sizes.push(\"\" + i);\n    // }\n\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\n     \n      // updateRingSize(\n      //   initailRingSize.sort(\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\n      //   )\n      // );\n    \n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    // }\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n      sizes,\n      selected_sizes,\n      default_size,\n    });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n\n      // for (var i = minvalue; i < maxvalue; i++) {\n      //   selected_sizes.push({\n      //     value: i,\n      //     label: \"\" + i,\n      //   });\n      // }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({\n      ...productCtx,\n      size,\n      [type]: e,\n      materials,\n      selected_sizes,\n    });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({\n      ...productCtx,\n      [type]: selectedOption,\n      steps,\n      material_names,\n    });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map(\n                        (option) => option.label\n                      )}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map(\n                                (option) => option.label\n                              )}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={option}\n                                    {...getTagProps({ index })}\n                                  />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={\n                                    productCtx.error_message.material_names\n                                  }\n                                  fullWidth\n                                  InputProps={{\n                                    ...params.InputProps,\n                                    type: \"search\",\n                                  }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map(\n                            (option) => option.label\n                          )}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{\n                            shrink: productCtx.vendorleadtime,\n                          }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">\n                            IsReorderable\n                          </FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel\n                              value=\"No\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"No\"\n                              labelPlacement=\"right\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\n                              \"default_metal_colour\"\n                            )}\n                            options={productCtx.metalcolour.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={\n                                  productCtx.error_message.default_metal_colour\n                                }\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\n                              \"default_metal_purity\"\n                            )}\n                            options={productCtx.metalpurity.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={\n                                  productCtx.error_message.default_metal_purity\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"K\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"BA\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map(\n                              (option) => option.label\n                            )}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport Moment from \"react-moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\n\nconst columns = [\n  { id: \"product_id\", label: \"product id\" },\n  { id: \"product_name\", label: \"product name\" },\n  { id: \"product_type\", label: \"product type\" },\n  { id: \"vendor_code\", label: \"vendor code\" },\n  { id: \"product_category\", label: \"product category\" },\n  { id: \"isactive\", label: \"active\" },\n  { id: \"createdAt\", label: \"Created on\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\n  }\n  useEffect(() => {\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\n  }, []);\n  useEffect(() => {\n    getproductlist(\n      props.filterparams.searchtext,\n      props.filterparams.categoryname,\n      props.filterparams.product_type,\n      \"\",\n      \"\",\n      order,\n      orderBy\n    );\n  }, [props.filterparams]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\n  }\n  async function showproductdetails(prod_id) {\n    let bodycontent = {\n      productid: prod_id,\n    };\n\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\n    console.log(response);\n    //setProductlists(response.products.rows)\n    window.open(response.url, \"_blank\");\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\n  };\n  function searchproduct(searchtext, productcategory, producttype) {\n    let products = allproductlists.filter((l) => {\n      return (\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\n      );\n    });\n    setProductlists(products);\n  }\n  async function getproductlist(\n    searchtext,\n    productcategory,\n    producttype,\n    pagesize,\n    offsetvalue,\n    sort,\n    orderby\n  ) {\n    let bodydata = {\n      size: pagesize ? pagesize : rowsPerPage,\n      offset: offsetValue,\n      searchtext: searchtext,\n      productcategory: productcategory,\n      producttype: producttype,\n      order: sort ? sort : order,\n      orderby: orderby ? orderby : orderBy,\n    };\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\n\n    console.log(response);\n    setProductlists(response.products.rows);\n    setPageCount(response.products.count);\n  }\n  function applyfilter(searchtext, categoryname, typename) {\n    getproductlist(searchtext, categoryname, typename);\n  }\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n          <EnhancedTableHead\n            classes={classes}\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n            {stableSort(productlists, getComparator(order, orderBy)).map(\n              (row, index) => (\n                <TableRow key={row.product_id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row?.trans_sku_lists?.[0].sku_id}\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                      <EditIcon />\n                    </Button>\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\n                      <VisibityIcon />\n                    </Button>\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => showproductdetails(row)}\n                  >\n                    {/* <Link variant=\"body2\">  */}\n                    {row.product_name}\n\n                    {/* </Link>   */}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\n\n                  <TableCell align=\"left\">\n                    {\" \"}\n                    <FormControlLabel\n                      label={row.isactive ? \"\" : \"\"}\n                      control={\n                        <Switch checked={row.isactive} value=\"checkedA\" />\n                      }\n                    />\n                  </TableCell>\n\n                  <TableCell align=\"left\">\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\n                      {row.createdAt}\n                    </Moment>\n                  </TableCell>\n                </TableRow>\n              )\n            )}\n            {/* </> */}\n            {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default withApollo(AddContact);\n","import React from \"react\";\nimport {\n  AppBar,\n  Dialog,\n  IconButton,\n  Slide,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  LinearProgress,\n  Box,\n  CircularProgress,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Backdrop,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { AlertContext, AlertProps } from \"../../context\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_URL } from \"../../config\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\nimport { isEmpty } from \"validate.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  content: {\n    width: \"90%\",\n    margin: theme.spacing(5),\n  },\n  textarea: {\n    resize: \"both\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n  errorTable: {\n    margin: 10,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst ChooseWareHouse = (props) => {\n  const { loading, data } = useQuery(WAREHOUSELIST);\n  return (\n    <Autocomplete\n      id={\"warehouse-id\"}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      options={data?.allWarehouses?.nodes ?? []}\n      value={props.warehouse || null}\n      onChange={(event, newValue) => {\n        props.setWarehouse(newValue);\n      }}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Warehouse\"\n          fullWidth\n          required\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nconst ProductSync = (props) => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  var [data, setData] = React.useState({\n    action_type: \"price_sync\",\n    sync_url: \"\",\n    new_tagno: [],\n  });\n  const [progress, setProgress] = React.useState(0);\n  const [warehouse, setWarehouse] = React.useState(null);\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\n    status: false,\n    errors: {},\n  });\n  const [backDrop, setBackDrop] = React.useState(false);\n  var handleChange = (event) => {\n    var { name, value } = event.target;\n    setData({ ...data, [name]: value });\n  };\n\n  var handleAddChip = (chip) => {\n    var _ = data;\n    _.new_tagno.push(chip);\n    setData({ ..._ });\n    client\n      .query({ query: VERIFYTAGNO, variables: { tagno: chip } })\n      .then(({ data }) => {\n        if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\n          setErrorTagNo([...errorTagNo, chip]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  var handleDeleteChip = (chip, index) => {\n    var _ = data;\n    _.new_tagno.splice(index, 1);\n    setData({ ..._ });\n  };\n\n  var { open, handleClose } = props;\n\n  React.useEffect(() => {\n    const socket = socketIOClient(API_URL);\n    socket.on(\"sync_data\", (data) => {\n      if (data.status !== \"completed\") {\n        setProgress(data?.completed * 100);\n      } else {\n        setData({\n          action_type: \"price_sync\",\n          sync_url: \"\",\n          new_tagno: [],\n        });\n        snack.setSnack({\n          severity: AlertProps.severity.info,\n          msg: `Process Completed ${data.timeElapsed}`,\n        });\n        socket.close();\n      }\n    });\n  }, []);\n\n  const handleRun = () => {\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    if (data.sync_url === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data URL cannot be empty!\",\n      });\n      return;\n    }\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Warehouse is mandatory!\",\n      });\n      return;\n    }\n    setProgress(0);\n    var Product_lists = data.Product_lists;\n    delete data.Product_lists;\n    sendNetworkRequest(\n      \"/product_sync\",\n      {},\n      {\n        ...data,\n        warehouse: warehouse?.id,\n      }\n    )\n      .then((res) => {\n        snack.setSnack({\n          open: true,\n          severity: \"success\",\n          msg: res.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured while processing!\",\n        });\n      });\n  };\n\n  const validatePreSync = () => {\n    if (data.sync_url === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data URL cannot be empty!\",\n      });\n      return;\n    }\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    setBackDrop(true);\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\n      .then((response) => {\n        let errorStatus = true;\n        data.new_tagno.forEach((tagno) => {\n          if (response[tagno] && !isEmpty(response[tagno])) {\n            errorStatus = false;\n          }\n        });\n        setBackDrop(false);\n        setValidatedTagNo({\n          status: errorStatus,\n          errors: !errorStatus ? response : {},\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        setBackDrop(false);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured, Please try again!\",\n        });\n      });\n  };\n\n  return (\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Product Sync\n          </Typography>\n          {data.action_type !== \"price_sync\" && (\n            <Button\n              variant=\"outlined\"\n              autoFocus\n              color=\"inherit\"\n              onClick={validatePreSync}\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\n            >\n              {\"Validate Product Sync\"}\n            </Button>\n          )}\n          <Button\n            autoFocus\n            color=\"inherit\"\n            variant=\"outlined\"\n            onClick={handleRun}\n            startIcon={<SyncIcon />}\n            disabled={\n              data.action_type !== \"price_sync\" && !validatedTagNo?.status\n            }\n          >\n            {data.action_type === \"price_sync\"\n              ? \"Run Price Sync\"\n              : \"Run Product Sync\"}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid\n        className={classes.content}\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\" fullWidth required>\n            <Typography variant=\"h4\">Choose action type</Typography>\n            <RadioGroup\n              aria-label=\"action-type\"\n              name=\"action_type\"\n              value={data.action_type}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={\"price_sync\"}\n                control={<Radio />}\n                label={\"Price Sync\"}\n              />\n              <FormControlLabel\n                value={\"new_uploads\"}\n                control={<Radio />}\n                label={\"Product Sync\"}\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} style={{ padding: \"9px\" }}>\n          <TextField\n            value={data.sync_url}\n            onChange={handleChange}\n            rows={15}\n            fullWidth\n            label={\"Sync Data URL\"}\n            name=\"sync_url\"\n            variant=\"outlined\"\n            required\n            inputProps={{ className: classes.textarea }}\n          />\n        </Grid>\n        {data.action_type === \"new_uploads\" && (\n          <>\n            <Grid item xs={12}>\n              <ChooseWareHouse\n                warehouse={warehouse}\n                setWarehouse={setWarehouse}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ChipInput\n                value={data.new_tagno}\n                onAdd={handleAddChip}\n                onDelete={handleDeleteChip}\n                fullWidth\n                newChipKeyCodes={[13, 32]}\n                variant=\"outlined\"\n                label={\"TAG Number\"}\n                error={errorTagNo.length > 0}\n                helperText={\n                  errorTagNo.length > 0\n                    ? `${errorTagNo.join(\n                        \",\"\n                      )} already exists these could not be synced again!`\n                    : ``\n                }\n              />\n            </Grid>\n          </>\n        )}\n        {!isEmpty(validatedTagNo?.errors) && (\n          <Grid item xs={12} className={classes.errorTable}>\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\n              {\n                \"Below masters are missing respectively, Please add them before syncing products\"\n              }\n            </Typography>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Tag No.</TableCell>\n                  <TableCell align=\"center\">Master Type</TableCell>\n                  <TableCell align=\"center\">Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.new_tagno.map(\n                  (element, index) =>\n                    !isEmpty(validatedTagNo.errors[element]) && (\n                      <React.Fragment key={index}>\n                        {console.log(\n                          Object.keys(validatedTagNo.errors[element]).length\n                        )}\n                        <TableRow>\n                          <TableCell\n                            rowSpan={\n                              Object.keys(validatedTagNo.errors[element]).length\n                            }\n                            align=\"center\"\n                          >\n                            {element}\n                          </TableCell>\n                          {Object.keys(validatedTagNo.errors[element]).map(\n                            (item, i) =>\n                              i == 0 && (\n                                <React.Fragment key={i}>\n                                  <TableCell align=\"center\">{item}</TableCell>\n                                  <TableCell align=\"center\">\n                                    {validatedTagNo.errors[element][item]}\n                                  </TableCell>\n                                </React.Fragment>\n                              )\n                          )}\n                        </TableRow>\n                        {Object.keys(validatedTagNo.errors[element]).map(\n                          (item, i) =>\n                            i > 0 && (\n                              <TableRow key={i}>\n                                <TableCell align=\"center\">{item}</TableCell>\n                                <TableCell align=\"center\">\n                                  {validatedTagNo.errors[element][item]}\n                                </TableCell>\n                              </TableRow>\n                            )\n                        )}\n                      </React.Fragment>\n                    )\n                )}\n              </TableBody>\n            </Table>\n          </Grid>\n        )}\n        {progress > 0 && (\n          <Grid item xs={12}>\n            <LinearProgressWithLabel value={progress} />\n          </Grid>\n        )}\n        <Backdrop className={classes.backdrop} open={backDrop}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ProductSync;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withApollo } from \"react-apollo\";\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ProductFilter } from \"../../components\";\nimport ProductSync from \"./ProductSync\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\">\n              <Button variant=\"contained\" color=\"primary\" disabled>\n                Add New Product\n              </Button>\n            </Link>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\n              Product Sync\n            </Button>\n          </Grid>\n        </Grid>\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\n        <Product filterparams={filterparams} />\n        <ProductSync open={open} handleClose={handleClose} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { VoucherContext } from \"../../../../context\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from \"../../../../utils/commonmethod\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  selectedtext: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst AboutVoucher = (props) => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(\n    props.masterData.product_type\n  );\n  const [productids, setProductids] = useState(props.productids);\n\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n\n  const handleproducttypechange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, producttypes: vendorsarray });\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\n  };\n  const handlecategorychange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, categories: vendorsarray });\n\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\n  };\n  const hangeoptionchange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.shortCode);\n    });\n    setFormData({ ...formData, vendorid: vendorsarray });\n\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\n  };\n\n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/updatepricelist\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n    } else {\n      alert(\"error\");\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/getpriceupdatestatus\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n      setUpdatestatus(response.message);\n    } else {\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n  };\n  const handleInputChange = (type) => (e) => {\n    setVouchercode(e.target.value.toUpperCase());\n  };\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n    // alert(JSON.stringify(voucherCtx))\n    setVouchercode(makeid(10));\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n        <Grid container spacing={2}>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist || []}\n              getOptionLabel={(option) => option.display}\n              fullWidth\n              onChange={hangeoptionchange(\"vendorcode\")}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Selct Vendor\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handlecategorychange(\"category\")}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product Category\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handleproducttypechange(\"product_type\")}\n              fullWidth\n              margin=\"dense\"\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product type\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              disabled={props.isdisabled}\n              className={classes.fixedTag}\n              value={props.productids}\n              options={productids}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={\n                    props.productids.length > 0\n                      ? \"Products (\" + props.productids.length + \") \"\n                      : \"Products\"\n                  }\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n\n          {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n          {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  conatainerRow: {\n    width: \"300px\",\n    color: \"#6f6f6f\",\n    display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight: \" 256px\",\n    fontSize: \"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"500px\",\n      color: \"#6f6f6f\",\n      display: \"grid\",\n      padding: \"16px 24px\",\n      maxHeight: \" 270px\",\n      fontSize: \"14px\",\n      overflowX: \"visible\",\n      overflowY: \"scroll\",\n      gridColumnGap: \"20px\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n  },\n}));\n\nexport default function Columns(props) {\n  const classes = useStyles();\n\n  const checkboxrow = props.columns;\n  const [columns, setColumns] = React.useState({\n    listOfValue: checkboxrow,\n  });\n  const [showcolumns, setshowColumns] = React.useState();\n\n  function stateChange(id) {\n    let listOfValue = columns.listOfValue.map((data, index) => {\n      if (id === data.id) {\n        data.isActive = data.isActive ? false : true;\n      }\n      return data;\n    });\n    setColumns({\n      listOfValue,\n    });\n  }\n  function resetButton() {\n    let listOfValue = columns.listOfValue.map((data, index) => {\n      if (data.disabled === false) {\n        data.isActive = false;\n      }\n\n      return data;\n    });\n    setColumns({\n      listOfValue,\n    });\n  }\n  function saveaction() {\n    let columnnames = [];\n    columns.listOfValue.map((element) => {\n      if (element.isActive && element.disabled === false) {\n        columnnames.push(element);\n      }\n    });\n    props.getColumnnames(columnnames);\n    props.columnclose();\n  }\n  // const lists = columns.listOfValue.map((head) =>\n  //     (\n  //         <Grid conatiner>\n  //             <Grid item xs={4}><Checkbox\n  //                 value=\"secondary\"\n  //                 color=\"primary\"\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n  //                 checked = {head.isActive}\n  //                 onChange = {()=>stateChange(head.id)}\n\n  //             />\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n  //             </Grid>\n  //         </Grid>\n  //     )\n\n  // );\n\n  console.log(columns, \"the main columns\");\n\n  return (\n    <div style={{ maxHeight: \"420px\" }}>\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n      <Grid\n        style={{\n          height: \"270px\",\n          borderBottom: \"1px solid #ddd\",\n          width: \"100%\",\n          margin: \"auto\",\n          paddingTop: \"5px\",\n          paddingBottom: \"10px\",\n        }}\n      >\n        <Grid conatiner>\n          <Grid item className={classes.conatainerRow}>\n            {columns.listOfValue.map((head) => (\n              <Grid container>\n                <Checkbox\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={head.isActive}\n                  disabled={head.disabled}\n                  onChange={() => stateChange(head.id)}\n                />\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n        <Grid>\n          <Button size=\"large\" onClick={() => resetButton()}>\n            RESET\n          </Button>\n        </Grid>\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button size=\"small\" onClick={() => props.columnclose()}>\n            cancel\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => saveaction()}\n            backgroundColor=\"secondary\"\n            size=\"large\"\n            variant=\"contained\"\n            className={classes.margin}\n          >\n            SAVE\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\n\nconst useStyles = makeStyles((theme) => ({\n  // button: {\n  //     color:\"#06847B\",\n  //     border: \"1px solid #7bbcb7\",\n  //     '&:hover':{\n  //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n  //         border: \"1px solid #06847B\",\n  //     }\n  //   },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  useEffect(() => {\n    setOptions(props.columnnames);\n  });\n  return (\n    <Grid container lg={12} md={12} sm={12} xs={12}>\n      <Grid\n        container\n        xl={12}\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        style={{ display: \"flex\", margin: \"10px\", justifyContent: \"flex-end\" }}\n      >\n        <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n          <Button\n            className=\"product\"\n            size=\"medium\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              getColumnnames={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Typography, Button, TextField, MenuItem, InputAdornment } from \"@material-ui/core\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from \"./SortHeader\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems: \"center\",\n  },\n}));\n\nvar myDate = new Date();\nmyDate.setDate(myDate.getDate() + 2);\n// const statusval=[\n// {\n//   value:0,\n//   label:\"All\"\n// },\n// {\n//   value:1,\n//   label:\"Submitted\"\n// },\n// {\n//   value:2,\n//   label:\"Intiated\"\n// },\n// {\n//   value:3,\n//   label:\"Failed\"\n// },\n// {\n//   value:4,\n//   label:\"Approved\"\n// }\n\n// ]\n\nconst Header = (props) => {\n  console.log(props.orderstatus, \"the header data\");\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [fromDate, setFromDate] = useState(null);\n  const [ToDate, setToDate] = useState(null);\n  const [statusval, setStatusval] = useState([]);\n\n  const handleDateChange = (date, value) => {\n    if (value === \"from\") {\n      setFromDate(date);\n    }\n    if (value === \"to\") {\n      if (date > fromDate) {\n        setToDate(date);\n      } else alert(\"the To date must be higher thean from\");\n    }\n  };\n\n  useEffect(() => {\n    let orderStatus = [];\n    let orderstatus = props?.orderstatus;\n    orderstatus.forEach((element) => {\n      orderStatus.push({ label: element.name, value: element.id });\n    });\n    setStatusval(orderStatus);\n  }, [props.orderstatus]);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n    // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n  };\n  function handlesearch() {\n    props.onSearch(searchtext);\n  }\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n    //props.onSearch(e.target.value)\n  };\n  function handleCancel() {\n    props.onCancel();\n    setStatus(\"\");\n  }\n  function handleDate() {\n    if (fromDate && ToDate !== \"\") {\n      props.onDate(fromDate, ToDate);\n    }\n  }\n  const handleChange = (event) => {\n    props.onSelect(event.target.value);\n    setStatus(event.target.value);\n  };\n  const classes = useStyles();\n  console.log(statusval, \"options\");\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid className={classes.contantview} container spacing={1}>\n        {/* <Grid item xs={1}>\n          <Typography variant=\"h4\" style={{ margin: \"8px\" }}>\n            Orders\n          </Typography>\n        </Grid> */}\n        <Grid container item xs={4}>\n          <Grid item xs={9}>\n            <TextField\n              className={classes.helperinput}\n              variant=\"outlined\"\n              margin=\"dense\"\n              value={searchtext}\n              id=\"productname\"\n              fullWidth\n              name=\"productname\"\n              label=\"Search by name/email/mobile\"\n              //onInput={keyPress.bind(this)}\n              style={{ marginLeft: \"4px\", marginTop: \"21px\" }}\n              onChange={handleinputChange(\"searchtext\")}\n\n              //onChange={(e)=>handleinputChange(e,'productname')}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handlesearch()}\n              style={{\n                marginLeft: \"7px\",\n                marginTop: \"22px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container item xs={8} spacing={3}>\n          <Grid item xs={4}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              select\n              fullWidth\n              label=\"OrderStatus\"\n              value={status}\n              onChange={handleChange}\n              style={{ marginTop: \"17px\" }}\n              variant=\"outlined\"\n              InputProps={\n                status !== \"\" && {\n                  endAdornment: (\n                    <InputAdornment position=\"start\" style={{ marginRight: 20, cursor: \"pointer\" }}>\n                      <CancelOutlinedIcon onClick={() => handleCancel()} />\n                    </InputAdornment>\n                  ),\n                }\n              }\n            >\n              {statusval.map((option) => (\n                <MenuItem key={option.value} value={option.label}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={3}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                variant=\"inline\"\n                format=\"yyyy/MM/dd\"\n                margin=\"normal\"\n                label=\"From\"\n                value={fromDate}\n                style={{ marginTop: 6 }}\n                onChange={(date) => handleDateChange(date, \"from\")}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                variant=\"inline\"\n                format=\"yyyy/MM/dd\"\n                margin=\"normal\"\n                label=\"To\"\n                value={ToDate}\n                style={{ marginTop: 6 }}\n                onChange={(date) => handleDateChange(date, \"to\")}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item xs={2}>\n            <Button color=\"primary\" variant=\"contained\" style={{ marginTop: \"17px\" }} onClick={() => handleDate()}>\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Moment from \"react-moment\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n    overflowY: \"auto\",\n    maxHeight: \"100vh\",\n  },\n  containergrid: {\n    overflowX: \"scroll\",\n    width: 1000,\n    height: 20,\n    overflowY: \"hidden\",\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  // debugger\n  console.log(props, \"the list data\");\n  const { className, orders, ...rest } = props;\n  const [editcontent, setEditcontent] = React.useState({});\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : \"Order Date\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = (event) => {\n    const selectedOrders = event.target.checked ? orders.map((order) => order.id) : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent);\n    // setIsadd(false)\n    // alert(JSON.stringify(editcontent))\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // refetch()\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl) {\n    window.open(orderurl);\n  }\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n    let paymentstatusobj = {};\n    props.orderstatus.forEach((element) => {\n      if (vendordata.orderstatus === element.name) {\n        paymentstatusobj = element;\n      }\n    });\n\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus: paymentstatusobj,\n      isedit: true,\n    });\n\n    setBtnEdit({ ...btnEdit, id: vendordata.orderid, action: true });\n  }\n  function CancelEdit(diamondData) {\n    //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n\n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n\n    // }\n    //    setIsadd(false)\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        {/* <PerfectScrollbar> */}\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n            {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n            <EnhancedTableHead\n              columns={props.columnobjs}\n              columnsname={props.showcolumns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n            {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n            {/* </TableRow>\n                </TableHead> */}\n            <TableBody style={{ overflow: \"scroll\" }}>\n              {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((order) => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  <TableRow\n                  // key={order.id}\n                  // selected={selectedOrders.indexOf(order.id) !== -1}\n                  >\n                    {props.columnobjs.map((col) => (\n                      <>\n                        {col.key === \"action\" && props.iswrite ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == order.orderid ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(order)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button>\n                                <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)} />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == order.orderid ? (\n                              <TableCell>\n                                {!col.type || col.type == 1 ? <Typography> {order[col.key]}</Typography> : null}\n                                {col.type == 2 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={col.key}\n                                    name={col.key}\n                                    value={editcontent[col.key]}\n                                    onChange={handleInputChange(col.key)}\n                                    label={col.label}\n                                  />\n                                ) : null}\n                                {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">{order[col.key]}</Moment> : null}\n\n                                {col.type == 5 && order.paymentmode == \"COD\" ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.paymentstatus}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[col.key]}\n                                    onChange={handleoptionChange(col.key)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                                  />\n                                ) : null}\n                                {col.type == 5 && order.paymentmode != \"COD\" ? <Typography> {order[col.key]}</Typography> : null}\n\n                                {col.type == 3 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.orderstatus}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[col.key]}\n                                    onChange={handleoptionChange(col.key)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                                  />\n                                ) : null}\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"center\" style={{ width: 20 }}>\n                                {col.type == 4 ? (\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">{order[col.key]}</Moment>\n                                ) : (\n                                  <Typography> {order[col.key]}</Typography>\n                                )}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n\n                    {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                    {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </div>\n        {/* </PerfectScrollbar> */}\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[10, 50, 100, 250]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { OrderContext } from \"../../context\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { v4 as uuid } from 'uuid';\nimport Page from \"../../components/Page\";\nimport { Header, Results } from \"./components\";\nimport Columns from \"./components/columnnames.json\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n}));\n\nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx, orderMaster } = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(\n    Columns.defaultcolumns\n  );\n  const [displaycolumns, setDisplaycolumns] = useState(\n    Columns.defaultcolumnnames\n  );\n\n  function columnchanged(columnnames) {  \n    let displycolumns = [];\n    columnnames.filter((element) => {\n      displycolumns.push(element.name);\n    });\n    setDisplaycolumns(columnnames);\n    setDisplaycolumnnames(displycolumns);\n  }\n\n  async function updateorder(ordercontent) {\n    let response = await sendNetworkRequest(\n      \"/updateorderstatus\",\n      {},\n      ordercontent\n    );\n    window.location.reload();\n\n    // getorders()\n  }\n  function searchorder(searchtext) {\n    if (searchtext.length > 0) {\n      var data_filter = orders.filter(\n        (element) =>\n          (element.email && element.email.match(searchtext + \".*\")) ||\n          (element.mobile && element.mobile.match(searchtext + \".*\")) ||\n          (element.orderid && element.orderid.match(searchtext + \".*\")) ||\n          (element.username && element.username.match(searchtext + \".*\"))\n      );\n      setFilteredorder(data_filter);\n    } else {\n      setFilteredorder(orders);\n    }\n  }\n\n  function searchOption(searchtext) {\n    if (searchtext !== \"\") {\n      var data_filter = orders.filter((element) => {\n         if(element.orderstatus === searchtext){\n            return element\n         }\n          });\n      setFilteredorder(data_filter);\n    } else {\n      setFilteredorder(orders);\n    }\n  }\n  function onCancel(){\n    setFilteredorder(orders);\n  }\n\n  function searchDate(min,max) {\n    let  fromdate = JSON.stringify(min)\n    fromdate = fromdate.slice(1,11)\n    console.log(fromdate)\n    let  todate = JSON.stringify(max)\n    todate = todate.slice(1,11)\n    console.log(todate)\n   if(fromdate && todate !== \"\"){\n    var date_filter = orders.filter((element)=>{\n    //  console.log(element.orderdate.slice(0,10))\n      if(element.orderdate.slice(0,10) > fromdate && element.orderdate.slice(0,10) <=todate){\n        return element\n      }   \n    });\n    setFilteredorder(date_filter)\n  }\n  else {\n    setFilteredorder(orders);\n  }\n  }\n\n\n\n  async function getorders() {\n    var orders_arr = [];\n    orderCtx.orderMaster.orders.forEach((element) => {\n      let orderobj = {};   \n      orderobj[\"orderid\"] = element.id;\n      orderobj[\"orderdate\"] = element.createdAt;\n      orderobj[\"paymentmode\"] = element.paymentMode;\n      orderobj[\"cartid\"] = element.cartId;\n      // orderobj['paymentstatusmaster'] = element.paymentStatus\n      orderobj[\"awbNumber\"] = element.awbNumber ? element.awbNumber : \"\";\n      orderobj[\"comments\"] = element.comments ? element.comments : \"\";\n      orderobj[\"orderstatus\"] = element.orderStatus;\n      if (element.paymentMode === \"COD\") {\n        orderobj[\"paymentstatus\"] = element.paymentStatus;\n      }\n      if (element.paymentDetailsByOrderId) {\n        let pgresponseobj = element.paymentDetailsByOrderId.nodes;\n        pgresponseobj.forEach((pgres) => {\n          let response_pg = JSON.parse(pgres.paymentResponse);\n          if (element.paymentMode === \"Prepaid\") {\n            orderobj[\"paymentstatus\"] = `${\n              response_pg?.ipgTransactionId || response_pg?.APTRANSACTIONID\n            }\\n${response_pg?.fail_reason || \"\"}\\n${\n              response_pg?.status || response_pg?.TRANSACTIONPAYMENTSTATUS\n            }`;\n            /* response_pg?.ipgTransactionId ||\n              response_pg?.APTRANSACTIONID +\n                \" \\n\" +\n                response_pg?.fail_reason +\n                \" \\n\" +\n                response_pg?.status ||\n              response_pg?.TRANSACTIONPAYMENTSTATUS; */\n          }\n        });\n      }\n      if (element.shoppingCartByCartId) {\n        let cartcontent = element.shoppingCartByCartId;\n\n        if (cartcontent.cartAddressesByCartId) {\n          let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n          addresscontent.forEach((addressobj) => {\n            orderobj[\"address\"] = addressobj.addressline1;\n            if (!orderobj[\"mobile\"]) {\n              orderobj[\"mobile\"] = addressobj.contactNumber;\n            }\n            if (!orderobj[\"username\"]) {\n              orderobj[\"username\"] = addressobj.firstname\n                ? addressobj.firstname\n                : \"\";\n            }\n          });\n        }\n        if (cartcontent.shoppingCartItemsByShoppingCartId) {\n          let cartitemscontent =\n            cartcontent.shoppingCartItemsByShoppingCartId.nodes;\n          let skus = [];\n\n          cartitemscontent.forEach((element) => {\n            if (element.transSkuListByProductSku) {\n              skus.push(element.transSkuListByProductSku.generatedSku);\n            }\n          });\n          orderobj[\"skus\"] = skus.join(\" , \");\n        }\n        if (cartcontent.userProfileByUserprofileId) {\n          // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n          let usercontent = cartcontent.userProfileByUserprofileId;\n          if (usercontent.firstName) {\n            orderobj[\"username\"] = usercontent.firstName\n              ? usercontent.firstName\n              : \"\";\n          }\n          orderobj[\"email\"] = usercontent.email ? usercontent.email : \"\";\n          if (!orderobj[\"username\"]) {\n            orderobj[\"username\"] = usercontent.firstname\n              ? usercontent.firstname\n              : \"\";\n          }\n\n          let useraddressess = usercontent.userAddressesByUserProfileId;\n          if (useraddressess) {\n            let address_arr = useraddressess.nodes;\n            address_arr.forEach((useraddressobj) => {\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n            });\n          }\n        }\n\n        if (cartcontent.giftwrapsByCartId) {\n          let giftobj = cartcontent.giftwrapsByCartId.nodes;\n          giftobj.forEach((gift) => {\n            orderobj[\"giftmessage\"] = gift.message;\n          });\n        }\n      }\n      orders_arr.push(orderobj);\n    });\n\n    setOrders(orders_arr);\n    setFilteredorder(orders_arr);\n  }\n  async function getmaster(getmaster) {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem(\"pagepermissions\");\n    if (pagepermission.indexOf(\"/orderlist\") > -1) {\n      setIswrite(true);\n    } else {\n      setIswrite(false);\n    }\n    getmaster();\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n\n    getmaster();\n    getorders();\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n//   debugger\nconsole.log(orders,\"main\")\n  return (\n    <Page className={classes.root} title=\"Orders Management List\">\n      \n\n            <Typography component=\"h3\" variant=\"h3\" style={{margin:\"10px\"}}>\n            Orders\n           </Typography>\n          \n      <Header\n        getColumnnames={columnchanged}\n        onSearch={searchorder}\n        onSelect={searchOption}\n        onDate={searchDate}\n        onCancel={onCancel}\n        columns={columnnames}\n        orderstatus={paymentstatus}\n      />\n      {filteredorder ? (\n        <Results\n          className={classes.results}\n          orderstatus={paymentstatus}\n          paymentstatus={orderstatus}\n          iswrite={iswrite}\n          orders={filteredorder}\n          onupdate={updateorder}\n          showcolumns={displaycolumnnames}\n          columnobjs={displaycolumns}\n        />\n      ) : null}\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from \"../../context\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { useQuery } from \"react-apollo\";\nimport { orderList } from \"../../services/mapper\";\nimport { ORDERS } from \"../../services/queries\";\n\nimport Component from \"./Orderlistcontent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\nexport const OrderList = withRouter((props) => {\n  const classes = useStyles();\n  let user_id = props.location.pathname.split(\"/\")[2];\n\n  const { data, loading, error } = useQuery(ORDERS(user_id));\n\n  if (loading)\n    return (\n      <div>\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <OrderProvider value={{ data, mapper: orderList.mapper, mappertype: \"orderMaster\" }}>\n      <Component {...props} />\n    </OrderProvider>\n  );\n});\nexport default OrderList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup, props.refetch);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setMarkup({ ...markup, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    setMarkup({\n      ...markup,\n      [type]: e.target.value,\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"category\")}\n                getOptionLabel={(option) => option.name}\n                options={props.category}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose category\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"producttype\")}\n                getOptionLabel={(option) => option.name}\n                options={props.producttype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose product type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"materiallist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.materiallist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Material type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"puritylist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.puritylist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Purity type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Min\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemin\")}\n                id=\"productvendorcode\"\n                name=\"Selling Price Min\"\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Max\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemax\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                getOptionLabel={(option) => option.name}\n                onChange={handleoptionChange(\"markuptype\")}\n                options={[\n                  { label: 1, name: \"Flat\" },\n                  { label: 2, name: \"Percentage\" },\n                ]}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Markup Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Markup Value \"\n                onChange={handleinputChange(\"markup\")}\n                fullWidth\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  DIAMONDMARKUP,\n  PRODUCTLISTSTATUSEDIT,\n  DELETEMARKUPPRICE,\n} from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    let product_type = markupcontent.producttype\n      ? markupcontent.producttype\n      : [];\n    let material_list = markupcontent.materiallist\n      ? markupcontent.materiallist\n      : [];\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\n\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = product_type;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"material_list\"] = material_list;\n    bodydata[\"purity_list\"] = purity_list;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid\n          container\n          justify=\"left\"\n          alignItems=\"center\"\n          className={classes.cardroot}\n          spacing={4}\n        >\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={DIAMONDMARKUP}\n                onCompleted={(data) =>\n                  setPageCount(data.allPricingMarkups.totalCount)\n                }\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  debugger;\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            materiallist={props.materiallist}\n                            puritylist={props.puritylist}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMin}{\" \"}\n                                </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMax}{\" \"}\n                                </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\n                                      \"sellingPriceType\"\n                                    )}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip\n                                          variant=\"outlined\"\n                                          size=\"small\"\n                                          label={option.name}\n                                          {...getTagProps({ index })}\n                                        />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{\n                                          ...params.InputProps,\n                                          readOnly: true,\n                                          type: \"search\",\n                                        }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1\n                                      ? \"Flat\"\n                                      : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupValue}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id\n                                    ? editmarkup.updatedAt\n                                    : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell\n                                  style={{ width: 170 }}\n                                  align=\"center\"\n                                >\n                                  <Button\n                                    onClick={(e) => handleSave(row.id, refetch)}\n                                  >\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell\n                                  align=\"center\"\n                                  style={{ width: 170 }}\n                                >\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button\n                                    onClick={(e) => handleDelete(row, refetch)}\n                                  >\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport {\n  VENDORLIST,\n  MASTERCATEGORY,\n  PRODUCTDIAMONDTYPES,\n} from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Markupprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [materiallist, setMateriallist] = React.useState([]);\n  const [puritylist, setPuritylist] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\n        // setVendorlist({\n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n\n      <Grid item xs={12} sm={12}>\n        <Product\n          categories={categorylist}\n          producttypes={producttypes}\n          materiallist={materiallist}\n          puritylist={puritylist}\n          vendor={\"Gold\"}\n        />\n      </Grid>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n      {/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  );\n});\n\nexport default withApollo(withRouter(Markupprice));\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CategoryComponents } from \"./../../components\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button,\n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs,\n  Tab,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\nimport { VoucherContext } from \"../../../../context\";\nconst tabs = [\n  { value: \"Category\", label: \"Category\" },\n  { value: \"Producttype\", label: \"Product type\" },\n  { value: \"Material\", label: \"Material\" },\n  { value: \"Collections\", label: \"Collections\" },\n  { value: \"Occations\", label: \"Occations\" },\n  { value: \"Styles\", label: \"Styles\" },\n  { value: \"Themes\", label: \"Themes\" },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200],\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst VoucherComponent = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\n    React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\",\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n  const myFunction = () => {\n    props.onAdded(attrobj);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"materials\") {\n      let elements_arr = [];\n      value.forEach((element) => {\n        elements_arr.push(element.name);\n      });\n      if (elements_arr.indexOf(\"Gold\") > -1) {\n        setIsgold(true);\n      } else {\n        setIsgold(false);\n      }\n\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\n        setIsdiamond(true);\n      } else {\n        setIsdiamond(false);\n      }\n    }\n    setAttrobj({\n      ...attrobj,\n      [type]: value,\n    });\n\n    // props.onAdded(type,value)\n  };\n  const handleTabsChange = (event, value) => {\n    if (value == \"Material\") {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if (tabnames.indexOf(\"Purity\") === -1) {\n        tabnames.splice(3, 0, \"Purity\");\n      }\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {}, []);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <div className={classes.content}>\n        <Grid container spacing={2}>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.category}\n              className={classes.fixedTag}\n              fullWidth\n              getOptionLabel={(option) => option.name}\n              options={voucherCtx.voucherMaster.product_categories}\n              onChange={handleoptionChange(\"category\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Category\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.product_types}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.product_types}\n              onChange={handleoptionChange(\"product_types\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.product_types}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Types\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.materials}\n              onChange={handleoptionChange(\"materials\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.materials}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Materials\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          {isgold ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                options={voucherCtx.voucherMaster.purities}\n                onChange={handleoptionChange(\"purities\")}\n                getOptionLabel={(option) => option.name}\n                value={attrobj.purities}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          {isdiamond ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                getOptionLabel={(option) => option.diamondtype}\n                options={voucherCtx.voucherMaster.diamondtypes}\n                onChange={handleoptionChange(\"diamondtype\")}\n                value={attrobj.diamondtype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.diamondtype}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.collections}\n              onChange={handleoptionChange(\"collections\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.collections}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Collections\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.occations}\n              onChange={handleoptionChange(\"occations\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.occations}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Occassions\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.styles}\n              onChange={handleoptionChange(\"styles\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.styles}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Styles\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.themes}\n              onChange={handleoptionChange(\"themes\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.themes}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Themes\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n            <Button\n              onClick={() => props.onAdded(attrobj)}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Check Applicable Products\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired,\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Viewsku from \"../Viewsku\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Products = (props) => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = (event) => {\n    const selectedOrders = event.target.checked\n      ? orders.map((order) => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel() {\n    setOpen(false);\n  }\n  function handleOpen(prodskus) {\n    setOpen(true);\n    setSelectskus(prodskus);\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      {open ? (\n        <Viewsku\n          isadd={open}\n          products={selectskus}\n          actionclose={handlecancel}\n        />\n      ) : null}\n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader title={props.title} />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Product ID</TableCell>\n\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.products\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((order) => (\n                    <TableRow\n                    // key={order.id}\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell>{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nProducts.defaultProps = {\n  orders: [],\n};\n\nexport default Products;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { VoucherContext } from \"../../context\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Chip, IconButton } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v1\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { palette } from \"../../theme\";\nimport Page from \"../../components/Page\";\nimport {\n  Header,\n  Results,\n  Products,\n  AboutVoucher,\n  VoucherComponent,\n} from \"./components\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport FullLoader from \"../../components/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  productcontent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1),\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor: theme.palette.white,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"Created Successfully\",\n    severity: \"Success\",\n  });\n\n  const { voucherCtx, setVoucherCtx, materialMaster } =\n    React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  async function getdiscountvalue(discount_id) {\n    let bodydata = {\n      discountid: discount_id,\n    };\n    let response = await sendNetworkRequest(\n      \"/getdiscount\",\n      {},\n      bodydata,\n      false\n    );\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach((comp) => {\n      comparr.push({\n        name: comp,\n      });\n    });\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids);\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname: response.discunt.discount_name,\n      discountvalue: response.discunt.discount_value,\n      discounttype: response.discunt.discount_type,\n      discounttitle: response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes),\n    });\n    setIsloaded(true);\n  }\n  async function creatediscount(ispricerun) {\n    let skuarray = [];\n    while (skus.length > 0) {\n      let sku_content = skus.splice(0, 25000);\n      skuarray.push(sku_content);\n    }\n    if (errorskus.length > 0) {\n      alert(\"Some skus are overlapping\");\n    } else {\n      let discount_count = 0;\n      setIsloading(true);\n      updatediscount(discount_count);\n      async function updatediscount() {\n        let bodydata = {\n          discountvalue: parseFloat(attributeobj.discountvalue),\n          discounttype: attributeobj.discounttype,\n          componenets: attributeobj.componenets,\n          discountname: attributeobj.discountname,\n          discounttitle: attributeobj.discounttitle,\n          product_attributes: productattr,\n          product_attributes_text: productattrtext,\n          skus: skuarray[discount_count],\n        };\n        console.log(JSON.stringify(productattr));\n        let response = await sendNetworkRequest(\n          \"/creatediscount\",\n          {},\n          bodydata,\n          false\n        );\n\n        discount_count = discount_count + 1;\n        if (skuarray.length > discount_count) {\n          setLoadingtitle(skus.length + \" Left\");\n          updatediscount(discount_count);\n        } else {\n          setIsloading(false);\n          setOpen(true);\n          setIsshowpriceupdate(false);\n\n          window.location = \"/salediscountlist\";\n        }\n      }\n    }\n  }\n  const handleDelete = (chipToDelete) => () => {\n    //setProducts([])\n    let errorindex = errorskus.indexOf(chipToDelete);\n    if (errorindex > -1) {\n      errorskus.splice(errorindex, 1);\n      var erroritems = [];\n      errorskus.forEach((itemname) => {\n        erroritems.push(itemname);\n      });\n      setErrorskus(erroritems);\n    }\n    let index = products.indexOf(chipToDelete);\n    products.splice(index, 1);\n    var items = [];\n    products.forEach((itemname) => {\n      items.push(itemname);\n    });\n    setProducts(items);\n\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  async function filterapllied(value) {\n    var bodydata = {};\n\n    let product_ids = [];\n    let response = await sendNetworkRequest(\n      \"/getaliasproduct\",\n      {},\n      value,\n      false\n    );\n    setProducts(response.products);\n    setSkus(response.skus);\n    setErrorskus(response.eror_skus);\n    setIsloading(false);\n    setTitlecontent(response.title);\n  }\n  async function updateprices() {\n    alert(\"i am here\");\n    var bodydata = {};\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id: products,\n    };\n    setIsshowpriceupdate(true);\n\n    let response = await sendNetworkRequest(\n      \"/productpriceupdate\",\n      {},\n      bodydata,\n      false\n    );\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n      component: \"updateskuprice\",\n    };\n    let response = await sendNetworkRequest(\n      \"/getcomponentpricestatus\",\n      {},\n      bodydata,\n      false\n    );\n\n    setStatusmessage(response.message);\n  }\n  function attributeadded(value) {\n    let componentsstring = {};\n    let attrs = [];\n    let display_arr = [];\n    let keys = Object.keys(value);\n    keys.forEach((key) => {\n      let values = [];\n      let alias_arr = [];\n      value[key].forEach((valueobj) => {\n        values.push(valueobj.name);\n        alias_arr.push(valueobj.alias);\n        attrs.push(valueobj.name);\n      });\n      componentsstring[key] = {\n        values: values,\n        alias: alias_arr,\n      };\n      let displaytext = key + \" : \" + attrs.join(\" , \");\n      display_arr.push(displaytext);\n    });\n    setProductattr(componentsstring);\n    setProductattrtext(display_arr.join(\" | \"));\n    //alert(JSON.stringify(componentsstring))\n    setIsloading(true);\n    //setAttributeobj(value)\n    filterapllied(value);\n  }\n  function valuechange(type, value) {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value,\n    });\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n    fetchOrders();\n    if (\n      props.location.pathname &&\n      props.location.pathname.split(\"/\").length > 2\n    ) {\n      let discount_id = props.location.pathname.split(\"/\")[2];\n      setDiscount_id(discount_id);\n      getdiscountvalue(discount_id);\n    } else {\n      setIsloaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <FullLoader title={loadingtitle} isopen={isloading} />\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Page className={classes.root} title=\"Orders Management List\">\n          {!discount_id ? (\n            <>\n              <VoucherComponent\n                onAdded={attributeadded}\n                className={classes.aboutvoucher}\n              />\n              {products.length > 0 ? (\n                <Products title={titlecontent} products={errorskus} />\n              ) : null}\n              {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n              {isloaded || !discount_id ? (\n                <AboutVoucher\n                  discountcontent={attributeobj}\n                  className={classes.aboutvoucher}\n                  onAdded={valuechange}\n                  categories={[\"Fixed Amount\", \"percentage\"]}\n                />\n              ) : null}\n\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n              <Grid\n                container\n                xs={12}\n                spacing={2}\n                style={{ textAlign: \"center\" }}\n              >\n                <Grid\n                  item\n                  xs={12}\n                  style={{ marginTop: 16, textAlign: \"center\" }}\n                  spacing={2}\n                >\n                  {!isshowpriceupdate ? (\n                    <>\n                      <Button\n                        onClick={() => creatediscount(false)}\n                        color=\"primary\"\n                        style={{ margin: 16 }}\n                        variant=\"contained\"\n                      >\n                        Submit\n                      </Button>\n\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n                    </>\n                  ) : null}\n                </Grid>\n              </Grid>\n            </>\n          ) : (\n            <Grid container xs={12} spacing={2}>\n              <Grid item xs={6} style={{ marginTop: 16 }}>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Name\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discountname}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Title\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttitle}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Value\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttype == 2\n                      ? attributeobj.discountvalue + \"%\"\n                      : attributeobj.discountvalue}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Pricing Compponent\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.displaycomp}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              {attributeobj.allkeys ? (\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  {attributeobj.allkeys.map((row, index) => (\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\n                      <Typography variant=\"body2\" component=\"body2\">\n                        {row}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h5\">\n                        {attributeobj.attributes[row].values}\n                      </Typography>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\n                    <Typography variant=\"body2\" component=\"body2\">\n                      Total Sku\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h5\">\n                      {attributeobj.skucount}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ) : null}\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n                {!isshowpriceupdate ? (\n                  <>\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n                  </>\n                ) : (\n                  <>\n                    {\" \"}\n                    {statusmessage}\n                    <IconButton\n                      aria-label=\"delete\"\n                      onClick={(e) => handlestatus()}\n                      color=\"primary\"\n                    >\n                      <RefreshIcon />\n                    </IconButton>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </Page>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from \"../../context\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { useQuery } from \"react-apollo\";\nimport { materialMaster } from \"../../services/mapper\";\nimport Component from \"./Salediscountcontent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\nexport const Salediscount = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(materialMaster.query);\n  if (loading)\n    return (\n      <div>\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <VoucherProvider\n      value={{\n        data,\n        mapper: materialMaster.mapper,\n        mappertype: \"voucherMaster\",\n      }}\n    >\n      <Component {...props} />\n    </VoucherProvider>\n  );\n});\nexport default Salediscount;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n\n                {columnname.key == \"email\" && !diamond.isedit ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  TaxList,\n  VENDORLISTS,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editEmail, setEditEmail] = React.useState(false);\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    setEditEmail(true);\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\n    );\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl =\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button\n                variant=\"contained\"\n                onClick={() => searrchcontent()}\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => addnewvendor()}\n                color=\"primary\"\n              >\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(\n                                            fileItem,\n                                            columnname.key,\n                                            \"add\"\n                                          );\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key]\n                                            .split(\",\")\n                                            .map((row, index) => (\n                                              <Badge\n                                                overlap=\"circle\"\n                                                anchorOrigin={{\n                                                  vertical: \"top\",\n                                                  horizontal: \"right\",\n                                                }}\n                                                badgeContent={\n                                                  <HighlightOffIcon\n                                                    fontSize=\"small\"\n                                                    onClick={() =>\n                                                      removeimage(\n                                                        row,\n                                                        columnname.key\n                                                      )\n                                                    }\n                                                  />\n                                                }\n                                              >\n                                                <Avatar\n                                                  alt=\"Remy Sharp\"\n                                                  src={row}\n                                                  className={classes.small}\n                                                />\n                                              </Badge>\n                                            ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      props.masters[columnname.mastervaluekey]\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 &&\n                                columnname.type != 6 &&\n                                columnname.type != 8 &&\n                                columnname.type != 9 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n              editemail={editEmail}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography\n                  style={{ textAlign: \"center\", marginTop: 8 }}\n                  component=\"h6\"\n                  variant=\"h5\"\n                >\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterroles = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\n  const [masterpages, setMasterpages] = React.useState([]);\n  const [editroleid, setEditroleid] = React.useState(\"\");\n  const [editpermissons, setEditpermissions] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n    setMastervalue(response.roles);\n    setFiltervalue(response.roles);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n  async function showpermissions(rowcontent) {\n    let response = await sendNetworkRequest(\n      \"/getrolepermissions\",\n      {},\n      { role_id: rowcontent.id }\n    );\n    setEditpermissions(response.permissions);\n    setEditroleid(rowcontent.id);\n    setIsshowpermissions(true);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent) {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id: editroleid,\n    };\n    console.log(JSON.stringify(bodydata));\n    setIsshowpermissions(false);\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\n    getmaster();\n  }\n  function cancelpermissions(rowcontent) {\n    setIsshowpermissions(false);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? (\n          <Addpermissions\n            role_id={editroleid}\n            isopen={isshowpermissions}\n            permissions={editpermissons}\n            pages={masterpages}\n            onClose={cancelpermissions}\n            onSave={updatepermissions}\n          />\n        ) : null}\n        <Mastercontent\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onPermissionadd={showpermissions}\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterroles;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterscreens = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Master Screens\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterscreens;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Manageadminusers = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [masterroles, setMasterroles] = React.useState([]);\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let roles = [];\n    taxcontent.roles.forEach((element) => {\n      roles.push(element.name);\n    });\n    let bodydata = {\n      username: taxcontent.username,\n      password: \"123456789\",\n      email: taxcontent.email,\n      roles: roles,\n    };\n\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\n    getmaster();\n  }\n  async function getmasterroles() {\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n\n    setMasterroles(response.roles);\n\n    getmaster();\n  }\n  async function getmaster() {\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\n    let adminusers = response.users;\n    let users = [];\n    adminusers.forEach((element) => {\n      let userobj = {};\n      userobj[\"id\"] = element.id;\n      userobj[\"username\"] = element.username;\n      userobj[\"password\"] = element.password;\n      userobj[\"email\"] = element.email;\n      userobj[\"mobile\"] = element.mobile;\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\n      let roles = [];\n      let rolesnames = [];\n\n      let userroles = element.user_roles;\n      userroles.forEach((userroleobj) => {\n        let roleobj = {};\n        roleobj[\"id\"] = userroleobj.master_role.id;\n        roleobj[\"name\"] = userroleobj.master_role.name;\n        roles.push(roleobj);\n        rolesnames.push(userroleobj.master_role.name);\n      });\n      userobj[\"roles\"] = roles;\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\n      users.push(userobj);\n    });\n\n    setFiltervalue(users);\n    setMastervalue(users);\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Admin Users\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          masters={masterroles}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Manageadminusers;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import gql from \"graphql-tag\";\n\nlet CREATE_HOLIDAY = gql`\n  mutation ($item: HolidayManagerInput!) {\n    createHolidayManager(input: { holidayManager: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_HOLIDAY = gql`\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_HOLIDAY = gql`\n  mutation ($id: Int!) {\n    deleteHolidayManagerById(input: { id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nlet CREATE_WAREHOUSE = gql`\n  mutation ($item: WarehouseInput!) {\n    createWarehouse(input: { warehouse: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_WAREHOUSE = gql`\n  mutation ($id: Int!, $item: WarehousePatch!) {\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_WAREHOUSE = gql`\n  mutation ($id: Int!) {\n    deleteWarehouseById(input: { id: $id }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet CREATE_INVENTORY = gql`\n  mutation ($item: InventoryInput!) {\n    createInventory(input: { inventory: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_INVENTORY = gql`\n  mutation ($id: UUID!, $item: InventoryPatch!) {\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_INVENTORY = gql`\n  mutation ($id: UUID!) {\n    deleteInventoryById(input: { id: $id }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  CREATE_HOLIDAY,\n  UPDATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  CREATE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  CREATE_INVENTORY,\n  UPDATE_INVENTORY,\n  DELETE_INVENTORY,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HolidayModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Holiday\"}\n              name=\"holiday\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.holiday}\n              onChange={props.editItem}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.inputField}\n                label={\"Date\"}\n                name=\"date\"\n                fullWidth\n                inputVariant=\"outlined\"\n                value={props.item.date}\n                onChange={(_, value) => props.editItem(value, \"date\")}\n                format={\"yyyy-MM-dd\"}\n              />\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HolidayModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  UPDATE_HOLIDAY,\n} from \"../../graphql/mutation\";\nimport { HOLIDAYLIST } from \"../../graphql/query\";\nimport HolidayModal from \"./HolidayModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport const HolidayManager = (props) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    HOLIDAYLIST,\n    {\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\n\n  const editItem = (event, type) => {\n    var name, value;\n    if (type == \"date\") {\n      name = type;\n      value = event;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ holiday: \"\", date: null });\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_HOLIDAY,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_HOLIDAY,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_HOLIDAY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    // console.log(file);\n    axios\n      .post(API_URL + \"/addholidays\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully added holidays!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Holiday Manager</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Holidays\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/holidays.csv\";\n            a.setAttribute(\"download\", \"holidays.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Holiday\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Holiday</TableCell>\n                <TableCell align={\"center\"}>Date</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || NetworkStatus.refetch === networkStatus) && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>No Holidays found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allHolidayManagers?.nodes.length > 0 &&\n                data?.allHolidayManagers?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.holiday}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allHolidayManagers?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <HolidayModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst WarehouseModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Warehouse-Modal\"}\n    >\n      <DialogTitle\n        id=\"Warehouse-Modal\"\n        disableTypography\n        className={classes.root}\n      >\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Name\"}\n              name=\"name\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.name}\n              onChange={props.editItem}\n            />\n            <TextField\n              className={classes.inputField}\n              label={\"Shipping In Days\"}\n              name=\"shippingInDays\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.shippingInDays}\n              onChange={props.editItem}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WarehouseModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  Switch,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n} from \"../../graphql/mutation\";\nimport { WAREHOUSELIST } from \"../../graphql/query\";\nimport WarehouseModal from \"./WarehouseModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\n\nexport const Warehouse = (props) => {\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\n\n  const editItem = (event) => {\n    var { name, value } = event.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ name: \"\", shippingInDays: \"\" });\n  };\n\n  const handleSave = () => {\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\n    if (type === \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_WAREHOUSE,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_WAREHOUSE,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setOpen(false);\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      client\n        .mutate({\n          mutation: DELETE_WAREHOUSE,\n          variables: {\n            id: item.id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleSwitch = (id, isActive) => {\n    client\n      .mutate({\n        mutation: UPDATE_WAREHOUSE,\n        variables: {\n          id,\n          item: { isActive: !isActive, updatedAt: new Date() },\n        },\n      })\n      .then((res) => {\n        if (res) {\n          onClose();\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully Updated!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        onClose();\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Warehouse</Typography>\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Warehouse\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Name</TableCell>\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Status</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allWarehouses?.nodes.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No Warehouses found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allWarehouses?.nodes.length > 0 &&\n                data?.allWarehouses?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.shippingInDays}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <Switch\n                        checked={item.isActive}\n                        onChange={() => handleSwitch(item.id, item.isActive)}\n                        name=\"active\"\n                        color=\"primary\"\n                      />\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <WarehouseModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst InventoryModal = (props) => {\n  const classes = useStyles();\n  const { loading, data } = useQuery(WAREHOUSELIST);\n\n  const client = useApolloClient();\n  const [error, setError] = React.useState(false);\n\n  const validateGeneratedSku = (generatedSku) => {\n    client\n      .mutate({\n        mutation: VALIDATEGENERATEDSKU,\n        variables: { generatedSku },\n      })\n      .then((res) => {\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\n          setError(\"Tag No doesn't exists!\");\n        } else {\n          setError(false);\n        }\n      });\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              required\n              label={\"Tag No\"}\n              name=\"generatedSku\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.generatedSku}\n              onChange={props.editItem}\n              error={Boolean(error)}\n              helperText={error}\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\n            />\n            <TextField\n              className={classes.inputField}\n              required\n              type={\"Number\"}\n              label={\"Quantity\"}\n              name=\"numberOfItems\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.numberOfItems}\n              onChange={props.editItem}\n            />\n            <Autocomplete\n              loading={loading}\n              options={data?.allWarehouses?.nodes}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              value={props.item.warehouse}\n              onChange={props.editItem}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Warehouse\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InventoryModal;\n","import React from \"react\";\nimport {\n  Badge,\n  Grid,\n  IconButton,\n  InputAdornment,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_INVENTORY,\n  DELETE_INVENTORY,\n  UPDATE_INVENTORY,\n} from \"../../graphql/mutation\";\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\nimport InventoryModal from \"./InventoryModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { v4 as uuid } from \"uuid\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport moment from \"moment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  iconButton: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n  searchInput: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 8,\n    },\n  },\n}));\n\nconst StockStatus = (props) => {\n  const classes = useStyles();\n  const { data } = useQuery(STOCKSTATUS);\n  return (\n    <>\n      {data &&\n        data.allWarehouses.nodes.length > 0 &&\n        data.allWarehouses.nodes.map((item, index) => (\n          <Badge\n            badgeContent={\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\n            }\n            max={99999999}\n            color={\"error\"}\n            key={index}\n            component=\"div\"\n            className={classes.iconButton}\n            overlap=\"circle\"\n          >\n            <IconButton\n              disableRipple\n              className={classes.icon}\n              onClick={() => {\n                props.setWarehouse(item?.name);\n              }}\n            >\n              <StoreIcon\n                style={{ fontSize: 35 }}\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\n              />\n            </IconButton>\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\n          </Badge>\n        ))}\n    </>\n  );\n};\n\nexport const Inventory = (props) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [search, setSearch] = React.useState(null);\n  const [warehouse, setWarehouse] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    INVENTORYLIST,\n    {\n      variables: {\n        first: rowsPerPage,\n        offset: page * rowsPerPage,\n        filter: {\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\n          warehouseByWarehouseId: {\n            name: {\n              includesInsensitive: warehouse,\n            },\n          },\n        },\n      },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({\n    generatedSku: \"\",\n    numberOfItems: \"\",\n    warehouse: { id: \"\", name: \"\" },\n  });\n\n  const editItem = (event, newValue) => {\n    var name, value;\n    if (newValue) {\n      console.log(newValue);\n      name = \"warehouse\";\n      value = newValue;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n  };\n\n  const handleSave = () => {\n    if (type === \"Edit\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: UPDATE_INVENTORY,\n          variables: {\n            id,\n            item: {\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n              updatedAt: new Date(),\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_INVENTORY,\n          variables: {\n            item: {\n              id: uuid(),\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_INVENTORY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    console.log(file);\n    axios\n      .post(API_URL + \"/addinventories\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: res.data.message || \"Successfully uploaded!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Inventory</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Inventory\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/inventory.csv\";\n            a.setAttribute(\"download\", \"inventory.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n            setItem({\n              generatedSku: \"\",\n              numberOfItems: \"\",\n              warehouse: { id: \"\", name: \"\" },\n            });\n          }}\n        >\n          <Tooltip title=\"Add Inventory\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n        <TextField\n          className={classes.searchInput}\n          name=\"tagno\"\n          placeholder=\"Search Tag No.\"\n          size=\"medium\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Tag No</TableCell>\n                <TableCell align={\"center\"}>Quantity</TableCell>\n                <TableCell align={\"center\"}>Warehouse</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || networkStatus === NetworkStatus.refetch) && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allInventories?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No items in inventory!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allInventories?.nodes.length > 0 &&\n                data?.allInventories?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.generatedSku}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.numberOfItems}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.warehouse.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={6}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allInventories?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <InventoryModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"17px\",\n        marginTop: \"25px\",\n      }}\n    >\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h2\n          className=\"products\"\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\n        >\n          Products\n        </h2>\n      </Grid>\n      <Grid\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        lassName=\"column\"\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n      >\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n          <Button\n            className=\"product\"\n            id=\"one\"\n            color=\"primary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns columnclose={handleClose} />\n          </Popover>\n        </Grid>\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n          <Button\n            id=\"create\"\n            className=\"product\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n          >\n            CREATE PRODUCT\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst CmsHome = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          CMS Complete List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                NAC Banners\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                Featured Product\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                Customers Reviews\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CmsHome;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Landing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\"> - Landing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Mobile Image</TableCell>\n                <TableCell>Desktop Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}`}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.mobile} */}\n                      <img alt=\"nacimages\" src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLISTINGPAGE, CREATESILVERLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n    debugger;\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        debugger;\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                     \n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img src={val.web} alt=\"nacimages\" style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nimport { CREATESPECIFICLISTINGPAGE, ALLSPECIFICLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\n\nfunction SpecificListPages(props) {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSPECIFICLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESPECIFICLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Specific Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Specific Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Banner's Page Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL + val.urlParam}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL + val.urlParam}`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n}\n\nexport default SpecificListPages;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport {\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n} from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingBottom = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n        }),\n      };\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLISTINGBOTTOMBANNER,\n        variables: { id: id },\n      }),\n    };\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +\"1\",\n      url: \"#\",\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGBOTTOMBANNER,\n        variables: create_banner_data,\n      }),\n    };\n  \n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Listing Page - Bottom Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Listing Page - Bottom Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            {/* <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Banner Image</TableCell>\n                {/* <TableCell>Desktop Image</TableCell> */}\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}/silver-jewellery`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}/silver-jewellery`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingBottom;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingRoutingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam : \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERROUTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORISILVERROUTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC Listing Routing Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Router Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Router Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\n                      {val.urlParam}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingRoutingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nimport SilverListingPage from \"./components/silverlistingpage\";\nimport SpecificListPages from \"./components/specificListPages\";\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\nimport SilverListingBottom from \"./components/silverbottmpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <SilverLandingPage />\n      <SilverListingPage />\n      <SpecificListPages />\n      <SilverListingBottom />\n      {/* <SilverListingRoutingPage /> */}\n    </>\n  );\n};\nexport default Silverbanner;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SilverListingPage from \"../components/silverlistingpage\";\nimport { Breadcrumbs } from \"../../../../components\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <SilverListingPage />\n      {/* <SilverListingRoutingPage /> */}\n      {/* <SilverLandingPage /> */}\n    </>\n  );\n};\nexport default SilverListingbanner;\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { API_URL } from \"../../config\";\nimport { isString } from \"util\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Chip } from \"@material-ui/core\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  variantFontSize: {\n    fontSize: \".9rem\",\n  },\n  variantMarginTop: {\n    marginTop: \"20px\",\n  },\n}));\nexport function CreateVariant(props) {\n  const classes = useStyle();\n  let prod_id = props.productId;\n  let colors = [];\n  let purities = [];\n  let diamondtypes = [];\n  let oldpurity = [];\n\n  const TOKEN = \"token\";\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\n    colors.push(colorobj.productColor);\n  });\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\n    purities.push(colorobj.purity);\n    oldpurity.push(colorobj);\n  });\n\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\n    diamondtypes.push(diamondobj.diamondType);\n  });\n\n  const [variant, setVariant] = useState({\n    metal_color: [],\n    metal_purity: [],\n    diamond_color: [],\n    diamond_clarity: [],\n    variant_diamond_type: [],\n    product_images: {},\n    size: [],\n  });\n\n  function handleMetalColor(status_data) {\n    let color = variant.metal_color;\n    color.some((color_data) => color_data.id === status_data.id)\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\n      : color.push(status_data);\n    setVariant({\n      ...variant,\n      metal_color: color,\n    });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    let color_arr = [];\n    value.map((color, index) => {\n      if (\n        productCtx.productMetalColor.some(\n          (item) => item.productColor === color.productColor\n        )\n      ) {\n      } else {\n        let color_obj = {\n          ...color,\n          metal_color: color.productColor,\n        };\n        color_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      metal_color: color_arr,\n    });\n\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n  };\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\n    alert(url);\n    url = API_URL + url;\n    console.info(\"URL\", url, data);\n    const method = data ? \"POST\" : \"GET\",\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    let resdata = null;\n    if (auth) {\n      const token = localStorage.getItem(TOKEN);\n      if (token) headers[\"auth\"] = token;\n      else window.location = \"/\";\n    }\n    const response = await fetch(url, {\n      method,\n      body: isString(data) ? data : JSON.stringify(data),\n      headers,\n    });\n\n    if (response.status < 400) {\n      resdata = await response.json();\n    } else {\n      alert(\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\n      );\n    }\n    return resdata;\n  };\n\n  const handleMetalPurity = (type) => (event, value) => {\n    let purity_arr = [];\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    value.map((color, index) => {\n      let color_obj = {\n        ...color,\n        purity: color.purity,\n      };\n      purity_arr.push(color_obj);\n    });\n    setVariant({\n      ...variant,\n      metal_purity: purity_arr,\n    });\n  };\n  // function handleMetalPurity(status_data) {\n  //     status_data.metal_weight = \"\";\n  //     status_data.error_message = false;\n  //     // alert(JSON.stringify(status_data));\n  //     let purity = variant.metal_purity;\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         metal_purity: purity\n  //     })\n  // }\n  const diamondTypeChange = (type) => (event, value) => {\n    let diamondtype_arr = [];\n    value.map((color, index) => {\n      if (color.label) {\n        let color_obj = {\n          ...color,\n          diamondType: color.label,\n        };\n        diamondtype_arr.push(color_obj);\n      } else {\n        let color_obj = {\n          ...color,\n          diamondType: color.diamondType,\n        };\n        diamondtype_arr.push(color_obj);\n      }\n\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n      //    }else{ let color_obj = {\n      //         ...color,\n      //         diamondType: color.label\n      //     }\n      //     diamondtype_arr.push(color_obj)\n      //   }\n    });\n    setVariant({\n      ...variant,\n      variant_diamond_type: diamondtype_arr,\n    });\n    alert(JSON.stringify(value));\n    setProductCtx({\n      ...productCtx,\n      [type]: diamondtype_arr,\n    });\n  };\n\n  // function diamondTypeChange(status_data){\n  //     let diamond__type = variant.variant_diamond_type;\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         variant_diamond_type: diamond__type\n  //     })\n  // }\n\n  const sizeChange = (type) => (event, value) => {\n    let size_arr = [];\n    value.map((color, index) => {\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\n      } else {\n        let color_obj = {\n          ...color,\n          label: color,\n        };\n        size_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      size: size_arr,\n    });\n  };\n  // function sizeChange(status_data) {\n  //     let variantSize = variant.size;\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         size: variantSize\n  //     })\n\n  // }\n\n  function setMetalWeightInput(e, metalPurityId) {\n    // alert(e.target.value)\n    let metalWeight = variant.metal_purity;\n    metalWeight =\n      metalWeight &&\n      metalWeight.map((metal_weight, index) => {\n        if (metalPurityId === metal_weight.id) {\n          metal_weight.metal_weight = e.target.value;\n        }\n        return metal_weight;\n      });\n    setVariant({\n      ...variant,\n      metal_purity: metalWeight,\n    });\n  }\n  function saveCreateVariant() {\n    let createVariant = {\n      productId: prod_id,\n      productMetalcoloursByProductId: variant.metal_color,\n      productPuritiesByProductId: variant.metal_purity,\n      productDiamondTypes: variant.variant_diamond_type,\n      productSize: variant.size,\n      product_images: variant.product_images,\n      // productImage:variant.product_images\n    };\n\n    let metal_color_image_length = Object.entries(variant.product_images);\n    let metal_purity_weight = false;\n    let metal_purity =\n      variant.metal_purity &&\n      variant.metal_purity.map((metal_weight_check) => {\n        if (metal_weight_check.metal_weight === \"\") {\n          metal_weight_check.error_message = true;\n          metal_purity_weight = true;\n        }\n        return metal_weight_check;\n      });\n    variant[\"metal_purity\"] = metal_purity;\n    setVariant({\n      ...variant,\n      variant,\n    });\n    if (metal_color_image_length.length !== variant.metal_color.length) {\n      alert(\"Select Metal Color Images\");\n    }\n    if (\n      (variant.metal_color.length > 0 &&\n        variant.metal_color.length === metal_color_image_length.length) ||\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\n      variant.size.length > 0 ||\n      variant.variant_diamond_type.length > 0\n    ) {\n      let createVariants = productCtx.createVariantList;\n      let editVariants = productCtx.editVariants;\n      let variants = productCtx.variants;\n      let productImages = productCtx.productImages;\n      productImages = [...productImages, variant.product_images];\n      createVariants.push(createVariant);\n      let params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(createVariant),\n      };\n    } else {\n      alert(\"please fill the Create variant\");\n    }\n  }\n  function backToProductAttribute() {\n    props.changeVariant();\n  }\n  async function uploadimagetoserver(\n    bodaydata,\n    imageposition,\n    imagecolor,\n    uploadtype\n  ) {\n    let prodimages = variant.product_images;\n    // if(true)\n    // {\n    var prodid = prod_id;\n    let imagecolourobj = variant.product_images[imagecolor];\n    var imagecount = 1;\n    if (imagecolourobj) {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        product_id: prodid,\n      },\n      false\n    );\n    var returnData =\n      responsedata && responsedata.data && responsedata.data.returnData;\n    var signedRequest = returnData && returnData.signedRequest;\n    var url = returnData && returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData && returnData.filepath;\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (imagecolourobj) {\n      const imageobj = {\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      if (uploadtype === \"edit\") {\n        imagecolourobj[imageposition] = imageobj;\n      } else {\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    } else {\n      const imageobj = {\n        name: prodid + \"_1\" + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj);\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setVariant({ ...variant, product_images: prodimages });\n    // setFiles([])\n    // }\n\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          fullWidth\n          margin=\"dense\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.productColor}\n          getOptionDisabled={(option) =>\n            colors.indexOf(option.productColor) > -1\n          }\n          defaultValue={productCtx.oldproductMetalColor}\n          options={productCtx.masterData.metalcolour}\n          value={productCtx.productMetalColor}\n          onChange={handleoptionChange(\"productMetalColor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.productColor}\n                {...getTagProps({ index })}\n                disabled={colors.indexOf(option.productColor) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Colours\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          margin=\"dense\"\n          getOptionLabel={(option) => option.name}\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\n          defaultValue={productCtx.oldproductMetalPurity}\n          options={productCtx.masterData.metalpurity}\n          value={productCtx.productMetalPurity}\n          onChange={handleMetalPurity(\"productMetalPurity\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.purity}\n                {...getTagProps({ index })}\n                disabled={purities.indexOf(option.purity) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n\n        {productCtx.productMetalPurity &&\n          productCtx.productMetalPurity.map((metal_purity) => (\n            <TextField\n              key={metal_purity.id}\n              className={classes.helperinput}\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n              type=\"number\"\n              value={metal_purity.metal_weight}\n              id=\"metal_weight\"\n              error={metal_purity && metal_purity.error_message}\n              name=\"metal_weight\"\n              label={`Weight ${metal_purity.purity}`}\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n            />\n          ))}\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.label}\n          getOptionDisabled={(option) =>\n            diamondtypes.indexOf(option.label) > -1\n          }\n          defaultValue={productCtx.oldproductDiamondTypesArray}\n          options={productCtx.masterData.diamondtypes}\n          value={\n            productCtx.productDiamondTypesArray\n              ? productCtx.productDiamondTypesArray\n              : []\n          }\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.diamondType}\n                {...getTagProps({ index })}\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Diamond Types\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            fullWidth\n            getOptionLabel={(option) => option}\n            options={productCtx.productVariantSize}\n            value={productCtx.variant_size}\n            onChange={sizeChange(\"productSizes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sizes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        ) : null}\n      </Grid>\n\n      {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n\n      <Grid container>\n        {variant.metal_color === undefined\n          ? null\n          : variant.metal_color.map((value, index) => (\n              <Grid xs={12} container spacing={1} item>\n                <Grid xs={12} item>\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                    {value.productColor}\n                  </Typography>\n                </Grid>\n                <Grid xs={12} sm={12} md={12} item>\n                  <FilePond\n                    allowImageValidateSize\n                    imageValidateSizeMinWidth=\"2400\"\n                    imageValidateSizeMinHeight=\"2400\"\n                    imageValidateSizeMeasure={(file) =>\n                      new Promise((resolve, reject) => {})\n                    }\n                    labelIdle=\"Upload Image\"\n                    allowMultiple={true}\n                    //files = {files}\n                    onupdatefiles={(fileItem) => {\n                      // Set currently active file objectsfiles to this.state\n                    }}\n                    onaddfile={(error, fileItem) => {\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\n                    }}\n                    onremovefile={(error, fileItem) => {}}\n                    fileRenameFunction={(file) =>\n                      new Promise((resolve) => {\n                        var prodid = prod_id;\n                        let imagecolourobj = variant.product_images[value.name];\n                        var imagecount = 1;\n                        if (imagecolourobj) {\n                          imagecount = imagecolourobj.length + 1;\n                        }\n                        let imagename =\n                          prodid +\n                          \"_\" +\n                          imagecount +\n                          value.name.charAt(0) +\n                          file.extension;\n                        resolve(imagename);\n                      })\n                    }\n                  ></FilePond>\n                </Grid>\n              </Grid>\n            ))}\n      </Grid>\n      {\n        <Grid\n          container\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"16px\",\n          }}\n        >\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => saveCreateVariant()}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item>\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n          </Grid>\n        </Grid>\n      }\n    </Grid>\n  );\n}\nexport default CreateVariant;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    \"&:hover\": {\n      backgroundColor: colors.green[900],\n    },\n  },\n}));\n\nconst EditDiamond = (props) => {\n\n\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id: diamond.id,\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\n    diamonditemname: diamond.diamonditemname ?? \"\",\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\n    diamonddescription: diamond.diamonddescription ?? \"\",\n    diamondclarity: diamond.diamondClarity ?? \"\",\n    diamondtype: diamond.diamondType ?? \"\",\n    diamondcolor: diamond.diamondColour ?? \"\",\n  };\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n \n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            Diamond Details\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamonditemname}\n            placeholder={\"Item Name\"}\n            name=\"size\"\n            label=\"Item Name\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamonditemname\")}\n          />{\" \"}\n          {/* <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamondsubitemname}\n            label=\"SubItem Name\"\n            placeholder={\"Diamond SubItem Name\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamondsubitemname\")}\n          />{\" \"} */}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamonddescription}\n            placeholder={\"Diamond Description\"}\n            name=\"size\"\n            label=\"Description\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamonddescription\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamondweight}\n            placeholder={\"Weight\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            label=\"Weight\"\n            onChange={handleInputChange(\"diamondweight\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            placeholder=\"#of Stones\"\n            name=\"size\"\n            type=\"number\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamondcount\")}\n            value={editcontent.diamondcount}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            options={productCtx.masterData.diamondsettings}\n            value={editcontent.diamondsettings}\n            onChange={handleoptionChange(\"diamondsettings\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Setting\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondshape}\n            options={productCtx.masterData.diamondshapes}\n            onChange={handleoptionChange(\"diamondshape\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Shape\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                label=\"Shape\"\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondcolor}\n            options={productCtx.masterData.diamondcolors}\n            onChange={handleoptionChange(\"diamondcolor\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Color\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />{\" \"}\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondclarity}\n            options={productCtx.masterData.diamondclarities}\n            onChange={handleoptionChange(\"diamondclarity\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Clarity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondtype}\n            options={productCtx.masterData.diamondtypes}\n            onChange={handleoptionChange(\"diamondtype\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditDiamond;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\n  { id: \"Description\", label: \"Description\" },\n  { id: \"Colour\", label: \"Colour\" },\n  { id: \"Clarity\", label: \"Clarity\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  { id: \"Amount\", label: \"Amount\" },\n  { id: \"Carat\", label: \"Per Carat\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Shape\", label: \"Shape\" },\n\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 80,\n    maxWidth: 80,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: \"flex\",\n\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit: JSON.parse(JSON.stringify(diamondData)),\n    });\n\n    setProductCtx({\n      ...productCtx,\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\n        (settingData, index) => settingData.name === diamondData.diamondSettings\n      )[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter(\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\n      )[0],\n      diamondcount: diamondData.stoneCount,\n      diamondweight: diamondData.stoneWeight,\n      diamonditemname: diamondData.itemName,\n      diamondsubitemname: diamondData.subItemName,\n      diamonddescription: diamondData.description,\n    });\n    setEditcontent({\n      id: diamondData.id,\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\n        (settingData, index) => settingData.name === diamondData.diamondSettings\n      )[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter(\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\n      )[0],\n      diamondcount: diamondData.stoneCount,\n      diamondweight: diamondData.stoneWeight,\n      diamonditemname: diamondData.itemName,\n      diamondsubitemname: diamondData.subItemName,\n      diamonddescription: diamondData.description,\n    });\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true);\n  }\n  async function DiamondSave(diamondobj) {\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {};\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\n      let list_data = props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\n        if (diamondobj.id === diamondListData.id) {\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\n          bodydata[\"diamondid\"] = diamondobj.id;\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\n          bodydata[\"description\"] = diamondobj.diamonddescription;\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\n          return diamondListData;\n        }\n        return diamondListData;\n      });\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\n\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   })\n      //   : editDiamondLists.push(editDiamondList);\n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null);\n      setOpenedit(false);\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    window.location.reload();\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        {/* <CircularProgress color=\"secondary\"/> */}\n\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond &&\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.itemName}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.subItemName}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.description}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondColour}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondClarity}\n                  </TableCell>\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        style={{ width: 40 }}\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"diamondweight\")}\n                        value={productCtx.diamondweight}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                      {row.stoneWeight}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        style={{ width: 40 }}\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"#of Stones\"\n                        name=\"size\"\n                        type=\"number\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"diamondcount\")}\n                        value={productCtx.diamondcount}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                      {row.stoneCount}\n                    </TableCell>\n                  )}\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneAmount}\n                  </TableCell>\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.diamondsettings}\n                        options={productCtx.masterData.diamondsettings}\n                        onChange={handleoptionChange(\"diamondsettings\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Diamond Setting\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.diamondSettings}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.diamondshape}\n                        options={productCtx.masterData.diamondshapes}\n                        onChange={handleoptionChange(\"diamondshape\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Diamond Shape\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.diamondShape}\n                    </TableCell>\n                  )}\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align=\"center\" style={{ width: 80 }}>\n                      <Button onClick={(e) => DiamondSave(row.id)}>\n                        <SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}>\n                        <CancelIcon />\n                      </Button>\n                    </TableCell>\n                  ) : (\n                    <TableCell align=\"center\" style={{ width: 80 }}>\n                      <Button onClick={(e) => DiamondEdit(row)}>\n                        <EditIcon />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            {emptyRows == 0 ? (\n              <>\n                <TableRow style={{ height: 1 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              </>\n            ) : null}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.diamond && props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    \"&:hover\": {\n      backgroundColor: colors.green[900],\n    },\n  },\n}));\n\nconst EditGemstone = (props) => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id: diamond.id,\n    gemstonesettings: diamond?.gemstonesettings ?? null,\n    gemstonecount: diamond?.gemstonecount ?? \"\",\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\n    gemstonesize: diamond?.gemstonesize ?? \"\",\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\n    gemstoneshape: diamond?.gemstoneshape ?? null,\n    gemstonetype: diamond?.gemstonetype ?? null,\n  };\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n    // alert(JSON.stringify(editcontent.gemstonecount))\n  }, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            Gemstone Details\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstoneitemname}\n            placeholder={\"Item Name\"}\n            name=\"size\"\n            label=\"Item Name\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstoneitemname\")}\n          />{\" \"}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonesubitemname}\n            label=\"SubItem Name\"\n            placeholder={\"Diamond SubItem Name\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonesubitemname\")}\n          />{\" \"}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonedescription}\n            placeholder={\" Description\"}\n            name=\"size\"\n            label=\"Description\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonedescription\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonesize}\n            label=\"Size\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonesize\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            label=\"Weight\"\n            margin=\"dense\"\n            value={editcontent.gemstoneweight}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstoneweight\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            placeholder=\"#of Stones\"\n            name=\"size\"\n            type=\"number\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonecount\")}\n            value={editcontent.gemstonecount}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            options={productCtx.masterData.gemstonesettings}\n            value={editcontent.gemstonesettings}\n            onChange={handleoptionChange(\"gemstonesettings\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\" Setting\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.name}\n            value={editcontent.gemstoneshape}\n            options={productCtx.masterData.gemstonshapes}\n            onChange={handleoptionChange(\"gemstoneshape\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Shape\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.gemstonetype}\n            options={productCtx.masterData.gemstontypes}\n            onChange={handleoptionChange(\"gemstonetype\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditGemstone;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\n  { id: \"SubItemName\", label: \"SubItem Name\" },\n  { id: \"Description\", label: \"Description\" },\n\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  { id: \"Amount\", label: \"Amount\" },\n  { id: \"Carat\", label: \"Per Carat\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Shape\", label: \"Shape\" },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 120,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\n    });\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n      gemstoneitemname: gemstoneData.itemName,\n      gemstonesubitemname: gemstoneData.subItemName,\n      gemstonedescription: gemstoneData.description,\n      gemstonetype: gemstoneData.gemstoneType,\n    });\n    setEditcontent({\n      id: gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n      gemstoneitemname: gemstoneData.itemName,\n      gemstonesubitemname: gemstoneData.subItemName,\n      gemstonedescription: gemstoneData.description,\n      gemstonetype: gemstoneData.gemstoneType,\n    });\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n    setOpenedit(true);\n  }\n  async function GemstoneSave(gemdata) {\n    if (\n      gemdata.gemstonesettings &&\n      gemdata.gemstoneshape &&\n      gemdata.gemstonecount &&\n      gemdata.gemstoneweight &&\n      gemdata.gemstonesize\n    ) {\n      let list_data = props.gemstone;\n      var bodydata = {};\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\n          bodydata[\"id\"] = gemdata.id;\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\n          bodydata[\"description\"] = gemdata.gemstonedescription;\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\n\n          return gemstoneListData;\n        }\n\n        return gemstoneListData;\n      });\n\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\n      let editGemstoneList =\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\n        let status =\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\n            ? (editGemstoneLists =\n                editGemstoneLists &&\n                editGemstoneLists.map((gemstone_list, index) => {\n                  if (gemstone_list.id === editGemstoneList.id) {\n                    return editGemstoneList;\n                  }\n                  return gemstone_list;\n                }))\n            : editGemstoneLists.push(editGemstoneList);\n      }\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\",\n      });\n      setEditcontent(null);\n      setOpenedit(false);\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    window.location.reload();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone &&\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneType}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.itemName}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.subItemName}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.description}\n                  </TableCell>\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Gemstone Size\"\n                        name=\"size\"\n                        onChange={handleInputChange(\"gemstonesize\")}\n                        autoComplete=\"size\"\n                        value={productCtx.gemstonesize}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneSize}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"gemstoneweight\")}\n                        value={productCtx.gemstoneweight}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.stoneWeight}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"#of Stones\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"gemstonecount\")}\n                        value={productCtx.gemstonecount}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.stoneCount}\n                    </TableCell>\n                  )}\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneAmount}\n                  </TableCell>\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.gemstonesettings}\n                        options={productCtx.masterData.gemstonesettings}\n                        onChange={handleoptionChange(\"gemstonesettings\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Gemstone Setting\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneSetting}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.gemstoneshape}\n                        options={productCtx.masterData.gemstonshapes}\n                        onChange={handleoptionChange(\"gemstoneshape\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Gemstone Shape\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneShape}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\n                        <SaveIcon />\n                      </Button>\n                    </TableCell>\n                  ) : (\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}>\n                        <EditIcon />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\n  { id: \"Default\", label: \"Default\" },\n  {\n    id: \"Active\",\n    label: \"Active\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {}\n\n  const handleChangeswitch = (name) => (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n\n    //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime: diamondData.vendorDeliveryTime,\n      discount: diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault: diamondData.isdefault,\n      editisactive: diamondData.isActive,\n    });\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(id) {\n    var bodydata = {};\n    if (productCtx.editleadtime) {\n      let list_data = props.variants;\n      let Skuchangedata = list_data.map((skulistdata, index) => {\n        if (id === skulistdata.generatedSku) {\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive = productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\n\n          skulistdata.discountDesc = productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\n          bodydata[\"isActive\"] = productCtx.editisactive;\n          bodydata[\"discount\"] = productCtx.discount;\n\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\n          bodydata[\"generatedSku\"] = id;\n          console.log(JSON.stringify(bodydata));\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.generatedSku}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        scope=\"row\"\n                      >\n                        {row.metalColor}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.purity}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuWeight}\n                      </TableCell>\n                    ) : null}\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuSize}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editleadtime}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Vendor Lead Time\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"editleadtime\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.vendorDeliveryTime}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.discount}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"discount\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountDesc}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editreadytoship\n                              : row.isReadyToShip\n                          }\n                          // onChange={()=>handleChange(row.id)}\n                          value=\"checkedA\"\n                          // onChange={handleChangeswitch('editreadytoship')}\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editreadytoship\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisdefault\n                              : row.isdefault\n                          }\n                          value=\"checkedA\"\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisdefault\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Switch\n                          checked={row.isActive}\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisactive\n                              : row.isActive\n                          }\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisactive\")\n                              : null\n                          }\n                          value=\"checkedA\"\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 20 }} align=\"center\">\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\" style={{ width: 20 }}>\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Typography,\n  Button,\n  Chip,\n  Input,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\n  { id: \"Markup Price\", label: \"Markup Price\" },\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\n  { id: \"Discount Price\", label: \"Discount Price\" },\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\n  { id: \"Discount\", label: \"Discount\" },\n\n  {\n    id: \"Disable\",\n    label: \"Price Update\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: \"\",\n  });\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\n\n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku: diamondData.generatedSku,\n    };\n    console.log(JSON.stringify(bodydata));\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    setEditcontent({\n      id: diamondData.generatedSku,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(priceobj) {\n    var bodydata = {};\n    let list_data = props.variants;\n    let Skuchangedata = list_data.map((skulistdata, index) => {\n      if (priceobj.id === skulistdata.generatedSku) {\n        skulistdata.costPrice = priceobj.editcostprice;\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\n        skulistdata.sellingPrice = priceobj.editsellingprice;\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\n        skulistdata.markupPrice = priceobj.editmarkupprice;\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\n        skulistdata.discountPrice = priceobj.editdiscountprice;\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\n\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\n        bodydata[\"discountPriceTax\"] = parseFloat(\n          priceobj.editdiscountpricetax\n        );\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\n          priceobj.marginOnSalePercentage\n        );\n\n        bodydata[\"generatedSku\"] = priceobj.id;\n        return skulistdata;\n      }\n      return skulistdata;\n    });\n    alert(JSON.stringify(bodydata));\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // setEditcontent(null)\n    // setOpenedit(false)\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n  // const handleInputChange = type => e => {\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.generatedSku}\n                    </TableCell>\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editcostprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price\"\n                            onChange={handleinputChange(\"editcostprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPrice}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editcostpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price Tax\"\n                            onChange={handleinputChange(\"editcostpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price\"\n                            onChange={handleinputChange(\"editsellingprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price Tax\"\n                            onChange={handleinputChange(\"editsellingpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            //onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkupprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price\"\n                            onChange={handleinputChange(\"editmarkupprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkuppricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price Tax\"\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountprice}\n                            id=\"productname\"\n                            onChange={handleinputChange(\"editdiscountprice\")}\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountpricetax}\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price Tax\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.marginOnSalePercentage}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.discount}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={(e) => props.onShow(row.generatedSku)}\n                        >\n                          Summary\n                        </Button>{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Button\n                          onClick={(e) => Skupricesync(row)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          ₹ Run\n                        </Button>\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\n                          <CircularProgress size={15} />\n                        ) : (\n                          <Button\n                            onClick={(e) => Skupricesync(row)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          >\n                            ₹ Run\n                          </Button>\n                        )}\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditPrice\n            diamond={editcontent}\n            onApply={DiamondSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(props.columnnames);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      item\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h4 className=\"products\">\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\n        </h4>\n      </Grid>\n      <Grid\n        item\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <Grid\n          item\n          className=\"column-btn\"\n          lg={5}\n          md={5}\n          sm={5}\n          xs={5}\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        >\n          <Button\n            className=\"product\"\n            size=\"small\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              selectcolumnfilter={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\nimport { Alert } from \"@material-ui/lab\";\nimport { IMAGEDELETE } from \"../../graphql/query\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n  const [success, setSuccess] = React.useState(false);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  React.useEffect(() => {\n    setProductimages(props.prodimages);\n  }, [props.prodimages]);\n\n  productimages.forEach((imgobj) => {\n    console.log();\n    image_count = image_count + 1;\n    if (imgobj.productId) {\n      product_id = imgobj.productId;\n    }\n  });\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const deleteImage = async (imageData) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: IMAGEDELETE,\n        variables: { productimageid: imageData.id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        fatchvalue.statuscode = 200 && window.location.reload();\n      })\n      .catch(console.error);\n  };\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount;\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\n    });\n  };\n\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (!isedit) {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: url,\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n      };\n      imagecontent = imageobj;\n    }\n\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\n    responsecontent.statuscode === 200 && setSuccess(true);\n    setTimeout(function () {\n      responsecontent.statuscode === 200 && window.location.reload();\n    }, 2500);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url, index) => (\n              <React.Fragment key={url.id}>\n                <div style={{ position: \"relative\" }}>\n                  <i\n                    className=\"fa fa-window-edit\"\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: 11,\n                      color: \"red\",\n                      zIndex: \"12\",\n                    }}\n                  />\n\n                  <Grid\n                    item\n                    style={{\n                      width: \"150px\",\n                      wordBreak: \"break-all\",\n                      height: \"150px\",\n                      padding: \"8px\",\n                      margin: \"0\",\n                      // cursor: \"pointer\",\n                      position: \"relative\",\n                    }}\n                    className=\"container\"\n                  >\n                    <img\n                      src={url.imageUrl}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        borderRadius: \"4px\",\n                      }}\n                      alt=\"product images\"\n                    />\n                  </Grid>\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\n                    <DeleteIcon style={{ color: \"grey\" }} />\n                  </Button>\n                  <br />\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                    {\" \"}\n                    {index + 1}{\" \"}\n                  </Typography>\n\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                    {\" \"}\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\n                  </Typography>\n                </div>\n                {/* ) : null} */}\n              </React.Fragment>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{\n                      color: \"rgba(60,64,67,.15)\",\n                      fontSize: \"45px\",\n                      margin: \"auto\",\n                    }}\n                  ></i>\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\n      </Snackbar>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\n\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\n\nimport { productCategory } from \"../../services/mapper\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\n\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport { Chip, Switch, FormControlLabel } from \"@material-ui/core\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n\n  console.log(productCtx);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  \n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    // if (type === \"masterProductSize\") {\n    //   debugger;\n    //   let productSizeString = null;\n    //   console.log(type, value);\n    //   if (typeof value === Object) {\n    //     setProductCtx({ ...productCtx, [type]: value.sizeValue });\n    //   } else if (typeof value === Array) {\n    //     productSizeString = value.reduce((acc, str) => {\n    //       return acc.push(str);\n    //     }, []);\n\n    //     setProductCtx({ ...productCtx, [type]: productSizeString.toString() });\n    //   }\n\n    //   console.log(productSizeString);\n    // } else {\n    //   setProductCtx({ ...productCtx, [type]: value });\n    // }\n    // debugger;\n    // if (type === \"productSize\") {\n    //   if (typeof value === Object) {\n    //     setProductCtx({ ...productCtx, [type]: [value] });\n    //   }\n    // } else if (typeof value === Array) {\n    //   setProductCtx({ ...productCtx, [type]: value });\n    // } else {\n    setProductCtx({ ...productCtx, [type]: value });\n    // }\n    debugger;\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n\n    // if (e.target.value === \"\" || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n\n  let client = useApolloClient();\n\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some((store_dia) => store_dia.diamondType == diamond_type.diamondType)\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n\n    client\n      .query({ query: PRODUCTDIAMONDTYPES })\n      .then((res) => {\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // let params = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    // };\n    // fetch(GRAPHQL_DEV_CLIENT, params)\n    //   .then((res) => res.json())\n    //   .then((diamondtypesData) => {\n    //     console.log(\n    //       diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //       \"diamondtypesdata\"\n    //     );\n    //     setProductCtx({\n    //       ...productCtx,\n    //       productDiamondTypes:\n    //         diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //     });\n    //   })\n    //   .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    debugger;\n    console.log(productCtx.product_type);\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      description: productCtx.description,\n      minOrderQty: productCtx.minOrderQty,\n      maxOrderQty: productCtx.maxOrderQty,\n      length: productCtx.length,\n      height: productCtx.height,\n\n      productType: productCtx?.product_type?.label ?? null,\n      productMetalColor: productCtx?.productMetalColor ?? null,\n      vendorCode: productCtx?.vendorcode?.name ?? null,\n      earingBacking: productCtx?.earringbacking?.label ?? null,\n      // productSize: \"12,13,14,15\",\n    };\n\n    let response = await sendNetworkRequest(\"/editproduct\", {}, productEditItem);\n    window.location.reload();\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\"/updateproductattribute\", {}, esbody);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\"/viewskupricesummary/\" + sku, {}, null);\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function Skumarkupsync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n      pricingcomponent: \"updateskuprice\",\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    client\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\n      .then((res) => {\n        setLoadopen(false);\n\n        var { productListByProductId } = res.data;\n        var genders = productListByProductId.gender;\n        var productTypes = productListByProductId.productType;\n        var earringBackings = productListByProductId.earringBacking;\n        var size_obj = productListByProductId.sizeVarient;\n        var vendorCodes = productListByProductId.vendorCode;\n\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\n        // let productSize_arr = [];\n        // if (productSizes != null && productSizes != undefined) {\n        //   debugger;\n        //   let productSizeArray = productSizes.split(\",\");\n        //   for (let i = 0; i < productSizeArray.length; i++) {\n        //     debugger;\n        //     let obj_size = {\n        //       sizeValue: productSizeArray[i],\n        //     };\n        //     productSize_arr.push(obj_size);\n        //   }\n        // }\n\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let product_type = null;\n        if (productTypes !== null && productTypes !== undefined) {\n          productTypes = productTypes.split(\",\");\n          productTypes.forEach((element) => {\n            product_type = {\n              label: element,\n            };\n          });\n        }\n\n        let earring_backing = null;\n        if (earringBackings !== null && earringBackings !== undefined) {\n          earring_backing = {\n            label: earringBackings,\n          };\n        }\n\n        let vendor_code = null;\n        if (vendorCodes !== null && vendorCodes !== undefined) {\n          vendorCodes = vendorCodes.split(\",\");\n          vendorCodes.forEach((element) => {\n            vendor_code = {\n              name: element,\n            };\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n\n        var unfilterMetalColor = productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\n        var metalColor = unfilterMetalColor;\n        var metalColor = unfilterMetalColor.filter(function (el) {\n          return el.productColor != null;\n        });\n\n        if (typeof metalColor !== undefined && metalColor !== null && metalColor !== undefined) {\n        } else {\n          metalColor = {};\n        }\n\n        let metalcolor = productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n\n        setProductCtx({\n          ...productCtx,\n          productname: productListByProductId.productName,\n          isactive: productListByProductId.isactive,\n          product_type: product_type,\n          product_categoy: productListByProductId.productCategory,\n          gemstonelist: productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\n          variants: productListByProductId.transSkuListsByProductId.nodes,\n          productImages: productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalColor,\n          // oldproductMetalColor: metalColor,\n          productMetalPurity: productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: vendor_code,\n          product_gender: gender_arr,\n          themes: productListByProductId.productThemesByProductId.nodes,\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\n          collections: productListByProductId.productCollectionsByProductId.nodes,\n          stonecount: productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour: productListByProductId.productStonecolorsByProductId.nodes,\n          description:\n            productListByProductId?.transSkuListsByProductId?.nodes[0]?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\n          minOrderQty: productListByProductId?.transSkuListsByProductId?.nodes[0]?.minOrderQty,\n          maxOrderQty: productListByProductId?.transSkuListsByProductId?.nodes[0]?.maxOrderQty,\n          height: productListByProductId?.height,\n          length: productListByProductId?.length,\n          earringbacking: earring_backing,\n          // productSize: productSize_arr ?? [{}],\n          // productDiamondClarity:diamondClaritySku,\n        });\n\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(productListByProductId.productName)),\n        });\n      })\n      .catch(console.error);\n  }, []);\n  // useEffect(() => {\n  //   client\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\n  //     .then((res) => {\n  //       debugger;\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\n\n  //       // debugger;\n  //       // let FilteredProductSize = null;\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\n  //       //     return val.productType === productCtx?.product_type?.label;\n  //       //   });\n  //       // }\n  //       debugger;\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\n  //       console.log(ProductSizeFullData);\n  //     })\n  //     .catch(console.error);\n  // }, [productCtx?.product_type?.label]);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.description}\n            id=\"description\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.description}\n            name=\"description\"\n            label=\"Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"description\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_type}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_type\")}\n            options={productCtx.masterData.product_type}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            disabled\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.vendorcode}\n            getOptionLabel={(option) => option.name}\n            onChange={handleoptionChange(\"vendorcode\")}\n            options={productCtx?.masterData?.vendorcode}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Ventor Name\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          {productCtx?.product_type?.label === \"Earrings\" || productCtx?.product_type?.label === \"earrings\" ? (\n            <Autocomplete\n              id=\"free-solo-2-demos\"\n              className={classes.fixedTag}\n              value={productCtx.earringbacking}\n              getOptionLabel={(option) => option.label}\n              onChange={handleoptionChange(\"earringbacking\")}\n              options={productCtx.masterData.earringbacking}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Earring Backing\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          ) : (\n            \"\"\n          )}\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\n            <Autocomplete\n              mutiple\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              value={productCtx.productSize}\n              defaultValue={productCtx.productSize}\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\n              onChange={handleoptionChange(\"productSize\")}\n              options={productCtx?.masterProductSize}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Size\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          ) : (\n            \"\"\n          )} */}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.height}\n            id=\"height\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.height}\n            name=\"height\"\n            label=\"Height \"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"height\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.length}\n            id=\"length\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.length}\n            name=\"length\"\n            label=\"Width\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"length\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.minOrderQty}\n            id=\"minOrderQty\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.minOrderQty}\n            name=\"minOrderQty\"\n            label=\"Minimum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"minOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.maxOrderQty}\n            id=\"maxOrderQty\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.maxOrderQty}\n            name=\"maxOrderQty\"\n            label=\"Maximum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"maxOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            getOptionLabel={(option) => option.productColor}\n            onChange={handleoptionChange(\"productMetalColor\")}\n            options={productCtx.masterData.metalcolour}\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Color\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n              ))\n            }\n            style={{ display: \"none\" }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <FormControlLabel\n            label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n            control={<Switch checked={productCtx.isactive} onChange={handledisableproduct(\"isactive\")} value=\"checkedA\" />}\n          />\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={9} lg={9} spacing={2} style={{ padding: \"15px\" }}>\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n\n          <Grid style={{}}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader columnnames={columnnames.varients} getColumnnames={getColumnnames} displytype={1} />{\" \"}\n          </Grid>\n\n          <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Price Run For This Product\n            </Button>\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <Button onClick={(e) => Skumarkupsync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Run Markup For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues} /> : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\n          <Productimages\n            //color={colors.productColor}\n            //isdefault={colors.isdefault}\n            prodimages={productCtx.productImages}\n          />\n          {/* ))} */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}>\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n  cmshome: \"/cmshome\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  warehouse: \"/warehouse\",\n  holiday_manager: \"/holiday-manager\",\n  inventory: \"/inventory\",\n\n  silverbanner: \"/silverbanner\",\n  silverlistingbanner: \"/listingPage\",\n  FeaturedProduct: \"/featuredproduct\",\n\n  Comments: \"/comments\",\n};\n\nexport default route;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\" || type == \"Inventory & Shipping Setup\") {\n      setGlobalCtx({\n        ...globalCtx,\n        optionname: type,\n        selectedIndex: 5,\n        isExpand: !globalCtx.isExpand,\n      });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n\n    console.log(\"pagess\", accesspages);\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <React.Fragment key={index}>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          {/* <InboxIcon /> */}\n                          <img style={{ width: \"18px\" }} src={menuobj.icon} alt=\"NAC Console\"></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <React.Fragment key={subindex}>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <img style={{ width: \"18px\" }} src={submenuobj.icons} alt=\"NAC Console\"></img>\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                        <img\n                            style={{ width: \"18px\" }}\n                            src={menuobj.icon}\n                            alt=\"NAC Icon\"\n                          ></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </React.Fragment>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useStyles } from \"./styles\";\nimport { withRouter } from \"react-router-dom\";\nimport SideBar from \"../SideBar\";\nimport { GlobalContext } from \"../../context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport \"./style.css\";\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\");\n    window.location = \"/\";\n  }\n\n  function handleDrawer() {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: globalCtx.sideBarOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\n            Stylori\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = (props) => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n      <Component {...rest} />\n    </main>\n  );\n};\n\nexport const withAppBar = (component, props) => {\n  return (\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n};\n\nexport default PrimaryAppBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport route from \"./route\";\nimport { withAppBar } from \"../components/PrimaryAppBar\";\n\nconst PrivateRoute = (props) => {\n  const { component, ...rest } = props;\n\n  const checkAuth = () => {\n    let accesstoken = localStorage.getItem(\"accesstoken\");\n    if (accesstoken) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const Component = (props) => withAppBar(component, props);\n  return checkAuth() ? (\n    rest.path === \"/\" || rest.path === \"/login\" ? (\n      <Redirect to={route.productlist} />\n    ) : (\n      <Component {...rest} />\n    )\n  ) : (\n    <Redirect to={route.login} />\n  );\n};\n\nexport default PrivateRoute;\n","import ApolloClient from \"apollo-boost\";\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\nimport Review from \"../components/Review/Review\";\nimport { GlobalContext } from \"../context\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { ProductContext } from \"../context/ProductuploadContext\";\nimport {\n  Addshippingattributes,\n  Addtaxattributes,\n  CategoryList,\n  Configuration,\n  Customerdetails,\n  Dashboard,\n  DiscountList,\n  Earringbacking,\n  Goldpriceupdate,\n  HolidayManager,\n  Inventory,\n  Login,\n  Manageadminusers,\n  Manageusers,\n  Markupprice,\n  Masterattribute,\n  Mastercategories,\n  Mastercollections,\n  Masterdesigns,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  Masterdiamondshapes,\n  Mastergemsettings,\n  Mastergemshapes,\n  Mastergemtypes,\n  Mastergenders,\n  Mastermetalcolors,\n  Masteroccassions,\n  Masterorderstatus,\n  Masterpaymentstatus,\n  Masterproducttypes,\n  Masterpurities,\n  Masterroles,\n  Masterscreens,\n  Masterstonecolors,\n  Masterstones,\n  Masterstoneshapes,\n  Masterstyles,\n  Masterthemes,\n  Masterweights,\n  Materialmaster,\n  OrderList,\n  OrderManagementDetails,\n  Priceupdate,\n  Productlist,\n  Productupload,\n  Salediscount,\n  Seopriority,\n  Shipmentsettings,\n  Shippingattributes,\n  Shippingzones,\n  Taxsettings,\n  Taxsetup,\n  Useraddresses,\n  Userconfiguration,\n  Userwishlist,\n  Vendorlist,\n  Vendorprice,\n  Voucherdiscount,\n  VoucherdiscountListing,\n  Warehouse,\n} from \"../screens\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport cmshome from \"../screens/cms/cmshome\";\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport route from \"./route\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.cmshome} component={cmshome} />\n          <PrivateRoute\n            path={route.producttypes}\n            component={Masterproducttypes}\n          />\n          <PrivateRoute\n            path={route.voucherdiscount}\n            component={Voucherdiscount}\n          />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute\n            path={route.masterattributes}\n            component={Masterattribute}\n          />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute\n            path={route.masterstonecolors}\n            component={Masterstonecolors}\n          />\n          <PrivateRoute\n            path={route.masterstoneshapes}\n            component={Masterstoneshapes}\n          />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute\n            path={route.masteroccassions}\n            component={Masteroccassions}\n          />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute\n            path={route.manageadminusers}\n            component={Manageadminusers}\n          />\n          <PrivateRoute\n            path={route.goldpriceupdate}\n            component={Goldpriceupdate}\n          />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute\n            path={route.customerdetails}\n            component={Customerdetails}\n          />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute\n            path={route.orderdetails}\n            component={OrderManagementDetails}\n          />\n\n          <PrivateRoute\n            path={route.userconfiguration}\n            component={Userconfiguration}\n          />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute\n            path={route.mastermaterial}\n            component={Materialmaster}\n          />\n          <PrivateRoute\n            path={route.mastercolors}\n            component={Mastermetalcolors}\n          />\n          <PrivateRoute\n            path={route.masterpurities}\n            component={Masterpurities}\n          />\n          <PrivateRoute\n            path={route.salediscountlist}\n            component={DiscountList}\n          />\n          <PrivateRoute\n            path={route.voucherdiscountlist}\n            component={VoucherdiscountListing}\n          />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute\n            path={route.mastercollections}\n            component={Mastercollections}\n          />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute\n            path={route.masterdiamonds}\n            component={Masterdiamonds}\n          />\n          <PrivateRoute\n            path={route.diamondsettings}\n            component={Masterdiamondsettings}\n          />\n          <PrivateRoute\n            path={route.diamondshapes}\n            component={Masterdiamondshapes}\n          />\n          <PrivateRoute\n            path={route.earringbacking}\n            component={Earringbacking}\n          />\n          <PrivateRoute\n            path={route.gemsettings}\n            component={Mastergemsettings}\n          />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute\n            path={route.masterpaymentstatus}\n            component={Masterpaymentstatus}\n          />\n          <PrivateRoute\n            path={route.masterorderstatus}\n            component={Masterorderstatus}\n          />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute\n            path={route.shippingattributes}\n            component={Shippingattributes}\n          />\n          <PrivateRoute\n            path={route.addshippingattributes}\n            component={Addshippingattributes}\n          />\n          <PrivateRoute\n            path={route.addtaxattributes}\n            component={Addtaxattributes}\n          />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute\n            exact\n            path={route.editdiscount}\n            component={Salediscount}\n          />\n\n          <PrivateRoute\n            exact\n            path={`${route.productAttributes}/:id`}\n            component={ProductAttributes}\n          />\n          <PrivateRoute\n            exact\n            path={`${route.createVariant}`}\n            component={CreateVariant}\n          />\n          <PrivateRoute\n            path={route.shipmentsettings}\n            component={Shipmentsettings}\n          />\n          <PrivateRoute\n            path={route.holiday_manager}\n            component={HolidayManager}\n          />\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\n          <PrivateRoute path={route.inventory} component={Inventory} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n          <PrivateRoute\n            path={route.silverlistingbanner}\n            component={SilverListingbanner}\n          />\n          <PrivateRoute\n            path={route.FeaturedProduct}\n            component={FeaturedProduct}\n          />\n          <PrivateRoute path={route.Comments} component={Review} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { Alerts as Alert } from \"./components\";\nimport { AlertProps, AlertContext } from \"./context\";\n\nclass AppAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    };\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    });\n  };\n\n  set = (props) => {\n    this.setState({ ...props });\n  };\n\n  render() {\n    return (\n      <AlertContext.Provider\n        value={{\n          ...this.state,\n          onclose: this.close,\n          setSnack: this.set,\n        }}\n      >\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\n        {this.props.children}\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default AppAlert;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport MainApp from \"./routes\";\nimport { GlobalProvider } from \"./context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport AppAlert from \"./App.Alert\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n\n//       'Roboto'\n\n//     ].join(','),\n//   },\n// });\nfunction App() {\n  return (\n    <GlobalProvider>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n          <Router >\n            <AppAlert>\n              <MainApp />\n            </AppAlert>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}