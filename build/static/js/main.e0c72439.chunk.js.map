{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","config.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread2","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","API_URL","GRAPHQL_DEV_CLIENT","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","alert","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","& > * + *","marginLeft","dateField","& + &","AddressForm","_React$useContext","useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","id","test","Autocomplete","defaultValue","options","map","option","renderTags","getTagProps","index","Chip","renderInput","params","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","shortCode","push","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","alias","earringbacking","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","autoComplete","styles","occasions","stones","gemstonecolor","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","PRODUCTCATEGORY","gql","_templateObject","PRODUCTLIST","_templateObject2","PRODUCTLISTSTATUSEDIT","_templateObject3","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","MATERIALMASTER","queries_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","apidata","vendors","product_categories","product_types","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","_args","undefined","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","sent","filepath","headers","Content-Type","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","error_content","keyvalue","formdata","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Vendors_AddContact","withApollo","history","useHistory","pageCount","setPageCount","_React$useState7","_React$useState8","offsetValue","setOffsetValue","_productItemStatusChange","isactive","refetch","variables","productId","isActive","client","mutate","mutation","then","res","catch","react_components_esm","onCompleted","totalCount","Veiw","Offset","productName","productType","Switch","productItemStatusChange","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","method","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","result","characters","charactersLength","floor","random","toUpperCase","cursor","metaloption","primary","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","discounttype","setDiscounttype","minreq","setMinreq","_useState7","_useState8","usagelimit","setUsagelimit","_useState9","_useState10","isonce","setIsonce","_useState11","_useState12","selected","_useState13","Date","_useState14","selectedDate","handleDateChange","handleusagelimit","handleminreq","handleonceperorder","categories","CardActionArea","DateTimePicker","inputVariant","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","updatestatus","setUpdatestatus","formData","setFormData","_useState15","_useState16","_useState17","_useState18","hangeoptionchange","handleuploadstatus","_callee2","_context2","message","sku_size","PriceupdateContent","masters","setMasters","setSizes","_getsizes","getsizes","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate","grow","menuButton","search","fade","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","overflowY","minHeight","_clsx2","_React$useContext2","handleListItemClick","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","PrimaryAppBar","_React$createElement","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","Alert","elevation","DiamondDetails","setOpen","severity","snackMessage","setSnackMessage","handleClose","reason","_React$useState9","_React$useState10","btnEdit","setBtnEdit","_React$useState11","edit","_React$useState12","diamondEditObject","setDiamondEditObject","diamond","Snackbar","autoHideDuration","DiamondDetails_Alert","diamondType","diamondColour","diamondSettings","diamondShape","esm_Input_Input","stoneWeight","stoneCount","DiamondChangeData","diamondListData","editDiamondList","filter","edit_data","some","check_edit","diamond_list","DiamondSave","Save_default","diamondData","parse","settingData","shapeData","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneDetails_Alert","gemstoneType","gemstoneShape","gemstoneSetting","gemstoneSize","gemstoneChangeData","gemstoneListData","editGemstoneList","gemstone_list","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","generatedSku","metalColor","purity","skuWeight","skuSize","variantId","variantslist","filterVariant","filter_data","editVaraint","check_variant","edit_variant_filter","useStyle","variantFontSize","variantMarginTop","CreateVariant","prod_id","diamond_color","variant_diamond_type","setVariant","resdata","token","localStorage","getItem","location","fetch","body","isString","json","statusText","abrupt","FormGroup","prod_metal_color","productColor","Checkbox","met_colr","status_data","color_data","color_fil","handleMetalColor","prod_metal_purity","met_purity","purity_data","purity_fil","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","prod_diamon_color","diamond__type","diamond_type_data","diamond_type_fil","diamondTypeChange","variantSize","var_size","variant_size_data","variant_size_fil","sizeChange","_x5","_x6","_x7","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","newskus","changeVariant","saveCreateVariant","_useContext","create_variant","duplicate_productName","state","setstate","pathname","split","opts","fatchvalue","productListByProductId","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productImagesByProductId","sizeVarient","ProductEdit_CreateVariant","ProductAttributes_Alert","onInput","evt","validity","valid","bind","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","Fab","Add_default","readOnly","productEditItem","saveProductEditItem","ProductAttributes","ProductAttributes_Component","useStyless","typography","FormPropsTextFields","borderTop","ArrowDownward_default","Popover","paddingBottom","FontWeight","Select","notchedOutline","labelId","noValidate","conatainerRow","maxHeight","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","fontWeight","conatiner","head","stateChange","resetButton","columnclose","SortHeader","xl","lassName","protein1","protein2","rows","descendingComparator","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","highlight","lighten","light","dark","EnhancedTableToolbar","Tooltip","clip","EnhancedTable","setOrder","setOrderBy","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","aria-labelledby","newSelecteds","n","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","withStyles","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","newmaterial","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0c72439.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const handleChange = event => {\n    \n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={handleChange} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['Rings','Bangles'].includes(productCtx.product_type) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTLIST = gql`\nquery MyQuery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName\n      productType\n      productId\n      isactive\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\nconst PRODUCTDIAMONDTYPES = `\nquery MyQuery {\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId {\n      nodes {\n        id\n        imagePosition\n        imageUrl\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        skuWeight\n        generatedSku\n        id\n        isActive\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n        allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = true) => {\n    // url = API_URL+url;\n    // console.info('URL', url, data)\n    // const method = data ? 'POST' : 'GET', \n    //     headers = {\n    //         'Content-Type': 'application/json'\n    //     };\n    // let resdata = null;\n    // if(auth){\n    //     const token = localStorage.getItem(TOKEN)\n    //     if(token) headers[\"auth\"] = token\n    //     else window.location = '/'\n    // }\n    // const response = await fetch(url, {\n    //     method, body: isString(data) ? data : JSON.stringify(data), headers\n    // })\n\n    // if(response.status < 400){\n    //     resdata = await response.json();\n    // } else {\n    //     alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n    // return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"_\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     alert(JSON.stringify(formdata))\n      sendNetworkRequest('/productupload', {}, formdata)\n     }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'Action',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n          <Query\n              query={PRODUCTLIST}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allProductLists.nodes.map((row, index) => (\n                                  <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.productName}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.productType}</TableCell>\n                                  <TableCell align=\"center\">\n                                  <Button onClick={(e) => ProductEdit(row.productId)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                  <Switch\n                                    checked={row.isactive}\n                                    onChange={()=>{\n                                      productItemStatusChange(row.productId,row.isactive,refetch );\n                                    }}\n                                    value=\"checkedA\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                  />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>data:{data}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = (length => {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result.toUpperCase();\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n\n      <Grid   item xs={10} sm={10} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />\n      </Grid>\n\n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n\n          \n\n        </Grid>\n        \n       \n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n       Voucher Applicable For\n        </Typography>\n      </Grid>\n      <Grid container  item xs={12} sm={12} spacing={1}>\n\n        {['All','Material','Diamond','Gemstone','Making Charge'].map(option => (\n          \n          \n          <div\n            className={clsx(classes.metaloption, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionmaterialDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          \n        ))}\n        </Grid>\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid>\n\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n      \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n        \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const hangeoptionchange = type => (event, option) => {\n      setFormData({...formData,[type]: option})\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={3}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.vendorcode}\n              getOptionLabel={option => option.name}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.category}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.product_type}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('product_type')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.metalpurity}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('metalpurity')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Purity\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.diamondtypes}\n              getOptionLabel={option => option.label}\n              onChange={hangeoptionchange('diamondtypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Diamond Colour\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.sizes}\n              getOptionLabel={option => option.sku_size}\n              onChange={hangeoptionchange('sizes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Sizes\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.gemstontypes}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('gemstontypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Gemstone Type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={['Diamond','Gemstone','Gold','Making Charge','price update']}\n              onChange={hangeoptionchange('pricingcomponent')}\n\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Price Component\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid>\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    \n    getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} sizes={sizes} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond', minWidth: 50 },\n  { id: 'Colour', label: 'Colour', minWidth: 50 },\n  { id: 'Clarity', label: 'Clarity', minWidth: 50 },\n  { id: 'Setting', label: 'Setting', minWidth: 200 },\n  { id: 'Shape', label: 'Shape', minWidth: 200 },\n  { id: 'Weight', label: 'Weight', minWidth: 50 },\n  { id: 'Number', label: 'Number', minWidth: 50 },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          return diamondListData;\n        }\n        return diamondListData;\n      });\n      let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editDiamondLists = productCtx.editDiamondLists;\n      if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n        let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n        editDiamondLists = editDiamondLists && editDiamondLists\n        .map((diamond_list,index)=>{\n          if(diamond_list.id === editDiamondList.id){\n            return editDiamondList;\n          }\n          return diamond_list;\n        }) \n        : editDiamondLists.push(editDiamondList); \n      }\n      // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        diamondlist:DiamondChangeData,\n        editDiamondLists,\n        diamondsettings:\"\",\n        diamondshape: \"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n      })\n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n              </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type', minWidth: 100 },\n  { id: 'Shape', label: 'Shape', minWidth: 200 },\n  { id: 'Setting', label: 'Setting', minWidth: 200 },\n  { id: 'Size', label: 'Size', minWidth: 100 },\n  { id: 'Weight', label: 'Weight', minWidth: 100 },\n  { id: 'Number', label: 'Number', minWidth: 100 },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n  function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nconst columns = [\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  { id: 'Metal Colour', label: 'Metal Colour', minWidth: 100 },\n  { id: 'Metal Purity', label: 'Metal Purity', minWidth: 200 },\n  { id: 'Gold Weight', label: 'Gold Weight', minWidth: 200 },\n  { id: 'Size', label: 'Size', minWidth: 100 },\n  { id: 'Diamond Colour-Clarity', label: 'Diamond Colour-Clarity', minWidth: 200 },\n  { id: 'Gemstone', label: 'Gemstone', minWidth: 100 },\n  {\n    id: 'Disable',\n    label: 'Disable',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.metalColor}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell>\n                {\n                  // btnEdit.action && btnEdit.id == row.id ?\n                  //   <TableCell align=\"center\">\n                  //     <Button onClick={(e) => DiamondEdit(row.id)}><SaveIcon />\n                  //     </Button>\n                  //   </TableCell> :\n                    <TableCell align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                        onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n// import { NetworkContext } from '../../context/NetworkContext';\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    console.log(productCtx, 'createvariants')\n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n    function handleMetalPurity(status_data) {\n        status_data.metal_weight = \"\";\n        status_data.error_message = false;\n        // alert(JSON.stringify(status_data));\n        let purity = variant.metal_purity;\n        purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n        setVariant({\n            ...variant,\n            metal_purity: purity\n        })\n    }\n    function diamondTypeChange(status_data){\n        let diamond__type = variant.variant_diamond_type;\n        diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamond__type\n        })\n    }\n    function sizeChange(status_data) {\n        let variantSize = variant.size;\n        variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n        setVariant({\n            ...variant,\n            size: variantSize\n        })\n\n    }\n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size\n            // productImage:variant.product_images\n        }\n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n            console.log(JSON.stringify(createVariant))\n            fetch(`${API_URL}/getproductvarient`, params)\n            .then(res=>res.json())\n              .then(function (response) {\n                  alert('kfjslkdjs')\n                console.log(response,'saveCreateVariant');\n                // createVariants = [...createVariants,...response];\n                editVariants = [...editVariants,...response.newskus];\n                variants = [...variants,...response.newskus];\n                setProductCtx({\n                    ...productCtx,\n                    editVariants,\n                    variants,\n                    productImages,\n                    createVariantList:createVariants\n                })\n                setVariant({\n                    ...variant,\n                    metal_color: [],\n                    metal_purity: [],\n                    variant_diamond_type:[],\n                    product_images: {},\n                    size: []\n                })\n                props.changeVariant();\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n\n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n    return (\n        <Grid container>\n            <Grid item>\n                <Grid container >\n                    <Grid item>\n                        <Grid item className={classes.variantFontSize} >Metal Color</Grid>\n                        <Grid item >\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalcolour.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalColor.some((prod_metal_color) => prod_metal_color.productColor === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_color && variant.metal_color.some(met_colr => met_colr.id == data.id) ? true : false} onChange={() => handleMetalColor(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                        <Grid item className={classes.variantFontSize} >\n                            Metal Purity\n                        </Grid>\n                        <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                        <Grid item className={classes.variantFontSize} >\n                            Diamond Types\n                        </Grid>\n                        <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.productDiamondTypes && productCtx.productDiamondTypes.map((data, index) => (\n\n                                        productCtx.productDiamondTypesArray && productCtx.productDiamondTypesArray.some((prod_diamon_color) => prod_diamon_color.diamondType === data.diamondColor+data.diamondClarity) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={`${data.diamondColor}-${data.diamondClarity}`}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.variant_diamond_type && variant.variant_diamond_type.some(diamond__type => diamond__type.id == data.id) ? true : false} onChange={() => diamondTypeChange(data)} value=\"checkedA\" />\n                                                }\n                                                label={`${data.diamondColor}-${data.diamondClarity}`}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                }\n                <Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                        <Grid item className={classes.variantFontSize} >\n                            Size\n                        </Grid>\n                        <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.productVariantSize && productCtx.productVariantSize.map((data, index) => (\n\n                                        productCtx.variant_size && productCtx.variant_size.some((variantSize) => variantSize === data) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.size && variant.size.some(var_size => var_size == data) ? true : false} onChange={() => sizeChange(data)} value=\"checkedA\" />\n                                                }\n                                                label={data}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.name}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            <Grid container style={{display:\"flex\",justifyContent:\"flex-end\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                <Button  style={{background: \"#b5b6b8\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  }\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    setstate({ ...state, create_variant: true })\n  }\n  function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      productDiamondsByProductSku: productCtx.editDiamondLists,\n      productGemstonesByProductSku: productCtx.editGemstoneLists,\n      transSkuListsByProductId: productCtx.editVariants,\n      productImages:productCtx.productImages,\n      createVariants: productCtx.createVariantList\n    }\n    if (productCtx.editDiamondLists.length > 0 && productCtx.name !== \"\" || productCtx.editGemstoneLists.length > 0 && productCtx.name !== \"\" || productCtx.editVariants.length > 0 && productCtx.name !== \"\" || productCtx.createVariantList.length > 0 && productCtx.name !== \"\" || state.duplicate_productName !== productCtx.productname) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: fatchvalue.data.productListByProductId.sizeVarient\n          // productDiamondColor:diamondTypesArray,\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n      <Grid container>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n        <Grid item>\n          <Grid container spacing={1} >\n            <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  pattern=\"[a-zA-Z]*\"\n                  value={productCtx.productname}\n                  id=\"productname\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  name=\"productname\"\n                  label=\"Product Name\"\n                  onInput={keyPress.bind(this)}\n                // onChange={(e)=>keyPress(e,'productname')}\n                />\n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />\n              <Grid style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginTop: \"42px\"\n              }}>\n                <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid>\n                <Button onClick={(e) => createVariant()}>\n                  <Fab style={{ height: \"20px\", width: \" 37px\" }} color=\"primary\" aria-label=\"add\">\n                    <AddIcon />\n                  </Fab>\n                </Button></Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Variant Table</Grid>\n              <Variants variants={productCtx.variants} />\n            </Grid>\n            <Grid item xs={12} sm={12} md={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n              <TextField\n                className={classes.helperinput}\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                defaultValue={productCtx.productname}\n                InputProps={{\n                  readOnly: true,\n                }}\n                id=\"short_description\"\n                error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                InputProps={{\n                  readOnly: true,\n                }}\n                name=\"short_description\"\n                label=\"Short Description\"\n\n              />\n              <TextField\n                className={classes.helperinput}\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                defaultValue={productCtx.productname}\n                id=\"seo_text\"\n                error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                InputProps={{\n                  readOnly: true,\n                }}\n                name=\"seo_text\"\n                label=\"SEO Text\"\n\n              />\n              <TextField\n                className={classes.helperinput}\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                defaultValue={productCtx.productname}\n                id=\"url\"\n                error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                InputProps={{\n                  readOnly: true,\n                }}\n                name=\"url\"\n                label=\"URL\"\n              />\n              <TextField\n                className={classes.helperinput}\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                value={productCtx.product_categoy}\n                id=\"product_category\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                name=\"product_category\"\n                label=\"Product Category\"\n\n              />\n              <TextField\n                className={classes.helperinput}\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                value={productCtx.product_type}\n                id=\"product_type\"\n                error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                InputProps={{\n                  readOnly: true,\n                }}\n                name=\"product_type\"\n                label=\"Product Type\"\n\n              />\n\n            </Grid>\n            <Grid container style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\"\n            }}>\n              <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Save\n        </Button>\n                <Button color=\"default\" style={{ background: \"#b5b6b8\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n        </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,Priceupdate, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}