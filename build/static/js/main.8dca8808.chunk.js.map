{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","priceupdate","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","alert","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","& > * + *","marginLeft","dateField","& + &","AddressForm","_React$useContext","useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","id","test","Autocomplete","defaultValue","options","map","option","renderTags","getTagProps","index","Chip","renderInput","params","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","shortCode","i","push","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","alias","earringbacking","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","autoComplete","styles","occasions","stones","gemstonecolor","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","gemstonesettings","handleClick","metalsarr","stonedetails","isvalid","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","apidata","vendors","product_categories","product_types","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_React$useState3","_React$useState4","files","_React$useState5","_React$useState6","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","Access-Control-Allow-Origin","axios","put","file","image_url","forEach","element","unshift","direction","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","error_content","keyvalue","formdata","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","result","characters","charactersLength","floor","random","toUpperCase","cursor","metaloption","primary","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","discounttype","setDiscounttype","minreq","setMinreq","_useState7","_useState8","usagelimit","setUsagelimit","_useState9","_useState10","isonce","setIsonce","_useState11","_useState12","selected","_useState13","Date","_useState14","selectedDate","handleDateChange","handleusagelimit","handleminreq","handleonceperorder","categories","CardActionArea","DateTimePicker","inputVariant","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","updatestatus","setUpdatestatus","formData","setFormData","_useState15","_useState16","_useState17","_useState18","hangeoptionchange","handleuploadstatus","_callee2","_context2","message","sku_size","PriceupdateContent","masters","setMasters","setSizes","_getsizes","getsizes","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate","grow","menuButton","search","fade","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","minHeight","_clsx2","_React$useContext2","handleListItemClick","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","black","dark","light","warning","blueGrey","link","default","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dca8808.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api-alpha.stylori.net\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-alpha.stylori.net/graphql\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const handleChange = event => {\n    \n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={handleChange} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && productCtx.product_type.shortCode  === 'R' && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['Rings','Bangles'].includes(productCtx.product_type) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n        allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = true) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n      debugger;\n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"_\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    debugger;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n     await axios.put(signedRequest, bodaydata.file, options)\n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    debugger;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     console.log(JSON.stringify(formdata))\n      sendNetworkRequest('/productupload', {}, formdata)\n     }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = (length => {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result.toUpperCase();\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n\n      <Grid   item xs={10} sm={10} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />\n      </Grid>\n\n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n\n          \n\n        </Grid>\n        \n       \n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n       Voucher Applicable For\n        </Typography>\n      </Grid>\n      <Grid container  item xs={12} sm={12} spacing={1}>\n\n        {['All','Material','Diamond','Gemstone','Making Charge'].map(option => (\n          \n          \n          <div\n            className={clsx(classes.metaloption, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionmaterialDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          \n        ))}\n        </Grid>\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid>\n\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n      \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n        \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const hangeoptionchange = type => (event, option) => {\n      setFormData({...formData,[type]: option})\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={3}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.vendorcode}\n              getOptionLabel={option => option.name}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.category}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.product_type}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('product_type')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.metalpurity}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('metalpurity')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Purity\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.diamondtypes}\n              getOptionLabel={option => option.label}\n              onChange={hangeoptionchange('diamondtypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Diamond Colour\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.sizes}\n              getOptionLabel={option => option.sku_size}\n              onChange={hangeoptionchange('sizes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Sizes\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.gemstontypes}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('gemstontypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Gemstone Type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={['Diamond','Gemstone','Gold','Making Charge','price update']}\n              onChange={hangeoptionchange('pricingcomponent')}\n\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Price Component\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid>\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    \n    getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} sizes={sizes} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,Priceupdate, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n\n                    \n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}