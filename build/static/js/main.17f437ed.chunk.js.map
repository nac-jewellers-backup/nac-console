{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/components/Results/Results.js","screens/Materialmaster/components/Header/Header.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/components/Results/Results.js","screens/Mastermetalcolors/components/Header/Header.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/components/Results/Results.js","screens/Masterdiamonds/components/Header/Header.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/components/Results/Results.js","screens/Masterdiamondsettings/components/Header/Header.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/components/Results/Results.js","screens/Masterdiamondshapes/components/Header/Header.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/components/Results/Results.js","screens/Earringbacking/components/Header/Header.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/components/Results/Results.js","screens/Masterproducttypes/components/Header/Header.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","mastercollections","masterdesigns","masterdiamonds","diamondsettings","diamondshapes","earringbacking","gemsettings","gemshapes","gemtypes","gender","seo","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","DIAMONDSHAPES","_templateObject6","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","DISCOUNTSTATUSEDIT","_templateObject21","DELETEMARKUPPRICE","_templateObject22","DELETEGOLDPRICE","_templateObject23","DELETESALEDISCOUNT","_templateObject24","DELETEVOUCHERDISCOUNT","_templateObject25","DELETEMAKINGCHARGE","_templateObject26","DELETEGEMCHARGE","_templateObject27","DELETEDIAMONDCHARGE","_templateObject28","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","VOUCHERMASTER","queries_templateObject3","queries_templateObject4","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","Cancelcreate","CancelOutlined_default","address","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","product_name","product_category","Switch","updatedAt","colSpan","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","minDate","val","startdate","strictCompareDates","enddate","VoucherComponent","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","_React$useContext2","_creatediscount","_filterapllied","_getdiscountvalue","discount_id","voucherobj","discounttypeval","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","pathname","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","attributedata","filterapllied","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","filterdata","_downloadlog","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","column","showcolumns","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","Producttypecontent","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","data_filter","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","res","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","opts","fatchvalue","allGoldPriceSettings","vendorCode","negativebtn","esm_Input_Input","heading","handleSave","generatedSku","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","weightstart","weightend","getgemlist","_getgemlist","_callee4","_context4","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","drawer","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","join","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","onCreate","CancelEdit","button_title","components_EnhancedTableHead_EnhancedTableHead","columnname","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","optionname","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discount","discountDesc","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","variantFontSize","variantMarginTop","CreateVariant","prod_id","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","Array","prototype","insert","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17f437ed.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    \n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority'\n    \n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList_1 = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;/*********** configuration query */\n\nconst TaxList =`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERMATERIAL =`\nquery  {\n  allMasterMaterials {\n    nodes {\n      id\n      name\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS =`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES =`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  }\n}\n`;\nconst DESIGNMASTER =`\nquery  {\nallMasterDesigns {\n  nodes {\n    name\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER =`\nquery  {\n  allMasterCollections {\n    nodes {\n      name\n      id\n    }\n  }\n}\n`;\n\nconst DIAMONDMASTER =`\nquery  {\nallMasterDiamondTypes {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n  }\n}\n}\n`;\nconst DIAMONDSETTINGS =`\nquery  {\nallMasterDiamondsSettings {\n  nodes {\n    name\n    id\n  }\n}\n}\n`;\nconst DIAMONDSHAPES =`\nquery  {\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES =`\nquery  {\nallMasterProductTypes {\n  nodes {\n    name\n    id\n    shortCode\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS =`\nquery  {\n  allMasterGemstonesSettings {\n    nodes {\n      name\n      id\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES =`\nquery  {\n  allMasterGemstonesShapes {\n    nodes {\n      name\n      alias\n    }\n  }\n}`;\nconst MASTERGEMTYPES =`\nquery  {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      colorCode\n    }\n  }\n}`;\nconst MASTERGENDER =`\nquery  {\n  allMasterGenders {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`;\nconst SEOPRIORITIES =`\nquery  {\n  allSeoUrlPriorities {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n      voucherCodes\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT,\n    MASTERMATERIAL,\n    MASTERMATERIALCOLORS,\n    MASTERPRODUCTPURITIES,\n    COLLECTIONMASTER,\n    DESIGNMASTER,\n    DIAMONDMASTER,\n    DIAMONDSETTINGS,\n    DIAMONDSHAPES,\n    MASTERPRODUCTTYPES,\n    MASTERGEMSETTINGS,\n    MASTERGEMSHAPES ,\n    MASTERGEMTYPES,\n    MASTERGENDER ,\n    SEOPRIORITIES}","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const BASE_URL = \"https://staging.stylori.com/\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.2:8000/graphql\"\n// export const API_URL = \"http://192.168.1.2:8000\"\n// export const BASE_URL = \"http://192.168.1.2:8000/\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Tax','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','SEO Priorities']\n  const master_options_url = ['Taxsetup','material','producttypes', 'materialmaster','mastercolors','masterpurities','collections','designs','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','genders','seopriority']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    setIsadd(false)\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    refetch()   \n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = props.newvendorcode\n    }\n    \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} alignItems={\"flex-end\"} >\n            <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n          <Button variant=\"outlined\" onClick={() => addnewvendor()}  color=\"primary\" >\n          Add New Vendor\n        </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'updatedAt', label: 'updated on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {/* <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\"> */}\n                                    {row.product_name}\n\n                                    {/* </Link>  */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={selectedDate}\n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n        </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent className={classes.aboutvoucher} onAdded={attributesadded}/> : null }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                     \n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item xs={3}>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid container xs={3} item spacing={2}>\n        <Grid xs={9} item>\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item>\n        <Button variant= \"contained\" onClick={() => handlesearch()}>Search</Button>\n\n          </Grid>\n\n\n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  function searchorder(searchtext)\n  {\n\n    var data_filter = orderCtx.orderMaster.orders.filter( element => element.shoppingCartByCartId.userProfileByUserprofileId.email.match(searchtext+'.*'))\n    setOrders(data_filter)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n     \n    };\n    setOrders(orderCtx.orderMaster.orders)\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n     setIsadd(true)\n  }\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  function CancelEdit(diamondData) {\n   \n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n  useEffect( () => {\n\n  \n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id=\"vendordeliverydays\"\n                      name=\"vendordeliverydays\"\n                      // value={editcontent[columnname.key]}\n                       onChange={handleSearchChange(\"searchcontent\")}\n  \n                      label=\"Search text\"\n                     />\n          {/* <Button variant=\"outlined\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button> */}\n        \n        </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Button variant=\"outlined\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {props.values.map((row, index) => (\n            <>\n            {index === 0 && isadd ? <TableRow>\n\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                 <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button>\n                    \n              </TableCell> :\n                <>\n                <TableCell align=\"left\">\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id=\"vendordeliverydays\"\n                      name=\"vendordeliverydays\"\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label=\"Vendor Delivery Days\"\n                     /> </TableCell>\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow> : null\n\n            } \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                     btnEdit.action && btnEdit.id == row.id  ?  <><Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id=\"vendordeliverydays\"\n                      name=\"vendordeliverydays\"\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label=\"Vendor Delivery Days\"\n                     /> </TableCell> :\n                   <TableCell>{row[columnname.key]}</TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n   \n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default Taxsetup;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/updatetax', {}, taxcontent)\n\n  }\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  >\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n       {/* <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        let gender_arr = []\n        if(genders)\n        {\n        genders = genders.split(',')\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n      }\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, Materialmaster, CategoryList,Mastermetalcolors,Masterpurities,Masterdesigns\n     ,Voucherdiscount, Salediscount, OrderList,Mastergemsettings,Seopriority,Mastergenders,Mastergemshapes,Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes,Taxsetup,Masterdiamonds,Masterdiamondsettings, DiscountList,VoucherdiscountListing, Mastercollections } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                   <PrivateRoute  path={route.producttypes} component={Masterproducttypes} /> \n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute  path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute  path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute  path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute  path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute  path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute  path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute  path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute  path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute  path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute  path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute  path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute  path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute  path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute  path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute  path={route.gemshapes} component={Mastergemshapes} />\n                    \n                    <PrivateRoute  path={route.gender} component={Mastergenders} />\n                    <PrivateRoute  path={route.seo} component={Seopriority} />\n\n                    \n                    <PrivateRoute  path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />  \n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}