{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","METALMASTER","MAKINGCHARGEPRICELIST","_templateObject10","GEMPRICELIST","_templateObject11","DELETEMARKUPPRICE","_templateObject12","_templateObject13","DELETEGOLDPRICE","_templateObject14","DELETEMAKINGCHARGE","_templateObject15","DELETEGEMCHARGE","_templateObject16","DELETEDIAMONDCHARGE","_templateObject17","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","MATERIALMASTER","queries_templateObject3","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","display","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","columns","flexShrink","secondary","descendingComparator","b","orderBy","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","action","_React$useState22","btnEdit","setBtnEdit","_Savevendor","refetch","_React$useState23","_React$useState24","setOrder","_React$useState25","_React$useState26","setOrderBy","getproductlist","client","fetchPolicy","then","catch","_x5","_x6","_x7","_x8","_getproductlist","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","array","comparator","stabilizedThis","el","stableSort","getComparator","address","city","gstNo","dist_default","format","createdAt","Savevendor","Save_default","CancelOutlined_default","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","multiline","DialogActions","Vendorlist","isadd","setIsadd","Newvendor_Newvendor","components_Vendor_Vendor","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","href","trans_sku_lists","sku_url","product_name","product_category","Switch","updatedAt","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState3","_useState4","_useState5","_useState6","slice","IconButton","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchername","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","discounttype","setDiscounttype","_useState11","_useState12","minreq","setMinreq","_useState13","_useState14","_useState15","_useState16","isonce","setIsonce","_useState17","_useState18","_useState19","Date","_useState20","selectedDate","handleDateChange","handleonceperorder","categories","CardActionArea","DateTimePicker","inputVariant","minDate","strictCompareDates","handleminreq","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","selected","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","downloadlog","productids","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_filterapllied","filterdata","_downloadlog","_callee3","_context3","Fullloader","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","column","showcolumns","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","skus","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","Orderlistcontent_Producttypecontent","ConformationAlert","onCancel","isshow","dividers","DialogContentText","onSuccess","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","purities","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","_handledelete","datacontent","elementId","mutate","mutation","res","err","_React$useState27","_React$useState28","_handleSave","priceid","costprice","costPrice","sellingprice","sellingPrice","pricetype","sellingPriceType","opts","fatchvalue","negativebtn","allGoldPriceSettings","vendorCode","esm_Input_Input","heading","handleSave","generatedSku","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","allDiamondPriceSettings","diamondColour","Adddiamondprice_Addmetalprice","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","getgemlist","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","_React$useState29","_React$useState30","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setRefetch","setIsdelete","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","handleDelete","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","Salediscount_components_CategoryComponents_CategoryComponents","Salediscountcontent","Salediscount_components_AboutVoucher_AboutVoucher","Salediscount_components_VoucherComponent_VoucherComponent","Salediscount","Editvendor","hsnNumber","taxName","taxValue","isedit","CancelEdit","components_EnhancedTableHead_EnhancedTableHead","allMasterTaxSettings","Taxsetup","Mastercontent","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","_React$useContext2","optionname","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","snackMessage","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","parseFloat","variantFontSize","variantMarginTop","CreateVariant","prod_id","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","boxShadow","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","split","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","pathname","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","Array","prototype","insert","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e5bc7ce.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode}) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n\n\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const BASE_URL = \"https://staging.stylori.com/\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.0.101:8000/graphql\"\n// export const API_URL = \"http://192.168.0.101:8000\"\n// export const BASE_URL = \"http://192.168.0.101:8000/\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n      debugger;\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Tax','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','Master Materials']\n  const master_options_url = ['Taxsetup','material','producttypes', 'Materials','Metal Colours','Metal Purities','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'name', label: 'Name' },\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n\n    let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n    refetch()\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {stableSort(data.allMasterVendors.nodes, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                              ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n   \n  \n  function addnewvendor()\n  {\n    setIsadd(true)\n  }\n   \n  return (\n    <>\n    <Newvendor title={'Add new Vendor'} isopen={isadd}/>\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Button variant=\"outlined\" onClick={() =>addnewvendor() } color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Grid>\n    </Grid>\n    <Vendor  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'updatedAt', label: 'updated on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\">\n                                    {row.product_name}\n\n                                    </Link> \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleInputChange('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n         {discounttype === 'Free Shipping' || discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={new Date()}    \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                     \n                      <TableCell align=\"center\">\n                      <Button color=\"primary\" disabled onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Price Update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save()\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleAdd()\n  {\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n      <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n     {open ? <Addmetalprice isadd={open} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(diamonddata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n      {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} actionclose={handleClose}/> : null} \n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    alert(JSON.stringify(gemstonedata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(makingcharge))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  function handleAdd() {\n    setBtnEdit({ ...btnEdit, id:'', action: true })\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} isadd={open} title={\"Add Making Charge Setup\"} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    alert(JSON.stringify(markup))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    setRefetch(refetch)\n    setIsconformation(true);\n  }\n\n\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={6}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n       {/* <Grid item> \n       <TextField\n           variant=\"outlined\"\n           margin=\"dense\"\n           label=\"Search\"\n           className={classes.helperinput}\n           onChange={handleinputChange('weight_start')}\n           id=\"productvendorcode\"\n           name=\"Cost Price\"\n       />\n       </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                  <TableRow key={row.category}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n        <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      refetch={refetch}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n      </div>\n      {open ? <Addmarkup isadd={open} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Diamond\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={6} sm={6} >\n              \n                       \n      \n        <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n\n      \n    \n      \n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n          </Grid>\n                \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Salediscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(props.isadd)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      id : vendordata.id,\n      hsnNumber : vendordata.hsnNumber,\n      taxName : vendordata.taxName,\n      taxValue : vendordata.taxValue,\n      updatedAt : vendordata.updatedAt,\n      isedit : true\n    })\n  \n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n\n    let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n    refetch()\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n  useEffect( () => {\n\n  \n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n // setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={TaxList}\n              onCompleted={data => setPageCount( data.allMasterTaxSettings.totalCount )}\n              >\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterTaxSettings.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && props.isadd ? <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('hsnNumber')}\n\n                              label=\"HSN Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('taxValue')}\n\n                              label=\"Tax %\"\n                             />\n                           </TableCell>\n                           <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null}\n                          \n                           <TableRow key={row.name}>\n                            \n                        {\n                        btnEdit.action && btnEdit.id == row.id ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.hsnNumber}\n                           </TableCell> }\n                           {\n                        btnEdit.action && btnEdit.id == row.id ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.taxValue}\n                           </TableCell> }\n                                      {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                                    \n                                                  </TableRow>\n                                                  </>\n                                                ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\n\n\nexport const Taxsetup = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n   \n  \n  function addnewvendor()\n  {\n    setIsadd(true)\n  }\n   \n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Tax Setup\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Button variant=\"outlined\"  onClick={()=>addnewvendor() } color=\"primary\" >\n            Add New Tax\n        </Button>\n        \n        </Grid>\n    </Grid>\n    <Mastercontent  isadd={isadd} columns={data.columns}/> \n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Taxsetup;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount, Salediscount, OrderList, Taxsetup } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute  path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute  path={route.taxsetup} component={Taxsetup} />\n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}