{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/Producttypelist.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/Salediscount.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/components/Header/Header.js","screens/Materialmaster/components/Results/Results.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/components/Header/Header.js","screens/Mastermetalcolors/components/Results/Results.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","mastermaterial","mastercolors","masterpurities","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","PRODUCTTYPEMASTER","_templateObject11","MATERIALMASTER","_templateObject12","MASTERCOLORS","_templateObject13","MASTERPURITIES","_templateObject14","METALMASTER","MAKINGCHARGEPRICELIST","_templateObject15","GEMPRICELIST","_templateObject16","DELETEMARKUPPRICE","_templateObject17","_templateObject18","DELETEGOLDPRICE","_templateObject19","DELETEMAKINGCHARGE","_templateObject20","DELETEGEMCHARGE","_templateObject21","DELETEDIAMONDCHARGE","_templateObject22","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","VOUCHERMASTER","queries_templateObject3","queries_templateObject4","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","display","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","isadd","_React$useState22","_React$useState23","action","_React$useState24","btnEdit","setBtnEdit","Savevendor","_Savevendor","refetch","isedit","newvendorcode","onCancel","_React$useState25","_React$useState26","setOrder","_React$useState27","_React$useState28","setOrderBy","getproductlist","client","fetchPolicy","then","catch","_x5","_x6","_x7","_x8","_getproductlist","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","address","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","setIsadd","setNewvendorcode","_addnewvendor","text-align","addnewvendor","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","href","trans_sku_lists","sku_url","product_name","product_category","Switch","updatedAt","colSpan","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","minreq","_useState13","_useState14","_useState15","_useState16","isonce","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","handleonceperorder","vouchername","vouchercodes","multiline","voucherdescription","ButtonGroup","categories","discounttype","DateTimePicker","inputVariant","minDate","val","startdate","strictCompareDates","enddate","CardActionArea","limittouse","minimumreq","handleMinimumreq","minorder","VoucherComponent","setAttrobj","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","snackMessage","_React$useContext2","_creatediscount","_filterapllied","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","attributedata","filterapllied","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","filterdata","_downloadlog","_callee3","_context3","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","column","showcolumns","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","Orderlistcontent_Producttypecontent","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","_handledelete","datacontent","elementId","mutate","mutation","res","err","_handleSave","priceid","costprice","costPrice","sellingprice","sellingPrice","pricetype","sellingPriceType","opts","fatchvalue","negativebtn","allGoldPriceSettings","vendorCode","esm_Input_Input","heading","handleSave","generatedSku","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","allDiamondPriceSettings","diamondColour","Adddiamondprice_Addmetalprice","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","getgemlist","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","_React$useState29","_React$useState30","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setRefetch","setIsdelete","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","handleDelete","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","discountobj","setDiscountobj","componenets","optionvalue","discountvalue","productcontent","Salediscountcontent","attributeobj","setAttributeobj","parseFloat","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","onDelete","Salediscount_components_AboutVoucher_AboutVoucher","Salediscount","Editvendor","taxName","components_EnhancedTableHead_EnhancedTableHead","allMasterTaxSettings","Taxsetup","Mastercontent","Materialmaster","Materialmaster_components_Header_Header","Materialmaster_components_Results_Results","Mastermetalcolors","Mastermetalcolors_components_Header_Header","Mastermetalcolors_components_Results_Results","Masterpurities","Masterpurities_components_Header_Header","Masterpurities_components_Results_Results","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","optionname","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","variantFontSize","variantMarginTop","CreateVariant","prod_id","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","boxShadow","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","split","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","pathname","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","Array","prototype","insert","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","materialmaster","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad5ec7e4.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\n\n\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode}) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const BASE_URL = \"https://staging.stylori.com/\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.2:8000/graphql\"\n// export const API_URL = \"http://192.168.1.2:8000\"\n// export const BASE_URL = \"http://192.168.1.2:8000/\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Tax','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','Master Materials']\n  const master_options_url = ['Taxsetup','material','producttypes', 'materialmaster','mastercolors','masterpurities','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(props.isadd)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      editcontent['shortCode'] = props.newvendorcode\n    }\n    \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n    props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n    refetch()\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && props.isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={props.newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null}\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  \n async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Button variant=\"outlined\"  onClick={()=>addnewvendor() } color=\"primary\" >\n          Add New Vendor\n        </Button>\n        \n        </Grid>\n    </Grid>\n    <Vendor  onCancel={cancelvendorcreation} isadd={isadd} newvendorcode={newvendorcode} />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'updatedAt', label: 'updated on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\">\n                                    {row.product_name}\n\n                                    </Link> \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTTYPEMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={PRODUCTTYPEMASTER}\n                    onCompleted={data => setPageCount( data.allMasterProductTypes.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductTypes.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value.toUpperCase()\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n            label=\"Start Date\"\n            fullWidth\n            inputVariant=\"outlined\"\n            value={selectedDate}\n            minDate={new Date()}    \n            onChange={handleDateChange}\n          />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedendDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleendDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{/* <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.purities}\n           onChange={handleoptionChange('purities')}\n           getOptionLabel={option => option.name}\n           value={attrobj.purities}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Purity\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.pricing_components.map(option => option.name)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   */}\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n        </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n\n    \n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['discounttype'] = voucherCtx.discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minimumreq'] = voucherCtx.minimumreq;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} onAdded={attributesadded}/>\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n<Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid> </>\n          : null }\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                     \n                      <TableCell align=\"center\">\n                      <Button color=\"primary\" disabled onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Price Update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save()\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleAdd()\n  {\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n      <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n     {open ? <Addmetalprice isadd={open} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(diamonddata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n      {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} actionclose={handleClose}/> : null} \n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    alert(JSON.stringify(gemstonedata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(makingcharge))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  function handleAdd() {\n    setBtnEdit({ ...btnEdit, id:'', action: true })\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} isadd={open} title={\"Add Making Charge Setup\"} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    alert(JSON.stringify(markup))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    setRefetch(refetch)\n    setIsconformation(true);\n  }\n\n\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={6}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n       {/* <Grid item> \n       <TextField\n           variant=\"outlined\"\n           margin=\"dense\"\n           label=\"Search\"\n           className={classes.helperinput}\n           onChange={handleinputChange('weight_start')}\n           id=\"productvendorcode\"\n           name=\"Cost Price\"\n       />\n       </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                  <TableRow key={row.category}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n        <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      refetch={refetch}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n      </div>\n      {open ? <Addmarkup isadd={open} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={6} sm={6} >\n              \n                       \n      \n        <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={discountobj.componenets}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.pricing_components}\n                       onChange={handleoptionChange('componenets')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Pricing Components\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n\n      \n    \n      \n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n        {props.categories.map(option => (\n          \n        <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n          \n        ))}\n        </ButtonGroup>\n\n        </Grid>\n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={discountobj.discountvalue}\n          onChange={handleInputChange(\"discountvalue\")}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n          </Grid>\n                \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{/* <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.purities}\n           onChange={handleoptionChange('purities')}\n           getOptionLabel={option => option.name}\n           value={attrobj.purities}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Purity\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.pricing_components.map(option => option.name)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   */}\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent() {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  async function creatediscount()\n  {\n    setIsloading(true)\n\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      skus : skus\n    }\n    console.log(JSON.stringify(attributeobj ))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n}\nconst handleDelete = chipToDelete => () => {\n // setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.products)\n   setIsloading(false)\n\n    \n  }\n  function attributeadded( value)\n  {\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title=\"\" isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n   {products.length > 0 ? <Paper className={classes.productcontent}>\n    <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n      {products.map(data => {\n        let icon;\n\n        // if (data.label === 'React') {\n        //   icon = <TagFacesIcon />;\n        // }\n\n        return (\n          <Chip\n            key={data}\n            icon={icon}\n            label={data}\n            variant=\"outlined\"\n             onDelete={handleDelete(data)}\n            className={classes.chip}\n          />\n        );\n      })}\n    </Paper> : null }\n    <AboutVoucher className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} />\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => creatediscount()} color=\"primary\" variant=\"contained\">Submit</Button>\n    </Grid>\n    </Grid>\n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(props.isadd)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      id : vendordata.id,\n      hsnNumber : vendordata.hsnNumber,\n      taxName : vendordata.taxName,\n      taxValue : vendordata.taxValue,\n      updatedAt : vendordata.updatedAt,\n      isedit : true\n    })\n  \n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n    refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function CancelEdit(diamondData) {\n    \n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n  useEffect( () => {\n\n  \n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n // setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n\n  return (\n    <Paper className={classes.root}>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={TaxList}\n              onCompleted={data => setPageCount( data.allMasterTaxSettings.totalCount )}\n              >\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterTaxSettings.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && props.isadd ? <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('hsnNumber')}\n\n                              label=\"HSN Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('taxValue')}\n\n                              label=\"Tax %\"\n                             />\n                           </TableCell>\n                           <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null}\n                          \n                           <TableRow key={row.name}>\n                        {\n                        btnEdit.action && btnEdit.id == row.id && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('hsnNumber')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.hsnNumber}\n                           </TableCell> }\n                           {\n                        btnEdit.action && btnEdit.id == row.id && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('taxValue')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.taxValue}\n                           </TableCell> }\n                                      {\n                  btnEdit.action && btnEdit.id == row.id && !props.isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                                    \n                                                  </TableRow>\n                                                  </>\n                                                ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\n\n\nexport const Taxsetup = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n   \n  function canceltaxcreation()\n  {\n    setIsadd(false)\n  }\n  function addnewvendor()\n  {\n    setIsadd(true)\n  }\n   \n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Tax Setup\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Button variant=\"outlined\"  onClick={()=>addnewvendor() } color=\"primary\" >\n            Add New Tax\n        </Button>\n        \n        </Grid>\n    </Grid>\n    <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/> \n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Taxsetup;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New 12\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MASTERCOLORS} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MASTERCOLORS}\n                    onCompleted={data => setPageCount( data.allMasterMetalsColors.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                              alert(JSON.stringify(data))\n                                return <> \n\n                                {data.allMasterMetalsColors.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New 12\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MASTERPURITIES} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MASTERPURITIES}\n                    onCompleted={data => setPageCount( data.allMasterMetalsColors.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                              alert(JSON.stringify(data))\n                                return <> \n\n                                {data.allMasterMetalsColors.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, Materialmaster, CategoryList,Mastermetalcolors,Masterpurities\n     , ProducttypeList, Voucherdiscount, Salediscount, OrderList, Taxsetup } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute  path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute  path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute  path={route.materialmaster} component={Materialmaster} />\n                    <PrivateRoute  path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute  path={route.masterpurities} component={Masterpurities} />\n\n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}