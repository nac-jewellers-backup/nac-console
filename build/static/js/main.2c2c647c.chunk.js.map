{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/Table/style.js","components/Table/TableBodyRow.js","components/Table/TableComponent.js","components/datePickerComp/index.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Newarrival/component/NewarrivalComponent.js","components/Newarrival/NewArrival.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Page/Page.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Configuration/Configuration.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Customerdetails/Customerdetails.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","components/Input.js","screens/Dashboard/Dashboard.js","screens/DiscountList/components/Header/Header.js","components/ConformationAlert/ConformationAlert.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/Earringbacking/Earringbacking.js","screens/Goldpriceupdate/Goldpriceupdate.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Manageadminusers/Manageadminusers.js","screens/manageshedule/shedulemodal.js","screens/manageshedule/shedulemodalshow.js","screens/manageshedule/index.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/mangeappoinment/index.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Masterattribute/Masterattribute.js","screens/Mastercategories/Mastercategories.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstones/Masterstones.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masterweights/Masterweights.js","screens/Materialmaster/Materialmaster.js","screens/OrderList/OrderList.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/AppointmentManagementDetails/components/AppointmentInfo.js","screens/AppointmentManagementDetails/components/AppointmentExtra.js","screens/AppointmentManagementDetails/AppointmentManagement.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","utils/commonmethod.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","components/Loader/Fullloader.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/Priceupdate.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Shippingzones/Shippingzones.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Taxsetup/Taxsetup.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Userconfiguration/Userconfiguration.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/AbandonedCart/cart_details.js","screens/AbandonedCart/index.js","screens/PriceUpload/index.js","screens/MasterCountries/index.js","screens/DailyMetalPrice/index.js","screens/PriceLogs/index.js","utils/imageUpload.js","screens/ImageUpload/index.js","screens/CmsComponent/style.js","screens/CmsComponent/components/styles.js","screens/CmsComponent/components/TableHeadComp.js","screens/CmsComponent/components/bannerCMS.js","graphql/cmsQuery.js","screens/CmsComponent/components/storeLocatorCMS.js","screens/CmsComponent/components/richTextEditor.js","screens/CmsComponent/components/colorPic.js","screens/CmsComponent/components/titleDescriptionCMS.js","screens/CmsComponent/components/queryFormCMS.js","screens/CmsComponent/components/slidingImageCardCMS.js","screens/CmsComponent/components/customCareerBannerCMS.js","screens/CmsComponent/components/customCareerCardCMS.js","screens/CmsComponent/components/customCollectionHeaderCMS.js","screens/CmsComponent/components/customCollectionCardsCMS.js","screens/CmsComponent/components/customNewsCMS.js","screens/CmsComponent/components/spclTitleDescrCMS.js","screens/CmsComponent/components/bookYourAppointmentCMS.js","screens/CmsComponent/components/testimonialCMS.js","screens/CmsComponent/components/aboutCollectionCMS.js","screens/CmsComponent/components/titleCompCMS.js","screens/CmsComponent/components/titleWithDescription.js","screens/CmsComponent/components/customAdvertisementCMS.js","screens/CmsComponent/components/siteMapCMS.js","screens/CmsComponent/components/experienceBannerCMS.js","screens/CmsComponent/components/experienceCardCMS.js","screens/CmsComponent/components/experienceTableCards.js","screens/CmsComponent/components/storeLocatorDetailsCMS.js","screens/CmsComponent/components/blogPageCMS.js","screens/CmsComponent/components/contactUsCMS.js","screens/CmsComponent/components/TempleBannerCMS.js","screens/CmsComponent/components/templeFooterCMS.js","screens/CmsComponent/components/TempleCardDetailComponent.js","screens/CmsComponent/components/TempleCardComponent.js","screens/CmsComponent/cmsComponent.js","components/CircularProgress/index.js","screens/ComboOfferConfig/index.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/styles.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Variants.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/styles.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","process","APP_URL","GRAPHQL_DEV_CLIENT","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ABANDONEDCART","_templateObject38","CARTBYID","_templateObject39","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ALLNEWARRIVALPRODUCT","MUTATE_STATUS","GETORDERCOMMUNICATIONLOGS","FILTER_APPOINTEMENTS","_templateObject40","ALL_APPOINTMENTS_TIMESLOT","appointmentDateId","appointmentTypeId","_templateObject41","CHECK_TIMESLOT","_templateObject42","APPOINTMENTS_TYPE","SHOW_APPOINMENT_DETAILS","_templateObject43","SHOW_ALL_PPOINMENT_DETAILS","_templateObject44","PRICE_RUN_LOGS","_templateObject45","UPDATE_COMBO_BY_MAIN_PRODUCT","_templateObject46","LIST_COMBO_PRODUCTS","_templateObject47","FETCH_COMBO_OFFERED_PRODUCTS","_templateObject48","GET_UNIQUE_PRODUCT","_templateObject49","ORDERS","queries_templateObject","queries_templateObject2","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","hashtags","allMasterHashTags","metals","apidata","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","_React$useState9","_React$useState10","include","setInclude","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","filter","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","TableBodyRow","_ref$tableData","tableData","_ref$rowData","rowData","_ref$rowIndex","rowIndex","_ref$handleViewStores","handleViewStores","_ref$handleDelete","handleDelete","_ref$handleEdit","handleEdit","TableRow","val","TableCell","customWidth","lineBreak","parse","_data$rowData","_data$customText","customText","alt","src","gap","Edit_default","Delete_default","paddingBottom","moment","format","_data$rowData2","_data$rowData3","subtitle","weigh","about","_data$rowData4","_data$rowData5","textTransform","products","_data$rowData6","img","text","getComponent","customName","TableComp","_ref$header","_ref$data","Table","borderColor","stickyHeader","TableHead","TableBody","index","Table_TableBodyRow","DatePickerComp","log","react_datepicker_min_default","selected","Date","date","useStyles2","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","inputProps","labelPlacement","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","allNewArrivalProducts","NewarrivalComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","isactiveVariant","editleadtime","editreadytoship","editisdefault","editisactive","editisOrderable","editorderShippingDays","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","showPriceBreakup","isOrderable","orderShippingDays","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","button","&:hover","EnhancedTableHead","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","paddingLeft","paddingRight","highlight","lighten","light","primary","dark","flex","clip","overflow","position","contantview","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","handleInputChange","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x4","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","Save_default","CancelOutlined_default","scope","address","gstNo","vendorDelivaryDays","createdAt","vendordata","pincode","SelectProps","native","parseInt","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","divider","& + &","cardcontent","selectedOption","optionRadio","optionDetails","AttributeComponent","AttributesComponent_excluded","_React$useContext","attributes","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","handleoptionChange","elements_arr","forEach","element","indexOf","Card","fixedTag","shiprates","selectedrate","renderTags","getTagProps","multiple","components","textAlign","onAdded","results","Addshippingattributes","withRouter","history","rateid","setRateid","setMasters","setSelectedrate","selectedattr","setSelectedattr","isloaded","setIsloaded","_updateattributes","taxcontent","displaytext","reqbody","display_text","_getmastervalues","ratevalue","allShippingCharges","attr","categories","productAttributes","selectedcategory","catobj","prod_id","split","getmastervalues","AttributesComponent","attrs","display_arr","alias_arr","valueobj","join","updateattributes","aboutvoucher","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","allMasterTaxSettings","AttributesComponent_AttributesComponent","Header","Header_excluded","justify","autoComplete","onAdd","inner","Results","Results_excluded","orange","green","CardHeader","Divider","CardContent","CardActions","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","progress","CategoryList","_useQuery","useQuery","MaterialContext_MaterialProvider","Configuration","master_options_url","lg","Link","underline","RouterLink","to","General","General_excluded","first_name","last_name","email","isemailverified","components_Label_Label","ismobileverified","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","helperText","author","applyButton","white","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","_uploadimagetoserver","bodaydata","keyvalue","uploadtype","imagename","responsedata","returnData","signedRequest","filepathname","imageurl","previmagenames","previmages","image","fileExtension","foldername","product_id","filepath","axios","put","file","gutterBottom","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","alert","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","small","react_filepond","oninit","labelIdle","onaddfile","fileItem","uploadimagetoserver","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","splice","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","fxSyncAPI","button_title","sort_id","filterOrder","prefix","components_EnhancedTableHead_EnhancedTableHead","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","tabs","background","borderRight","master_options","Customerdetails","setCustomer","user_id","_getmaster","userinfo","userprofile","getmaster","components_General_General","match","_match$params","tab","find","t","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","Input_excluded","onKeyPress","which","input-label","textOverflow","input","&::placeholder","Dashboard_","Container","components_Input_Input","Component","Dashboard","DiscountList_components_Header_Header_excluded","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","components_Results_Results_excluded","isconformation","setIsconformation","deleteid","handledelete","_handledelete","datacontent","elementId","mutate","mutation","hidedeleteconformation","_handledelete2","handleChange","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","negativebtn","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","Earringbacking","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","_search","filteredHomes","x","Mastercontent","Goldpriceupdate","mastervendors","setMastervendors","cost_price","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","pricetype","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","vendorid","sellingpricejson","handlesellingPriceChange","disableClearable","pricejson","goldpurity","sellingprice","parseFloat","priceratio","goldprice_val","goldsellingprice_val","purityname","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","UPDATE_ORDER","mutation_templateObject10","CREATE_APPOINTMENT_DATE","mutation_templateObject11","CREATE_APPOINTMENT_TIME","mutation_templateObject12","DELETE_APPOINTMENT_TIME","mutation_templateObject13","DELETE_APPOINTMENT_DATE","mutation_templateObject14","closeButton","inputField","HolidayModal","disableTypography","IconButton","holiday","editItem","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","inputVariant","handleSave","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","setItem","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","LinearProgress","allHolidayManagers","updatedAt","DeleteForever_default","HolidayManager_HolidayModal","__typename","InventoryModal","_data$allWarehouses","setError","required","generatedSku","Boolean","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","allWarehouses","getOptionSelected","warehouse","InputProps","endAdornment","iconButton","& .MuiOutlinedInput-root","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","buildGradient","start","end","gradients","blue","indigo","validate","require","schema","presence","allowEmpty","password","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","backgroundImage","loginForm","person","fields","submitButton","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","accessToken","pageurl","is_write","hasError","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Manageadminusers","masterroles","setMasterroles","roles","username","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","SheduleModal","_props$date","minDate","datecard","available","availableTitle","time","notchedOutline","day","backdrop","zIndex","SheduleModalShow","_props$timeValue$star","_props$timeValue","_props$timeValue$endT","_props$timeValue2","appointmentTypes","getTime","_x$split","_x$split2","hour","minute","second","d","setHours","setMinutes","setSeconds","close","Backdrop","Select","labelId","defaultValue","filterType","MenuItem","timing","deleteTime","DeleteOutline","startTime","endTime","TimePicker","timeValue","handleTimeValue","handleSubmitTime","endDate","deleteDate","ManageShedule","setAppointmentDateId","setLoading","modalloading","setModalLoading","setDate","appointmentDate","setAppointmentDate","setAppointmentTypes","appointmentSlots","setAppointmentSlots","openAppointmentTime","setOpenAppointmentTime","showTime","setShowTime","setTimeValue","startOf","endOf","filterDate","setFilterDate","borderTop","calenderCard","& .MuiOutlinedInput-input","closedCard","GetAllAppointmentTypes","FilterDates","CheckAppointment","startDate","_res$data$allAppointm","allAppointmentDateTimeSlots","GetAllAppointment_TimeSlots","_ref4","loc","source","_ref5","_callee5","_context5","allAppointmentTypeMasters","_ref6","_callee6","_context6","CheckTimeslot","_ref7","_callee7","_context7","_res$data2","_res$data2$allAppoint","_ref8","_callee8","_context8","startDateTime","endDateTime","_x9","_ref9","_callee9","_context9","_x10","_ref10","_callee10","_context10","_x11","handleDateChange","_ref11","_callee11","_context11","_x12","_ref12","_callee12","_context12","allAppointmentDates","_x13","_x14","FilterTimeSlotes","views","Box","isSameOrAfter","shedulemodalshow","shedulemodal","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$createElement","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","select","& .MuiInputBase-root","filterData","Manageappoinment","_data$allAppointments","_data$allAppointments2","setStartDate","setEndDate","isNull","appointmentFilter","setAppointmentFilter","selectedStatus","setSelectedStatus","selectedType","setSelectedType","limit","appointment_filter","order_by","allAppointments","appointmentDateTimeSlotBySlotId","appointmentDateByAppointmentDateId","greaterThanOrEqualTo","lessThanOrEqualTo","ActionIcon","tConvert","toString","or","KeyboardButtonProps","autoOk","equalTo","_row$id","_row$customerName","_row$email","_row$mobile","_row$appointmentDateT","_row$appointmentDateT2","_row$appointmentDateT3","_row$appointmentDateT4","_row$appointmentDateT5","_row$appointmentDateT6","_row$type$name","_row$type","_row$status","onPageChange","other","Addmarkup_excluded","MuiDialogContent","MuiDialogActions","Addmarkup","markup","setMarkup","handleinputChange","actionclose","Addmarkup_DialogTitle","Addmarkup_DialogContent","readOnly","materiallist","puritylist","Addmarkup_DialogActions","actionSave","cardroot","editmarkup","setEditmarkup","setGoldpricelist","setDeleteid","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","_handleSave","column","allPricingMarkups","vendorCode","producttypes","heading","sellingPriceMin","sellingPriceMax","markupType","helperinput","markupValue","diamondData","markupid","editdiamond","setEditdiamond","allDiamondPriceSettings","diamondColour","costPrice","sellingPrice","sellingPriceType","descendingComparator","b","allGemstonePriceSettings","array","comparator","stabilizedThis","el","stableSort","getComparator","gemstoneType","weightStart","weightEnd","price","useStyle","allMakingChargeSettings","Markupprice","categorylist","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Product","vendor","Masterattribute","_Masterattribute","allAttributeMasters","Mastercategories","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Mastermetalcolors","Masteroccassions","Masterorderstatus","allOrderStatusMasters","Masterpaymentstatus","allPaymentStatusMasters","Masterproducttypes","Masterpurities_components_Results_Results_excluded","Masterpurities","form","formControl","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","isopen","pagecontent","displayname","Checkbox","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","_showpermissions","rowcontent","_updatepermissions","components_Addpermissions_Addpermissions","Masterscreens","_x$name","_x$name2","Masterstonecolors","Masterstones","Masterstoneshapes","allMasterStonesShapes","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masterweights","allMasterWeights","Materialmaster","getGiftMessage","giftFrom","giftTo","getPaymentStatus","paymentMode","paymentStatus","paymentResponse","payment_response","APTRANSACTIONID","MESSAGE","TRANSACTIONPAYMENTSTATUS","defaultColumns","Order ID","is_active","is_default","identifier","Order Date","Customer Name","SKUs","Email","Phone Number","Shipping Address","Gift Message","Order Status","Payment Mode","Payment Status","Waybill No","Comments","Actions","OrderList","_data$allOrders","_data$allOrders2","userProfileId","columnName","setColumnName","orderFilter","setOrderFilter","paymentMaster","setMasterData","orderStatus","fromDate","setFromDate","ToDate","setToDate","anchorEl","setAnchorEl","OrderList_templateObject","toConsumableArray","order_filter","allOrders","_item$shoppingCartByC","_item$shoppingCartByC2","_item$shoppingCartByC3","_item$shoppingCartByC4","_item$shoppingCartByC5","_item$shoppingCartByC6","_item$shoppingCartByC7","_item$shoppingCartByC8","_item$shoppingCartByC9","_item$shoppingCartByC10","_item$shoppingCartByC11","_item$shoppingCartByC12","_item$shoppingCartByC13","_item$shoppingCartByC14","_item$shoppingCartByC15","_item$shoppingCartByC16","_item$shoppingCartByC17","_item$paymentDetailsB","_item$paymentDetailsB2","_item$paymentDetailsB3","_item$smsDeliveredId","order_date","shoppingCartByCartId","shoppingCartItemsByShoppingCartId","_i$transSkuListByProd","transSkuListByProductSku","customer_name","cartAddressesByCartId","firstname","userProfileByUserprofileId","phone_number","contactNumber","shipping_address","addressline1","addressline2","state","gift_message","payment_mode","order_status","payment_status","paymentDetailsByOrderId","emailMessageId","smsDeliveredId","replace","waybill","awbNumber","comments","some","disableFuture","currentTarget","ViewColumn_default","Menu","PaperProps","_columnName$item","_columnName$column","OrderList_ActionIcon","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","paymentstatus","setPaymentstatus","orderstatus","setOrderstatus","errorMsg","setErrorMsg","waybillNum","updateOrder","setUpdateOrder","setCommunicationLogs","_updateOrder$comments","_order$awb_number","_order$payment_status","_order$order_status","_order$comments","awb_number","getOrderCommunicationLogs","_fatchvalue$data$orde","_fatchvalue$data","_fatchvalue$data$orde2","_fatchvalue$data$orde3","orderById","communicationLogsByOrderId","sendEmail","order_id","user_profile","shopping_cart","cart_addresses","country","contact_number","discounted_price","giftwraps","_updateOrder$comments2","_updateOrder$waybillN","_updateOrder$comments3","OrderItems","OrderItems_excluded","lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","objectFit","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","md","trans_sku_list","sku_weight","diamond_type","Math","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","productDetails","setProductDetails","communicationLogs","_fetchorderdetails","product_detail","com_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","xl","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","senderResponseId","messageType","AppointmentInfo","_order$allAppointment","_order$allAppointment2","_order$allAppointment3","_order$allAppointment4","_order$allAppointment5","_order$allAppointment6","_order$allAppointment7","_order$allAppointment8","_order$allAppointment9","_order$allAppointment10","_order$allAppointment11","_order$allAppointment12","_order$allAppointment13","_order$allAppointment14","_order$allAppointment15","_order$allAppointment16","_order$allAppointment17","_order$allAppointment18","_order$allAppointment19","_order$allAppointment20","_order$allAppointment21","_order$allAppointment22","_order$allAppointment23","_order$allAppointment24","_order$allAppointment25","_order$allAppointment26","_order$allAppointment27","_order$allAppointment28","_order$allAppointment29","_order$allAppointment30","_order$allAppointment31","_order$allAppointment32","_order$allAppointment33","_order$allAppointment34","_order$allAppointment35","_order$allAppointment36","_order$allAppointment37","_order$allAppointment38","_order$allAppointment39","_order$allAppointment40","_order$allAppointment41","_order$allAppointment42","_order$allAppointment43","_order$allAppointment44","_order$allAppointment45","_order$allAppointment46","_order$allAppointment47","_order$allAppointment48","AppointmentInfo_excluded","metalType","Radio","isOnline","isItRequired","areMoreMembersJoining","overflowWrap","specialRequests","AppointmentExtra","AppointmentExtra_excluded","setSelected","meetingLink","setmeetingLink","handleMeeting","handleSelect","appointment_id","meeting_link","AppointmentManagementDetails","_fatchvalue$data$appo","_fatchvalue$data$appo2","_fatchvalue$data$appo3","appointmentById","appointmentCommunicationLogsByAppointmentId","notifyOnNetworkStatusChange","components_AppointmentInfo","components_AppointmentExtra","_val$senderResponseId","_val$communicationTyp","_val$type","communicationType","_val$senderResponseId2","_val$communicationTyp2","_val$type2","Priceupdate_components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","makeid","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","charAt","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","productids","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","producttypelist","FullLoader","PriceupdateContent","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","req_product_id","_rerun","history_id","update_products","pricingcomponent","_filterapllied","filterdata","_downloadlog","Fullloader","components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","productlists","showproductdetails","_showproductdetails","productid","filterparams","categoryname","Products_Product_EnhancedTableHead","_row$trans_sku_lists","trans_sku_lists","sku_id","product_name","vendor_code","appBar","textarea","resize","errorTable","LinearProgressWithLabel","mr","ChooseWareHouse","_data$allWarehouses$n","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","fullScreen","AppBar","Toolbar","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","FormControl","RadioGroup","ProductSync_ChooseWareHouse","ChipInput_default","_data$list","_data$list2","list","onDelete","newChipKeyCodes","newChipKeys","rowSpan","borderBottom","tooltip","arrow","download","CloudDownload_default","Productlist","setFilterparams","components_ProductFilter_ProductFilter","filterobj","Products_Product","Productlist_ProductSync","dropdownlayout","& .menu","& .MuiFormHelperText-root","fieldHint","dateField","AddressForm","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","_objectSpread4","test","material_names","_objectSpread9","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormLabel","isreorderable","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","placeholderzindex","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","includes","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","deletematerial","valueContainer","chipFocused","noOptionsMessage","singleValue","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","default_metal_size","Step5_excluded","FilePondPluginImageValidateSize","FilePondPluginFileRename","setMetalcolour","imageposition","imagecolor","prodimages","prodid","imagecolourobj","imagecount","imageobj","_imageobj","image_url","unshift","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","allowMultiple","onupdatefiles","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","layout","up","stepper","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","handleNext","error_content","formdata","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","ProductuploadContext_ProductProvider","Component_Productupload","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","Create_default","AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","ButtonGroup","optionvalue","discounttype","discountvalue","VoucherComponent","VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","skus","setSkus","isloading","setIsloading","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","discount_id","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","snackMessage","_getdiscountvalue","comparr","discountid","discunt","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","_creatediscount","ispricerun","skuarray","sku_content","updatediscount","discount_count","product_attributes_text","eror_skus","getdiscountvalue","Salediscountcontent_Alert","components_VoucherComponent_VoucherComponent","componentsstring","filterapllied","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","creatediscount","Salediscount","VoucherContext_VoucherProvider","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Shipmentsettings","zones","allShippingZones","ranges","shipmentcharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","Shippingattributes","displayAttributes","Attributescontent","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Taxsettings","taxName","Attributescontent_Attributescontent","Taxsetup","Invoices","Useraddresses_components_Results_Results_excluded","setInvoices","invoice","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Userconfiguration","menu","Userwishlist_components_Results_Results_excluded","Userwishlist","wishlists","Userwishlist_components_Results_Results","Newvendor","Vendorlist","components_Vendor_Vendor","Addmetalprice_excluded","Addmetalprice","metaldata","setMetaldata","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","Addmetalprice_DialogActions","save","metalmaster","setMetalmaster","puritymaster","setPuritymaster","_handleAdd","metalcontent","costprice","priceid","allGoldPriceSettings","selectedsellingPriceType","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","Adddiamondprice_Addmetalprice","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstone_type","weight_start","weight_end","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","Vendorprice","setVendorcode","setVendorlist","components_Product","components_Diamonds","components_Gemstones","components_Makingcharge","Voucherdiscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","voucherprefix","setVoucherprefix","selectedDate","setSelectedDate","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","startdate","enddate","strictCompareDates","VoucherComponent_VoucherComponent_excluded","Voucherdiscountcontent","setAttributes","setDiscountid","attributesadded","attributedata","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","VoucherdiscountContent_Alert","Voucherdiscount_components_AboutVoucher_AboutVoucher","Voucherdiscount_components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","fieldset","boxSizing","gridArea","legend","font","textfield","inline","CartDetails","_state$data","_state$data$cart","_state$data$cart$user","_state$data2","_state$data2$cart","_state$data2$cart$use","_state$data3","_state$data3$cart","_state$data3$cart$use","_state$data4","_state$data4$cart","_state$data4$cart$use","_state$data5","_state$data5$cart","_state$data5$cart$use","_state$data$user$isem","_state$data6","_state$data6$user","_state$data$user$ismo","_state$data7","_state$data7$user","_state$data8","_state$data8$cart","_state$data8$cart$add","_state$data9","_state$data9$cart","_state$data9$cart$add","_state$data10","_state$data10$cart","_state$data$cart$gros","_state$data11","_state$data11$cart","_state$data$cart$disc","_state$data12","_state$data12$cart","_state$data$cart$taxA","_state$data13","_state$data13$cart","_state$data14","_state$data14$cart","_state$data14$cart$ca","_state$data15","_state$data15$cart","_state$data15$cart$fo","setState","cart","user","firstName","lastName","FormGroup","_item$salutation","salutation","lastname","countryCode","grossAmount","discountedPrice","taxAmount","List","dense","cart_items","_item$transSkuListByP","_product$productImage","_item$transSkuListByP2","_item$transSkuListByP3","skuDetails","product","ListItem","disableGutters","ListItemAvatar","material_ui_image_lib_default","ListItemText","markupPrice","markupPriceTax","follow_ups","ListItemIcon","Mail_default","Sms_default","Call_default","Headers","Cart ID","User Details","asc","desc","Total Products in cart","Contact","Status","Created On","Last Updated On","filterVariables","ordersByCartIdExist","withoutContact","userprofileId","withContact","emptyCart","every","AbandonedCart","_Headers$sort$by$sort","_filterVariables$filt","_filterVariables$filt2","_data$allShoppingCart","_data$allShoppingCart2","_data$allShoppingCart3","_data$allShoppingCart4","setFilter","by","setSort","condition","handleClickFilter","_filterVariables$valu","_filterVariables$valu2","_filterVariables$with","cartDetails","allShoppingCarts","_item$user","_item$user2","_item$user3","_item$user4","_item$cart_items","_item$cart_items$node","_item$cart_items$node2","_item$cart_items2","_item$cart_items2$nod","_item$cart_items2$nod2","_item$cart_items3","_item$cart_items3$nod","_item$cart_items3$nod2","cart_id","discountAmount","mobile_no","sku_ids","skuId","generated_skus","_i$transSkuListByProd2","product_names","_i$transSkuListByProd3","_i$transSkuListByProd4","downloadAbandonedCart","CloudDownloadOutlined_default","_Headers$item","_Headers$by$direction","_filterVariables$filt3","_filterVariables$filt4","applySort","_item$user5","_item$user6","_item$user7","_item$cart_items4","_item$cart_items5","_item$user8","_item$user9","_item$user10","_item$user11","_item$user12","userName","Email_default","disableElevation","disableFocusRipple","CircularProgressWithLabel","PriceUpload","BackupOutlined_default","fetchMasterCountries","MasterCountries_templateObject","addMutationMasterCountry","MasterCountries_templateObject2","updateMutationMasterCountry","MasterCountries_templateObject3","MasterCountry","_data$allMasterCountr","MasterCountries_excluded","currentTimeStamp","masterCountryPatch","fxConversionRate","Number","fetchDailyMetalPrices","DailyMetalPrice_templateObject","DailyMetalPrice_templateObject2","DailyMetalPrice_templateObject3","DailyMetalRate","_data$allDailyMetalPr","DailyMetalPrice_excluded","dailyMetalPricePatch","displayPrice","allDailyMetalPrices","PriceLogs","_data$allPriceRunning","_data$allPriceRunning2","_data$allPriceRunning3","_data$allPriceRunning4","allPriceRunningHistories","_item$completedProduc","_item$pricingComponen","_item$logs","_item$logs$nodes$","_item$logs2","_item$logs2$nodes$","_item$logs3","_item$logs3$nodes$","_item$logs3$nodes$$re","_item$logs4","_item$logs4$nodes$","_item$logs5","_item$logs5$nodes$","_item$logs6","_item$logs6$nodes$","_item$logs6$nodes$$su","_item$logs7","_item$logs7$nodes$","_item$logs8","_item$logs8$nodes$","_item$logs9","_item$logs9$nodes$","_item$logs9$nodes$$fa","completedProductCount","pricingComponent","wordWrap","logs","requestedProducts","req","successfullyExecutedProducts","failedProducts","UploadImage","Axios","Accept-Language","_boundary","ImageUpload","imgLink","setImgLink","disableButton","setDisableButton","_res$data$web","web","navigator","clipboard","writeText","_p","_p2","_p3","dialogPaper","dialogPaperMid","dialogHeader","blogInnerImage","& img","imageText","& p","alignText","contentText","datePicker","& .react-datepicker-wrapper","& .react-datepicker__input-container","& input","textFields","& .rdw-editor-main","& .public-DraftStyleDefault-ltr","headerBottom","dialogTitle","TableHeaderComp","_props$handleAddNew","handleAddNew","noAddNew","BannerCMS","_props$data7","_props$data7$props","initialState","urlParam","initialEdit","isEdit","editIndex","editData","setEditData","onChangeData","_props$data","_props$data$props","_props$data2","editBanner","getData","_props$data3","_props$data4","_props$data4$props","_getData","banners","TableHeadComp","TableComponent","_props$data5","_props$data5$props","_props$data6","ALLCDNPAGES","storeHeader","viewStoreHeader","tableStoreData","tableStoreView","initialStoreDetails","para","StoreLocatorCMS","openStores","setOpenStores","stores","setStores","addStoresOpens","setAddStores","showStoreFields","setShowStoreFields","storeState","setStoreState","storesEdit","setStoresEdit","handleCloseStores","handleAddNewStoresClose","onChangeStoreData","validationHead","storeData","storeDetailsValidate","editStores","newState","newStore","deleteStores","storeDataEdit","EditorConvertToHTML","_this","call","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","handleChangeState","EditorState","createEmpty","parentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","fontFamily","dropdownClassName","colorPicker","richEditor","TitleDescriptionCMS","titleDesc","setTitleDesc","handleClickOpen","richTextEditor","QueryFormCMS","setImage","offerPrice","placeImage","hoverImage","diamondType","skuID","skuUrl","SlidingImageCardCMS","constructedData","setConstructedData","_props$data$props$lis","dataConstruct","listingProducts","_val$image","_val$image$placeImage","_props$data2$props","_getData$props","_getData$props$listin","_getData$props2","_getData$props2$listi","_dataConstruct","_val$image2","_val$image2$placeImag","_val$image3","_val$image3$placeImag","_props$data6$props","_getData$props3","_getData$props3$listi","_val$image4","_val$image4$placeImag","_res$data3","CustomCareerBannerCMS","CustomCareerCardCMS","job_Role","button_Text","editContent","cardContent","CustomCollectionHeaderCMS","editHeader","innerHeader","innerTableData","initialButtonState","CustomCollectionCardsCMS","buttonState","setButtonState","buttonEditState","setButtonEditState","editCard","onChangeButtonData","editButton","CustomNewsCMS","button_text","Title","Description","SpclTitleDescr","spclTitleDescr","setSpclTitleDescr","_data$props","_data$props2","_data$props3","BookYourAppointmentCMS","feed","TestimonialCMS","_props$data3$props","sub","sub2","AboutCollection","_data$props4","TitleComp","setTitle","TitleWithDescription","CustomAdvertisementCMS","italic_text","initialData","categoryHeading","categoryList","initialStateRow","SiteMapCMS","_data1$categoryList","_data1$categoryList2","stateRow","setStateRow","data1","setData1","parentKey","tempState","handleAddItem","updateState","categoryItems","alignContent","Item","delRow","handleDeleteItem","ExperienceBannerCMS","background_Image","header_Image","form_Title","submit_Content","ExperienceCardCMS","sendData","setSendData","ExperienceTableCardCMS","contactNo","StoreLocatorDetailsCMS","deleteContent","initialBlogDetails","header_Bottom","bottomText","description_1","description_2","description_3","end_Text","third_Image","second_Image","BlogPageCMS","_blogs$second_Image","_blogs$second_Image$b","_blogs$third_Image","_blogs$third_Image2","_blogState$third_Imag5","_blogState$second_Ima7","_blogState$second_Ima8","_blogState$second_Ima9","_blogState$third_Imag6","_blogState$third_Imag7","openBlog","setOpenBlog","blogs","setBlogs","addBlogsOpens","setAddBlogs","blogState","setBlogState","_blogState$second_Ima","_blogState$second_Ima2","_res$data4","_res$data5","_res$data6","_blogState$second_Ima3","newBanner","editBanners","_res$data7","innerDialog","datePickerComp_DatePickerComp","sx","esm_Delete","_blogState$second_Ima6","handleDeleteBanner","_blogState$second_Ima4","_blogState$second_Ima5","_blogState$third_Imag","_blogState$third_Imag2","_blogState$third_Imag3","_blogState$third_Imag4","ContactUsCMS","customer_Care","whatsApp","TempleBannerCMS","TempleFooterCMS","_state$sectionOne","_state$sectionOne2","sectionOne","images","ContentOne","contentTwo","isView","TempleCardDetailComp","viewData","setviewData","handleChangeTitle","handleChangeAbout","detailData","isArray","_val$images","_val$content","TempleCardComponent","CardData","CmsComponent","useLocation","cloneDialog","setCloneDialog","cloneState","setCloneState","fetchCall","handleCloneDialogClose","_location$state","pageName","_data$data","_data$data$cdnByPage","dataRecieved","cdnByPage","propsKey","replaceIndex","stringifyState","findIndex","newStateSet","bannerCMS","storeLocatorCMS","titleDescriptionCMS","queryFormCMS","slidingImageCardCMS","customCareerBannerCMS","customCareerCardCMS","customCollectionHeaderCMS","customCollectionCardsCMS","customNewsCMS","spclTitleDescrCMS","bookYourAppointmentCMS","titleCompCMS","testimonialCMS","aboutCollectionCMS","titleWithDescription","customAdvertisementCMS","siteMapCMS","experienceCardCMS","experienceBannerCMS","experienceTableCards","blogPageCMS","storeLocatorDetailsCMS","contactUsCMS","components_TempleBannerCMS","templeFooterCMS","TempleCardDetailComponent","components_TempleCardComponent","getTheTable","cloneData","_data$errors","comboCard","alignCardTypo","details","InduvidualProductCard","_props$productListByM","_props$mainProduct","_source$productImages","_source$productImages2","_source$productImages3","productListByMainProduct","mainProduct","CardMedia","ComboCard","offeredProducts","ComboOfferConfig_InduvidualProductCard","ComboOfferConfig","openForm","setOpenForm","editState","setEditState","offerError","setOfferError","components_CircularProgress","allProductComboOffers","ComboOfferConfig_ComboCard","chipValue","_chip","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","spaceing","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","conatiner","head","stateChange","resetButton","columnclose","useStyless","FormPropsTextFields","ArrowDownward_default","Popover","transformOrigin","FontWeight","noValidate","SortHeader","lassName","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","emptyRows","min","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","cardButton","labelAlign","edit","CmsHome","setEdit","setNewPage","allCdns","fetchData","createdName","getThePageTitle","changePage","SilverLandingPage","alllandingbanner","setalllandingbanner","createlandingbanner","setCreatelandingbanner","setDisable","allBanners","create_banner_data","now","toISOString","ClearState","SilverListingPage","SpecificListPages","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","checkboxrow","columnnames","selectcolumnfilter","displytype","saveaction","columns_Columns","getColumnnames","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","minHeight","Productimages","image_count","productimages","setProductimages","pop","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","isdefault","styleFile","wordBreak","ishover","aria-hidden","EditPrice","EditPrice_excluded","Variants","pricerun","Skupricesync","_Skupricesync","priceobj","skulistdata","costPriceTax","sellingPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","displycolumns","onShow","Components_EditPrice_EditPrice","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","pxToRem","secondaryHeading","verticalAlign","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","_productListByProduct11","_productListByProduct12","_productListByProduct13","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","productHashTagsByProductId","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Variants_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","appointmentdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","priceupload","diamondDetails","gemstoneDetails","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","dailyMetalRate","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Newarrival","Manageshedule","abandoned_cart","pricelogs","imageUpload","cmsComponents","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","outline","drawerClose","mixins","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","menus","menuobj","submenu","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","grow","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c2c647c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","export const BASE_URL = process.env.REACT_APP_API_URL;\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nexport const APP_URL = process.env.REACT_APP_URL;\r\nexport const GRAPHQL_DEV_CLIENT = `${process.env.REACT_APP_API_URL}/graphql`;\r\nexport const URL = process.env.REACT_APP_CONSOLE_URL;\r\nexport const BASE_IMAGE_URL = process.env.REACT_APP_BASE_IMAGE_URL;\r\n","import React from \"react\";\r\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { URL } from \"../../config\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href={\"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterGenders {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColor\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondsShapes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterThemes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n\r\n    allMasterStyles {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterOccasions {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections {\r\n      nodes {\r\n        id\r\n        alias\r\n        name\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondClarities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterVendors {\r\n      nodes {\r\n        id\r\n        name\r\n        shortCode\r\n        vendorDelivaryDays\r\n      }\r\n    }\r\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n      nodes {\r\n        productSeries\r\n        id\r\n      }\r\n    }\r\n    allMasterGemstonesTypes {\r\n      nodes {\r\n        alias\r\n        colorCode\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterGemstonesShapes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterEarringBackings {\r\n      nodes {\r\n        name\r\n        createdAt\r\n        alias\r\n        id\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n    allMasterGemstonesSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterHashTags {\r\n      nodes {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTFILTERMASTER = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n        displayOrder\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\n  query {\r\n    allProductLists(first: 500) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\n  query ($Veiw: Int!, $Offset: Int!) {\r\n    allProductLists(first: $Veiw, offset: $Offset) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLISTS = gql`\r\n  query {\r\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n      nodes {\r\n        vendorDelivaryDays\r\n        updatedAt\r\n        state\r\n        shortCode\r\n        partnerCategory\r\n        name\r\n        organization\r\n        gstNo\r\n        currency\r\n        createdAt\r\n        city\r\n        address\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\n  query {\r\n    allMasterTaxSettings {\r\n      nodes {\r\n        hsnNumber\r\n        taxName\r\n        taxValue\r\n        updatedAt\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`; /*********** configuration query */\r\n\r\nconst TaxList = `\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList = `\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL = `\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS = `\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES = `\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER = `\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER = `\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER = `\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER = `\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER = `\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER = `\r\nquery  {\r\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    diamondClarity\r\n    diamondColor\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER = `\r\n{\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  }\r\n  allPaymentStatusMasters(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DIAMONDSETTINGS = `\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES = `\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES = `\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES = `\r\nquery{\r\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPAGES = `\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER = `\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING = `\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONES = `\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES = `\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES = `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst ACTIVESHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS = `\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS = `\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES = `\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERATTRIBUTES = `\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS = `\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES = `\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES = `\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER = `\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES = `\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        purity\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        sellingPrice\r\n        material\r\n        id\r\n        createdAt\r\n        costPrice\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allPricingMarkups(\r\n      condition: { material: $vendorCode }\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        costPrice\r\n        createdAt\r\n        diamondClarity\r\n        diamondColour\r\n        id\r\n        sellingPrice\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\nconst CATGORYLIST = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTTYPEMASTER = gql`\r\n  query {\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MATERIALMASTER = gql`\r\n  query {\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERCOLORS = gql`\r\n  query {\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SALEDISCOUNTS = gql`\r\n  query {\r\n    allSaleDiscounts {\r\n      nodes {\r\n        id\r\n        discountName\r\n        discountType\r\n        discountValue\r\n        components\r\n        attributes\r\n        isActive\r\n        productAttributes\r\n        productAttributesText\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERDISCOUNTS = gql`\r\n  query {\r\n    allVouchers {\r\n      nodes {\r\n        id\r\n        name\r\n        code\r\n        uses\r\n        maxUses\r\n        isActive\r\n        voucherCodes\r\n        description\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERPURITIES = gql`\r\n  query {\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLIST = `\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER = `\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCATEGORY = `\r\nquery {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst GEMSTONEMASTER = `\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allMakingChargeSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        weightStart\r\n        weightEnd\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        rateType\r\n        purity\r\n        priceType\r\n        price\r\n        material\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst GEMPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        price\r\n        rateType\r\n        priceType\r\n        sellingPriceType\r\n        vendorCode\r\n        weightEnd\r\n        weightStart\r\n        updatedAt\r\n        id\r\n        createdAt\r\n        gemstoneType\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\r\n    __typename\r\n    updateProductListByProductId(\r\n      input: {\r\n        productId: $productId\r\n        productListPatch: { isactive: $isActive }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n      productList {\r\n        isactive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst REVIEWQUERY = `\r\n  query {\r\n    allCustomerReviews {\r\n      nodes {\r\n        customerName\r\n        id\r\n        isActive\r\n        isPublish\r\n        message\r\n        nodeId\r\n        productSku\r\n        rating\r\n        title\r\n        updatedAt\r\n        userprofileId\r\n        productId\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CREATETAXSETUP = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $updatedAt: Date!\r\n    $createdAt: Date!\r\n    $taxValue: Double!\r\n    $taxName: String!\r\n    $hsnNumber: String!\r\n  ) {\r\n    __typename\r\n    createMasterTaxSetting(\r\n      input: {\r\n        masterTaxSetting: {\r\n          id: $id\r\n          updatedAt: $updatedAt\r\n          createdAt: $createdAt\r\n          taxValue: $taxValue\r\n          taxName: $taxName\r\n          hsnNumber: $hsnNumber\r\n        }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateVoucherById(\r\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      voucher {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateSaleDiscountById(\r\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      saleDiscount {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deletePricingMarkupById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteSaleDiscountById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteVoucherById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = gql`\r\n  query MyQuery($productId: String!) {\r\n    productListByProductId(productId: $productId) {\r\n      productMetalcoloursByProductId {\r\n        nodes {\r\n          productColor\r\n          id\r\n        }\r\n      }\r\n      productName\r\n      productType\r\n      vendorCode\r\n      gender\r\n      earringBacking\r\n      isactive\r\n      prodDescription\r\n      productMaterialsByProductSku(condition: { isActive: true }) {\r\n        nodes {\r\n          materialName\r\n        }\r\n      }\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          diamondClarity\r\n          diamondColour\r\n          diamondSettings\r\n          diamondShape\r\n          diamondType\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productGemstonesByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          gemstoneSetting\r\n          gemstoneShape\r\n          gemstoneSize\r\n          gemstoneType\r\n          gemstonsSize\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          id\r\n          imagePosition\r\n          productId\r\n          imageUrl\r\n          ishover\r\n          isdefault\r\n          productColor\r\n        }\r\n      }\r\n      productPuritiesByProductId {\r\n        nodes {\r\n          purity\r\n          id\r\n        }\r\n      }\r\n      productThemesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          themeName\r\n          id\r\n        }\r\n      }\r\n      productStonecolorsByProductId {\r\n        nodes {\r\n          id\r\n          stonecolor\r\n        }\r\n      }\r\n      productStylesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          styleName\r\n          id\r\n        }\r\n      }\r\n      productCollectionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          collectionName\r\n          id\r\n        }\r\n      }\r\n      productOccassionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          occassionName\r\n          id\r\n        }\r\n      }\r\n      productStonecountsByProductId {\r\n        nodes {\r\n          id\r\n          stonecount\r\n        }\r\n      }\r\n      productHashTagsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          id\r\n          name: hashTag\r\n        }\r\n      }\r\n      transSkuListsByProductId {\r\n        nodes {\r\n          skuSize\r\n          diamondType\r\n          metalColor\r\n          purity\r\n          productId\r\n          skuWeight\r\n          generatedSku\r\n          costPrice\r\n          costPriceTax\r\n          discountPrice\r\n          discountPriceTax\r\n          markupPrice\r\n          marginOnSalePercentage\r\n          markupPriceTax\r\n          marginOnSalePercentage\r\n          sellingPrice\r\n          discountDesc\r\n          sellingPriceTax\r\n          isReadyToShip\r\n          discount\r\n          isActive\r\n          isdefault\r\n          vendorDeliveryTime\r\n          id\r\n          isActive\r\n          showPriceBreakup\r\n          calcType\r\n          transSkuDescriptionsBySkuId {\r\n            nodes {\r\n              skuDescription\r\n              certificate\r\n              ringsizeImage\r\n            }\r\n          }\r\n          maxOrderQty\r\n          minOrderQty\r\n          isOrderable\r\n          orderShippingDays\r\n        }\r\n      }\r\n      productCategory\r\n      sizeVarient\r\n      height\r\n      length\r\n      width\r\n\r\n      productVendorCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLMASTERRINGSIZE = `\r\n  query {\r\n    allMasterRingsSizes {\r\n      nodes {\r\n        gender\r\n        productType\r\n        name\r\n        size\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HOLIDAYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\r\n    allHolidayManagers(\r\n      first: $first\r\n      offset: $offset\r\n      filter: $filter\r\n      orderBy: DATE_ASC\r\n    ) {\r\n      nodes {\r\n        id\r\n        holiday\r\n        date\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst WAREHOUSELIST = gql`\r\n  query {\r\n    allWarehouses(orderBy: ID_ASC) {\r\n      nodes {\r\n        id\r\n        name\r\n        shippingInDays\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst INVENTORYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\r\n    allInventories(first: $first, offset: $offset, filter: $filter) {\r\n      nodes {\r\n        id\r\n        generatedSku\r\n        numberOfItems\r\n        createdAt\r\n        updatedAt\r\n        warehouse: warehouseByWarehouseId {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VALIDATEGENERATEDSKU = gql`\r\n  query ($generatedSku: String!) {\r\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst STOCKSTATUS = gql`\r\n  query {\r\n    allWarehouses {\r\n      nodes {\r\n        name\r\n        isActive\r\n        inventoriesByWarehouseId {\r\n          aggregates {\r\n            sum {\r\n              numberOfItems\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VERIFYTAGNO = gql`\r\n  query ($tagno: String!) {\r\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLBANNERSCOMPLETE = `\r\nquery MyQuery {\r\n  allBanners\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"landing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATEALLBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLLISTINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"listing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATELISTINGBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"listing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLSPECIFICLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners\r\n  (condition: {url: \"specificListingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESPECIFICLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $urlParam :String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: \"specificListingPage\"\r\n        web: $web\r\n        urlParam : $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEALLBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteBannerById(input: {id: $id}) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLMASTERPRODUCTSIZE = gql`\r\n  query allproductsizes($productType: String) {\r\n    allMasterRingsSizes(condition: { productType: $productType }) {\r\n      nodes {\r\n        name\r\n        nodeId\r\n        id\r\n        size\r\n        updatedAt\r\n        productType\r\n        gender\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IMAGEDELETE = `\r\nmutation MyMutation($productimageid: UUID!) {\r\n  deleteProductImageById(input: { id: $productimageid }) {\r\n    productListByProductId {\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"bottom\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLANDINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"landing\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"listingPage\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERROUTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: {url: \"#\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam :\"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"bottom\"\r\n        position: $position\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst CREATESILVERLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"listingPage\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ABANDONEDCART = gql`\r\n  query (\r\n    $first: Int\r\n    $offset: Int\r\n    $orderBy: [ShoppingCartsOrderBy!]\r\n    $condition: ShoppingCartCondition\r\n    $filter: ShoppingCartFilter\r\n  ) {\r\n    allShoppingCarts(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: $orderBy\r\n      condition: $condition\r\n      filter: $filter\r\n    ) {\r\n      nodes {\r\n        id\r\n        isActive\r\n        netAmount\r\n        status\r\n        taxAmount\r\n        userprofileId\r\n        user: userProfileByUserprofileId {\r\n          id\r\n          firstName\r\n          lastName\r\n          username\r\n          email\r\n          mobile\r\n        }\r\n        cart_items: shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            productSku\r\n            qty\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              skuId\r\n              productListByProductId {\r\n                productName\r\n              }\r\n            }\r\n          }\r\n        }\r\n        grossAmount\r\n        discountedPrice\r\n        discount\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CARTBYID = gql`\r\n  query ($id: UUID!) {\r\n    cart: shoppingCartById(id: $id) {\r\n      id\r\n      isActive\r\n      netAmount\r\n      status\r\n      taxAmount\r\n      userprofileId\r\n      grossAmount\r\n      discountedPrice\r\n      discount\r\n      createdAt\r\n      updatedAt\r\n      address: cartAddressesByCartId {\r\n        nodes {\r\n          id\r\n          addressline1\r\n          addressline2\r\n          city\r\n          contactNumber\r\n          country\r\n          countryCode\r\n          createdAt\r\n          firstname\r\n          lastname\r\n          pincode\r\n          salutation\r\n          state\r\n          updatedAt\r\n          addressType\r\n        }\r\n      }\r\n      user: userProfileByUserprofileId {\r\n        id\r\n        firstName\r\n        lastName\r\n        username\r\n        email\r\n        mobile\r\n        isemailverified\r\n        ismobileverified\r\n      }\r\n      cart_items: shoppingCartItemsByShoppingCartId {\r\n        nodes {\r\n          productSku\r\n          qty\r\n          transSkuListByProductSku {\r\n            markupPrice\r\n            markupPriceTax\r\n            discountPrice\r\n            discountPriceTax\r\n            generatedSku\r\n            skuId\r\n            productListByProductId {\r\n              productName\r\n              productImagesByProductId(\r\n                condition: { isdefault: true, imagePosition: 1 }\r\n              ) {\r\n                nodes {\r\n                  productId\r\n                  imageUrl\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      follow_ups: communicationLogsByCartId {\r\n        nodes {\r\n          type\r\n          messageType\r\n          senderResponseId\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATESTYLORISILVERROUTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n  $urlParam: String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: \"S\"\r\n        web: $web\r\n        urlParam: $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLANDINGBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLFEATUREDPRODUCT = `query MyQuery {\r\n  allFeaturedProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: { ishover: true }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId {\r\n              nodes {\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createFeaturedProduct(\r\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateFeaturedProductByProductId(\r\n    input: {\r\n      featuredProductPatch: { isActive: $isActive }\r\n      productId: $ProductId\r\n    }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\r\n    featuredProduct {\r\n      productId\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CREATENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createNewArrivalProduct(\r\n    input: { newArrivalProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLNEWARRIVALPRODUCT = `query MyQuery{\r\n  allNewArrivalProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: {ishover: false}) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId{\r\n          nodes{\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId{\r\n              nodes{\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateNewArrivalProductByProductId(\r\n    input: {newArrivalProductPatch: {isActive: $isActive}, productId: $ProductId}\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteNewArrivalProductByProductId(input: {productId: $ProductId}) {\r\n    clientMutationId\r\n    deletedNewArrivalProductId\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst MUTATE_STATUS = `\r\nmutation($id: Int!, $status: String) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { status: $status } }\r\n  ) {\r\n    clientMutationId\r\n  }\r\n}\r\n`;\r\n\r\nconst MUTATE_MEETING = `\r\nmutation($id :Int!,$meetingLink: String!) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { meetingLink: $meetingLink } }\r\n  ) {\r\n    appointment {\r\n      id\r\n      meetingLink\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst GETORDERCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: UUID!) {\r\n  orderById(id: $id) {\r\n    awbNumber\r\n    cartId\r\n    comments\r\n    createdAt\r\n    id\r\n    paymentId\r\n    paymentMode\r\n    paymentStatus\r\n    updatedAt\r\n    userProfileId\r\n    communicationLogsByOrderId(orderBy: UPDATED_AT_DESC) {\r\n      nodes {\r\n        createdAt\r\n        id\r\n        messageType\r\n        orderId\r\n        senderResponseId\r\n        type\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst GETAPPLICATIONCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: Int!) {\r\n  appointmentById(id: $id) {\r\n    storeLocationByLocationId {\r\n      id\r\n      address\r\n      name\r\n    }\r\n    appointmentCommunicationLogsByAppointmentId {\r\n      nodes {\r\n        id\r\n        appointmentId\r\n        communicationType\r\n        createdAt\r\n        senderResponseId\r\n        type\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_DATE = `\r\n  query MyQuery {\r\n    allAppointmentDates(\r\n      orderBy: START_DATE_TIME_ASC\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        createdBy\r\n        endDate\r\n        id\r\n        isActive\r\n        startDate\r\n        startDateTime\r\n        endDateTime\r\n        updatedAt\r\n        updatedBy\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CHECK_APPOINTMENT = `\r\nquery($startDate: Date!,$endDate: Date!){\r\n  allAppointmentDates(\r\n    condition: {\r\n      startDate: $startDate,\r\n      endDate: $endDate\r\n    }\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst FILTER_APPOINTEMENTS = gql`\r\n  query ($startDate: Date!, $endDate: Date!) {\r\n    allAppointmentDates(\r\n      filter: {\r\n        startDate: {\r\n          greaterThanOrEqualTo: $startDate\r\n          lessThanOrEqualTo: $endDate\r\n        }\r\n      }\r\n      orderBy: START_DATE_ASC\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        createdBy\r\n        endDate\r\n        id\r\n        isActive\r\n        startDate\r\n        startDateTime\r\n        endDateTime\r\n        updatedAt\r\n        updatedBy\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_TIMESLOT = (appointmentDateId, appointmentTypeId) => gql`\r\n query{  \r\n   allAppointmentDateTimeSlots(\r\n    condition: {\r\n      appointmentDateId: \"${appointmentDateId}\"\r\n      appointmentTypeId: ${appointmentTypeId}\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n }\r\n`;\r\n\r\nconst CHECK_TIMESLOT = gql`\r\n  query (\r\n    $startTime: Time\r\n    $endTime: Time\r\n    $appointmentDateId: UUID!\r\n    $appointmentTypeId: Int!\r\n  ) {\r\n    allAppointmentDateTimeSlots(\r\n      filter: {\r\n        startTime: {\r\n          greaterThanOrEqualTo: $startTime\r\n          lessThanOrEqualTo: $endTime\r\n        }\r\n        endTime: {\r\n          greaterThanOrEqualTo: $startTime\r\n          lessThanOrEqualTo: $endTime\r\n        }\r\n      }\r\n      condition: {\r\n        appointmentDateId: $appointmentDateId\r\n        appointmentTypeId: $appointmentTypeId\r\n      }\r\n    ) {\r\n      nodes {\r\n        id\r\n        appointmentDateId\r\n        appointmentTypeId\r\n        startTime\r\n        endTime\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst APPOINTMENTS_TYPE = `\r\n  query MyQuery {\r\n    allAppointmentTypeMasters {\r\n      nodes {\r\n        id\r\n        name\r\n        isActive\r\n        appointmentsByAppointmentTypeId{\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SHOW_APPOINMENT_DETAILS = gql`\r\n  query (\r\n    $limit: Int\r\n    $offset: Int\r\n    $appointment_filter: AppointmentFilter!\r\n    $order_by: [AppointmentsOrderBy!]\r\n  ) {\r\n    allAppointments(\r\n      first: $limit\r\n      offset: $offset\r\n      filter: $appointment_filter\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        id\r\n        mobile\r\n        mobileCountryCode\r\n        customerName\r\n        email\r\n        isActive\r\n        status\r\n        type: appointmentTypeMasterByAppointmentTypeId {\r\n          name\r\n        }\r\n        appointmentDateTimeSlotBySlotId {\r\n          startTime\r\n          startDateTime\r\n          endDateTime\r\n          createdBy\r\n          appointmentDateId\r\n          endTime\r\n        }\r\n        storeLocationByLocationId {\r\n          address\r\n          name\r\n        }\r\n        locationId\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SHOW_ALL_PPOINMENT_DETAILS = gql`\r\n  query ($id: Int) {\r\n    allAppointments(filter: { id: { equalTo: $id } }) {\r\n      nodes {\r\n        isVerified\r\n        isActive\r\n        email\r\n        customerName\r\n        status\r\n        locationId\r\n        storeLocationByLocationId {\r\n          address\r\n        }\r\n        specialRequests\r\n        productCategory\r\n        meetingLink\r\n        metalType\r\n        mobile\r\n        isOnline\r\n        isItRequired\r\n        id\r\n        areMoreMembersJoining\r\n        appointmentDateTimeSlotBySlotId {\r\n          appointmentTypeId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRICE_RUN_LOGS = gql`\r\n  query ($first: Int, $offset: Int) {\r\n    allPriceRunningHistories(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        id\r\n        completedProductCount\r\n        pricingComponent\r\n        logs: pricingLogsByPriceRunningHistoryId {\r\n          nodes {\r\n            requestedProducts\r\n            successfullyExecutedProducts\r\n            failedProducts\r\n          }\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_COMBO_BY_MAIN_PRODUCT = gql`\r\n  mutation updateCombo(\r\n    $offeredProducts: [String]\r\n    $discountType: String!\r\n    $discountValue: Int!\r\n    $mainProduct: String!\r\n    $isActive: Boolean!\r\n  ) {\r\n    updateProductComboOfferByMainProduct(\r\n      input: {\r\n        mainProduct: $mainProduct\r\n        productComboOfferPatch: {\r\n          offeredProducts: $offeredProducts\r\n          discountValue: $discountValue\r\n          discountType: $discountType\r\n          isActive: $isActive\r\n        }\r\n      }\r\n    ) {\r\n      productComboOffer {\r\n        mainProduct\r\n        discountValue\r\n        discountType\r\n        offeredProducts\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst LIST_COMBO_PRODUCTS = gql`\r\n  query ($after: Cursor, $first: Int) {\r\n    allProductComboOffers(after: $after, first: $first) {\r\n      nodes {\r\n        id\r\n        mainProduct\r\n        offeredProducts\r\n        discountType\r\n        discountValue\r\n        productListByMainProduct {\r\n          id\r\n          productName\r\n          productImagesByProductId(condition: { imagePosition: 1 }) {\r\n            nodes {\r\n              imageUrl\r\n            }\r\n          }\r\n          transSkuListsByProductId(condition: { isdefault: true }) {\r\n            nodes {\r\n              markupPrice\r\n            }\r\n          }\r\n        }\r\n        isActive\r\n      }\r\n      totalCount\r\n      pageInfo {\r\n        startCursor\r\n        endCursor\r\n        hasNextPage\r\n        hasPreviousPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_COMBO_OFFERED_PRODUCTS = gql`\r\n  query ($offeredProducts: [String!]) {\r\n    allProductLists(filter: { productId: { in: $offeredProducts } }) {\r\n      nodes {\r\n        productId\r\n        productName\r\n        productImagesByProductId(condition: { imagePosition: 1 }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            sellingPrice\r\n            markupPrice\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_UNIQUE_PRODUCT = gql`\r\n  query ($productId: String!) {\r\n    product: productListByProductId(productId: $productId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  ALLBANNERS,\r\n  ALLLISTINGBANNERS,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  CREATEALLBANNERS,\r\n  CREATELISTINGBANNERS,\r\n  CREATESPECIFICLISTINGPAGE,\r\n  DELETEALLBANNER,\r\n  PRODUCTCATEGORY,\r\n  PRODUCTLIST,\r\n  PRODUCTEDIT,\r\n  PRODUCTLISTSTATUSEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  GOLDPRICELIST,\r\n  DIAMONDPRICELIST,\r\n  GEMPRICELIST,\r\n  MAKINGCHARGEPRICELIST,\r\n  VENDORLIST,\r\n  ALLPRODUCTLIST,\r\n  DIAMONDMARKUP,\r\n  PRODUCTFILTERMASTER,\r\n  METALMASTER,\r\n  GEMSTONEMASTER,\r\n  MASTERCATEGORY,\r\n  DELETEMARKUPPRICE,\r\n  DELETEMAKINGCHARGE,\r\n  DELETEGEMCHARGE,\r\n  DELETEGOLDPRICE,\r\n  DELETESALEDISCOUNT,\r\n  CATGORYLIST,\r\n  DELETEDIAMONDCHARGE,\r\n  VENDORLISTS,\r\n  TaxList,\r\n  PRODUCTTYPEMASTER,\r\n  MATERIALMASTER,\r\n  MASTERCOLORS,\r\n  MASTERPURITIES,\r\n  SALEDISCOUNTS,\r\n  VOUCHERDISCOUNTS,\r\n  DELETEVOUCHERDISCOUNT,\r\n  VOUCHERSTATUSEDIT,\r\n  DISCOUNTSTATUSEDIT,\r\n  MASTERMATERIAL,\r\n  MASTERMATERIALCOLORS,\r\n  MASTERPRODUCTPURITIES,\r\n  COLLECTIONMASTER,\r\n  DESIGNMASTER,\r\n  DIAMONDMASTER,\r\n  DIAMONDSETTINGS,\r\n  DIAMONDSHAPES,\r\n  MASTERPRODUCTTYPES,\r\n  MASTERGEMSETTINGS,\r\n  MASTERGEMSHAPES,\r\n  MASTERGEMTYPES,\r\n  MASTERGENDER,\r\n  SEOPRIORITIES,\r\n  CREATETAXSETUP,\r\n  TaxSettingList,\r\n  MASTERCATEGORIES,\r\n  EARRINGBACKING,\r\n  MASTERATTRIBUTES,\r\n  MASTERSTONESHAPES,\r\n  MASTERSTONECOLORS,\r\n  MASTERSTONES,\r\n  MASTERWEIGHTS,\r\n  THEMEMASTER,\r\n  STYLEMASTER,\r\n  OCCASSIONSMASTER,\r\n  PAYMENTSTATUSMASTER,\r\n  SHIPPINGZONES,\r\n  MASTERCOUNTRIES,\r\n  SHIPPINGCHARGES,\r\n  ACTIVESHIPPINGZONES,\r\n  MASTERPAGES,\r\n  GOLDPRICESETUPMASTER,\r\n  ALLMASTERRINGSIZE,\r\n  HOLIDAYLIST,\r\n  WAREHOUSELIST,\r\n  INVENTORYLIST,\r\n  VALIDATEGENERATEDSKU,\r\n  STOCKSTATUS,\r\n  VERIFYTAGNO,\r\n  ALLMASTERPRODUCTSIZE,\r\n  IMAGEDELETE,\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESILVERLANDINGBANNER,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  CREATESILVERLISTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  REVIEWQUERY,\r\n  CREATENEWARRIVALPRODUCT,\r\n  ALLNEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n  ABANDONEDCART,\r\n  CARTBYID,\r\n  ALL_APPOINTMENTS_DATE,\r\n  SHOW_APPOINMENT_DETAILS,\r\n  PRICE_RUN_LOGS,\r\n  APPOINTMENTS_TYPE,\r\n  ALL_APPOINTMENTS_TIMESLOT,\r\n  FILTER_APPOINTEMENTS,\r\n  SHOW_ALL_PPOINMENT_DETAILS,\r\n  MUTATE_STATUS,\r\n  GETAPPLICATIONCOMMUNICATIONLOGS,\r\n  CHECK_APPOINTMENT,\r\n  CHECK_TIMESLOT,\r\n  MUTATE_MEETING,\r\n  FETCH_COMBO_OFFERED_PRODUCTS,\r\n  GET_UNIQUE_PRODUCT,\r\n  LIST_COMBO_PRODUCTS,\r\n  UPDATE_COMBO_BY_MAIN_PRODUCT\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\n\r\n  export const USERORDERS = gql`query($userid: UUID!) {\r\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n          \r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }`\r\n\r\n\r\n  export const ORDERS = gql`\r\n  query (\r\n    $order_filter: OrderFilter!\r\n    $limit: Int\r\n    $offset: Int\r\n    $order_by: [OrdersOrderBy!]\r\n  ) {\r\n    allOrders(\r\n      filter: $order_filter\r\n      first: $limit\r\n      offset: $offset\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        \r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n            userAddressesByUserProfileId {\r\n              nodes {\r\n                contactNumber\r\n              }\r\n            }\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MATERIALMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const VOUCHERMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      \r\n      \r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport {\r\n  MATERIALMASTER,\r\n  ORDERS,\r\n  USERORDERS,\r\n  VOUCHERMASTER,\r\n} from \"../services/queries\";\r\nimport apidata from \"../screens/Productupload/data.json\";\r\n\r\nexport const productCategory = {\r\n  query: PRODUCTCATEGORY,\r\n  mapper: (response) => {\r\n    const category = response.allMasterProductCategories.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const product_type = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n      title: _.name,\r\n    }));\r\n    const material = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const gender = response.allMasterGenders.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const vendorcode = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      display: _.name + \" (\" + _.shortCode + \" )\",\r\n    }));\r\n\r\n    const diamondsettings = response.allMasterDiamondsSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const diamondshapes = response.allMasterDiamondsShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      themeName: _.name,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      styleName: _.name,\r\n    }));\r\n\r\n    const occasions = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      occassionName: _.name,\r\n    }));\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      collectionName: _.name,\r\n    }));\r\n    const gemstonecolor = response.allMasterStonesColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecolor: _.name,\r\n    }));\r\n    const stones = response.allMasterStones.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecount: _.name,\r\n    }));\r\n    const metalcolour = response.allMasterMetalsColors.nodes.map((_) => ({\r\n      ..._,\r\n      productColor: _.name,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const metalpurity = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      purity: _.name,\r\n    }));\r\n    const diamondcolors = response.allMasterDiamondsColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondclarities = response.allMasterDiamondClarities.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const productseries = response.allProductLists.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.productSeries,\r\n    }));\r\n    const gemstontypes = response.allMasterGemstonesTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n    }));\r\n\r\n    const gemstonshapes = response.allMasterGemstonesShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n    const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.alias,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const earringbacking = response.allMasterEarringBackings.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.diamondColor + _.diamondClarity,\r\n      label: _.diamondColor + _.diamondClarity,\r\n    }));\r\n    const hashtags = response.allMasterHashTags.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.name,\r\n      label: _.name,\r\n    }));\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._,\r\n    //     name: _.name,\r\n    //     size:_.size,\r\n    //     productType : _.productType ,\r\n    // }))\r\n\r\n    const metals = apidata.metals;\r\n\r\n    return {\r\n      category,\r\n      product_type,\r\n      material,\r\n      gender,\r\n      vendorcode,\r\n      metalcolour,\r\n      metals,\r\n      diamondsettings,\r\n      diamondshapes,\r\n      themes,\r\n      styles,\r\n      occasions,\r\n      collections,\r\n      gemstonecolor,\r\n      stones,\r\n      metalpurity,\r\n      diamondcolors,\r\n      diamondtypes,\r\n      diamondclarities,\r\n      productseries,\r\n      gemstontypes,\r\n      gemstonshapes,\r\n      gemstonesettings,\r\n      earringbacking,\r\n      // metalSizeMinToMax\r\n      hashtags,\r\n    };\r\n  },\r\n};\r\n\r\nexport const orderList = {\r\n  query: ORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const userOders = {\r\n  query: USERORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const materialMaster = {\r\n  query: VOUCHERMASTER,\r\n  mapper: (response) => {\r\n    const materials = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const vendors = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const product_categories = response.allMasterProductCategories.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const product_types = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const pricing_components = response.allMasterPricingComponents.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const purities = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const occations = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      alias: _.shortCode,\r\n      diamondtype: _.diamondColor + _.diamondClarity,\r\n    }));\r\n\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._\r\n    // }))\r\n\r\n    // alert(JSON.stringify(product_types))\r\n    return {\r\n      vendors,\r\n      product_categories,\r\n      product_types,\r\n      materials,\r\n      pricing_components,\r\n      collections,\r\n      purities,\r\n      styles,\r\n      themes,\r\n      occations,\r\n      diamondtypes,\r\n      // metalSizeMinToMax\r\n    };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { productCategory } from \"../services/mapper\";\r\nimport { API_URL } from \"../config\";\r\nimport { isString } from \"util\";\r\n\r\nconst TOKEN = \"accesstoken\";\r\n\r\nconst initialNetworkCtx = {\r\n  networkCtx: {\r\n    mapper: productCategory,\r\n    status: {\r\n      called: false,\r\n      data: [],\r\n      loading: true,\r\n      error: false,\r\n      parsedData: [],\r\n    },\r\n    notRequested: true,\r\n  },\r\n  setNetworkCtx: () => null,\r\n  sendNetworkRequest: () => null,\r\n};\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n  url = API_URL + url;\r\n  console.info(\"URL\", url, data);\r\n  const method = data ? \"POST\" : \"GET\",\r\n    headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n  let resdata = null;\r\n  if (auth) {\r\n    const token = localStorage.getItem(TOKEN);\r\n    if (token) headers[\"x-access-token\"] = token;\r\n    // else window.location = '/'\r\n  }\r\n  const response = await fetch(\r\n    url,\r\n    method === \"GET\"\r\n      ? { method }\r\n      : {\r\n          method,\r\n          body: isString(data) ? data : JSON.stringify(data),\r\n          headers,\r\n        }\r\n  );\r\n\r\n  if (response.status < 400) {\r\n    resdata = await response.json();\r\n  } else {\r\n    resdata = await response.json();\r\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n    // {\r\n    //    if(!resdata.auth)\r\n    //    {\r\n    //     //alert(resdata.message)\r\n    //    }\r\n    // }else{\r\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n    // }\r\n  }\r\n  resdata[\"statuscode\"] = response.status;\r\n\r\n  return resdata;\r\n};\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n  const [networkCtx, setNetworkCtx] = React.useState(\r\n    initialNetworkCtx.networkCtx\r\n  );\r\n\r\n  return (\r\n    <NetworkContext.Provider\r\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\r\n    >\r\n      {props.children}\r\n    </NetworkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst DownloadCsv = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [showdownload, setShowDownload] = useState(false);\r\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const fetchCSVdata = async (event, done) => {\r\n    setLoader(true);\r\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n    let responseData = responseCSV.res_json;\r\n\r\n    if (responseCSV.statuscode === 200) {\r\n      let keyData = [];\r\n\r\n      for (const [key] of Object.entries(responseData[0])) {\r\n        keyData.push({ label: key, key: key });\r\n      }\r\n\r\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n      setLoader(false);\r\n      setShowDownload(true);\r\n    }\r\n  };\r\n\r\n  const clearCsv = () => {\r\n    setDataCSV({ keyCSV: [], valueCSV: [] });\r\n    setShowDownload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n          <CircularProgress size={20} />\r\n        </Button>\r\n      ) : showdownload ? (\r\n        <CSVLink\r\n          header={dataCSV.keyCSV}\r\n          data={dataCSV.valueCSV}\r\n          filename={\"product-details.csv\"}\r\n          onClick={() => {\r\n            clearCsv();\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n            Download CSV\r\n          </Button>\r\n        </CSVLink>\r\n      ) : (\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\r\n          Load CSV\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadCsv;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nexport let AlertProps = {\r\n  vertical: {\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n  },\r\n  horizontal: {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    center: \"center\",\r\n  },\r\n  severity: {\r\n    success: \"success\",\r\n    error: \"error\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n  },\r\n};\r\n\r\n/**\r\n * AlertContext store the props which are neccessary to show the Alert component,\r\n * which is provided at the /src/App.js using the /src/App.alert.js.\r\n */\r\nexport let AlertContext = React.createContext({\r\n  open: false,\r\n  severity: AlertProps.severity.success,\r\n  msg: \"\",\r\n  vertical: AlertProps.vertical.top,\r\n  horizontal: AlertProps.horizontal.center,\r\n  onclose: () => null,\r\n  setSnack: () => null,\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AlertContext } from \"../../../context/AlertContext\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst FullCSVData = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [productType, setProductType] = React.useState(\"\");\r\n  const [include, setInclude] = React.useState(false);\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((res) => {\r\n        setOptions(\r\n          res.data.type.nodes.filter((i) => i.name).map((i) => i.name)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const onDownload = () => {\r\n    if (productType == null) {\r\n      return snack.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Please choose a product type!\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType, include })\r\n      .then((data) => {\r\n        exportFromJSON({\r\n          data,\r\n          fileName: `${productType}`,\r\n          exportType: \"xls\",\r\n        });\r\n        setOpen(false);\r\n        setLoader(false);\r\n        setProductType(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setOpen(false);\r\n        setLoader(false);\r\n        return snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occurred while downloading, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ marginRight: \"8px\" }}\r\n      >\r\n        Full Data Download\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Choose Product Type to download data?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"type\"\r\n            options={options}\r\n            value={productType}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={(e, value) => {\r\n              setProductType(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product Type\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={include}\r\n                onChange={() => {\r\n                  setInclude(!include);\r\n                }}\r\n                color=\"primary\"\r\n                name=\"include\"\r\n              />\r\n            }\r\n            label={\"Include disabled products\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {loader && <CircularProgress size={28} />}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onDownload} color=\"primary\">\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FullCSVData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DownloadCsv from \"./components/downloadcsv\";\r\nimport { Search, Filter } from \"./components\";\r\nimport FullCSVData from \"./components/FullCSVData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Grid container>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\r\n          <Grid>\r\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\r\n              <FilterListIcon className={classes.filterIcon} /> Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n//MuiAlert component which is shown inside the Snackbar component\r\nlet Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport const Alerts = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.onclose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      id=\"main_alert_snackbar\"\r\n      anchorOrigin={{\r\n        vertical: props.vertical,\r\n        horizontal: props.horizontal,\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\r\n        {props.msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\",\r\n    marginBottom:\"60px\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { TableCell, TableRow, Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport parse from \"html-react-parser\";\r\nimport moment from \"moment\";\r\n\r\nconst getComponent = (data) => {\r\n  switch (data.type) {\r\n    case \"TEXT\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: data?.customWidth ? data?.customWidth : \"\",\r\n            lineBreak: data?.customWidth ? \"anywhere\" : \"unset\",\r\n          }}\r\n        >\r\n          {data.rowData}\r\n        </div>\r\n      );\r\n    }\r\n    case \"HTMLTEXT\": {\r\n      return <div>{parse(data?.rowData)}</div>;\r\n    }\r\n    case \"INCREMENT\": {\r\n      return <div>{data.rowIndex + 1}</div>;\r\n    }\r\n    case \"TOTAL_STORES\": {\r\n      return <div>{data?.rowData?.length}</div>;\r\n    }\r\n    case \"VIEW_STORES\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"blue\",\r\n            cursor: \"pointer\",\r\n            textDecoration: \"underline\",\r\n          }}\r\n          onClick={data?.handleViewStores}\r\n        >\r\n          {data?.customText ?? \"View Details\"}\r\n        </div>\r\n      );\r\n    }\r\n    case \"MBL_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"WEB_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"ACTION\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 6,\r\n          }}\r\n        >\r\n          <EditIcon onClick={data?.handleEdit} style={{ cursor: \"pointer\" }} />\r\n          <DeleteIcon\r\n            onClick={data?.handleDelete}\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    case \"EDIT\": {\r\n      return (\r\n        <EditIcon style={{ cursor: \"pointer\" }} onClick={data?.handleEdit} />\r\n      );\r\n    }\r\n\r\n    case \"BUTTON_ARRAY\": {\r\n      return (\r\n        <div>\r\n          {data.rowData.map((val) => (\r\n            <div style={{ paddingBottom: \"4px\" }}>\r\n              <div>{val.name}</div>\r\n              {val.url.length > 0 && (\r\n                <div style={{ color: \"blue\" }}>{val.url}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    case \"DATE_PICKER\": {\r\n      return (\r\n        <div>\r\n          <Typography>\r\n            {data.rowData ? moment(data.rowData).format(\"MMMM DD, YYYY\") : \"-\"}\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n    case \"ARRAYTEXT\": {\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <Typography>\r\n            <div>{_.name}</div>\r\n            {_.url.length > 0 && <div style={{ color: \"blue\" }}>{_.url}</div>}\r\n          </Typography>\r\n        );\r\n      });\r\n    }\r\n    case \"DETAILED_ARR\": {\r\n      // debugger\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <Typography>\r\n            <div>{parse(_?.title)}</div>\r\n            <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"4px\"}}>\r\n            <div>{_?.subtitle}</div>\r\n            <div>{_?.weigh}</div></div>\r\n            <div>{parse(_?.about)}</div>\r\n          </Typography>\r\n        );\r\n      });\r\n    }\r\n    case \"ARR_IMAGE\": {\r\n      // debugger\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <img\r\n            alt=\"nacimages\"\r\n            src={_}\r\n            style={{ width: \"150px\", height: \"auto\" }}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    // case \"ARRAY_IMAGES\": {\r\n    //   return (\r\n    //     data?.rowData?.map((_) => {\r\n    //       return (\r\n    //         < img\r\n    //           alt=\"nacimages\"\r\n    //           src={_?.img}\r\n    //           style={{ width: \"150px\", height: \"auto\" }\r\n    //           }\r\n    //         />\r\n    //       )\r\n    //     }))\r\n    // }\r\n    case \"ARR_TEXT\": {\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <Typography>\r\n            <div style={{ color: \"blue\", textTransform: \"capitalize\" }}>\r\n              {_?.products}\r\n            </div>\r\n            <div style={{ textTransform: \"capitalize\" }}>{_.location}</div>\r\n          </Typography>\r\n        );\r\n      });\r\n    }\r\n    case \"ARRAY_IMAGES\": {\r\n      // debugger\r\n      return data.rowData?.map((_) => {\r\n        return (\r\n          <>\r\n            <img\r\n              alt=\"nacimages\"\r\n              src={_?.img}\r\n              style={{ width: \"150px\", height: \"auto\" }}\r\n            />\r\n            {_.text && <Typography>{_?.text}</Typography>}\r\n            {_.weigh && <Typography>{_?.weigh}</Typography>}\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nconst TableBodyRow = ({\r\n  tableData = [],\r\n  rowData = {},\r\n  rowIndex = null,\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      {tableData.map((val, i) => (\r\n        <TableCell>\r\n          {getComponent({\r\n            type: val.type,\r\n            rowData: rowData[val.name],\r\n            rowIndex: rowIndex,\r\n            handleViewStores: (e) => {\r\n              handleViewStores(e, rowData, rowIndex);\r\n            },\r\n            handleDelete: (e) => {\r\n              handleDelete(e, rowData, rowIndex);\r\n            },\r\n            handleEdit: (e) => {\r\n              handleEdit(e, rowData, rowIndex);\r\n            },\r\n            customWidth: val?.width,\r\n            customText: val?.customName,\r\n          })}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableBodyRow;\r\n","import {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Link,\r\n  Button,\r\n  Table,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport TableBodyRow from \"./TableBodyRow\";\r\n\r\nconst TableComp = ({\r\n  header = [],\r\n  tableData = [],\r\n  data = [],\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tableWrapper}>\r\n      <Table\r\n        className={classes.table}\r\n        border={1}\r\n        borderColor={\"#ddd\"}\r\n        size=\"small\"\r\n        stickyHeader\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {header?.map((val) => (\r\n              <TableCell>{val}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ?\r\n          <TableBody>\r\n            {data.map((val, index) => (\r\n              <TableBodyRow\r\n                tableData={tableData}\r\n                rowData={val}\r\n                rowIndex={index}\r\n                handleViewStores={handleViewStores}\r\n                handleDelete={handleDelete}\r\n                handleEdit={handleEdit}\r\n              />\r\n            ))}\r\n          </TableBody> :\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              padding: \"10px 0px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\"> No data Found </Typography>\r\n          </div>}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nexport const DatePickerComp = (props) => {\r\n  console.log(props?.value , \"ll\")\r\n  return (\r\n    <DatePicker selected={props?.value ? new Date(props?.value):null} onChange={(date) => props?.onChange(date)} />\r\n  );\r\n};\r\n\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLFEATUREDPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\r\n\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEFEATUREDPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETEFEATUREDPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATEFEATUREDPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Featured Product\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\n\r\nimport { Breadcrumbs } from \"../index\";\r\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <FeaturedProductComponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLNEWARRIVALPRODUCT,\r\n  CREATENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLNEWARRIVALPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allNewArrivalProducts.nodes;\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVENEWARRIVALPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETENEWARRIVALPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATENEWARRIVALPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - New Arrival\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./component/NewarrivalComponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { REVIEWQUERY } from \"../../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_sku\", label: \"Product Sku\" },\r\n  { id: \"customerName\", label: \"customer Name\" },\r\n  { id: \"rating\", label: \"Rating\" },\r\n  { id: \"title\", label: \"Title\" },\r\n  { id: \"message\", label: \"Message\" },\r\n  { id: \"ispublish\", label: \"Publish\" },\r\n  { id: \"isactive\", label: \"Active\" },\r\n];\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\r\n    updateCustomerReviewById(\r\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\r\n    ) {\r\n      customerReview {\r\n        id\r\n        isActive\r\n        message\r\n        productId\r\n        title\r\n        customerName\r\n        productSku\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\r\n  updateCustomerReviewById(\r\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\r\n  ) {\r\n    customerReview {\r\n      id\r\n      isPublish\r\n      message\r\n      productId\r\n      title\r\n      customerName\r\n      productSku\r\n      rating\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CustomerReview = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [allReview, setAllReview] = useState([]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: REVIEWQUERY }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allCustomerReviews.nodes;\r\n        console.log(data);\r\n        setAllReview(data);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleChangeIsPublish = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISPUBLISHREVIEW,\r\n        variables: { id: Id, isPublish: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChangeIsActive = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEREVIEW,\r\n        variables: { id: Id, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allReview\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\r\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\r\n                  <TableCell align=\"left\">{row.rating}</TableCell>\r\n                  <TableCell align=\"left\">{row.title}</TableCell>\r\n                  <TableCell align=\"left\">{row.message}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isPublish ?? false}\r\n                      onChange={handleChangeIsPublish(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isActive ?? false}\r\n                      onChange={handleChangeIsActive(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={allReview.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CustomerReview;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst productuploadCtxInitial = {\r\n  productCtx: {\r\n    product_categoy: \"\",\r\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\r\n    product_type: [],\r\n    productname: \"\",\r\n    material: \"\",\r\n    description: \"\",\r\n    minOrderQty: \"\",\r\n    maxOrderQty: \"\",\r\n    height: \"\",\r\n    length: \"\",\r\n    earringbacking: [],\r\n    product_type_shortcode: \"\",\r\n    category: [],\r\n    metalColour: \"\",\r\n    metalpurities: \"\",\r\n    isExpand: false,\r\n    selectedgender: \"\",\r\n    selected_metal_colour: {},\r\n    gender: {},\r\n    product_gender: [],\r\n    vendorcode: [],\r\n    productseries: [],\r\n    size: 0,\r\n    sizes: [],\r\n    selected_sizes: [],\r\n    productSize: [],\r\n    masterProductSize: [],\r\n    metal: {\r\n      value: 1,\r\n      label: \"Diamond\",\r\n    },\r\n    materials: [\r\n      \"Diamond\",\r\n      \"Gold\",\r\n      \"Gemstone\",\r\n      \"Solitaire\",\r\n      \"Silver\",\r\n      \"Platinum\",\r\n    ],\r\n    gemstontypes: \"\",\r\n    gemstonshapes: \"\",\r\n    product_code: \"\",\r\n    isactive: false,\r\n    gemstonelist: [],\r\n    diamondlist: [],\r\n    variants: [],\r\n    oldproductMetalColor: [],\r\n    oldproductMetalPurity: [],\r\n    productMetalColor: [],\r\n    productMetalPurity: [],\r\n    productDiamondColor: [],\r\n    productDiamondClarity: [],\r\n    productDiamondTypes: [],\r\n    productImages: [],\r\n    productDiamondTypesArray: [],\r\n    oldproductDiamondTypesArray: [],\r\n    productmaterials: [],\r\n    createVariantList: [],\r\n    editVariants: [],\r\n    editDiamondLists: [],\r\n    editGemstoneLists: [],\r\n    productVariantSize: [\r\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\r\n    ],\r\n    variant_size: [],\r\n    gemstonetype: \"\",\r\n    gemstoneshape: \"\",\r\n    gemstonesettings: \"\",\r\n    gemstonesize: \"\",\r\n    gemstonecount: \"\",\r\n    gemstoneweight: \"\",\r\n    stonetype: \"\",\r\n    isactiveVariant: \"\",\r\n    editleadtime: \"\",\r\n    editreadytoship: false,\r\n    editisdefault: false,\r\n    editisactive: null,\r\n    editisOrderable: false,\r\n    editorderShippingDays:0,\r\n\r\n    editcostprice: 0,\r\n    editsellingprice: 0,\r\n    editmarkupprice: 0,\r\n    editdiscountprice: 0,\r\n    editcostpricetax: 0,\r\n    editsellingpricetax: 0,\r\n    editmarkuppricetax: 0,\r\n    editdiscountpricetax: 0,\r\n\r\n    diamondclarity: \"\",\r\n    diamondcolor: \"\",\r\n    diamondsettings: \"\",\r\n    diamondshape: \"\",\r\n    diamondcount: \"\",\r\n    diamondweight: \"\",\r\n    diamonditemname: \"\",\r\n    diamondsubitemname: \"\",\r\n    diamonddescription: \"\",\r\n    gemstoneitemname: \"\",\r\n    gemstonesubitemname: \"\",\r\n    gemstonedescription: \"\",\r\n    metalindex: -1,\r\n    themes: [],\r\n    prod_styles: [],\r\n    occassions: [],\r\n    collections: [],\r\n    hashtags: [],\r\n    stonecount: [],\r\n    stonecolour: [],\r\n    product_images: {},\r\n    metalcolour: [],\r\n    metal_purity: [],\r\n    metalpurity: [],\r\n    metal_color: 0,\r\n    metal_weight: 0,\r\n    diamond_colour: 0,\r\n    diamond_clarity: 0,\r\n    metal_height: 0,\r\n    metal_width: 0,\r\n    metal_length: 0,\r\n    metal_object: 0,\r\n    diamondtype: 0,\r\n    metals: [],\r\n    error_message: {},\r\n    showPriceBreakup: null,\r\n    isOrderable:false,\r\n    orderShippingDays:0\r\n  },\r\n  masterData: {},\r\n  setProductCtx: () => null,\r\n};\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n  return productuploadCtxInitial.productCtx;\r\n};\r\n\r\nexport const ProductProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [productCtx, setProductCtx] = React.useState(\r\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\r\n  );\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"productCtx s\", productCtx);\r\n  }, [productCtx.material]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        productCtx,\r\n        setProductCtx,\r\n        masterData: mapDataToCtx(\r\n          props.value.data,\r\n          props.value.mapper,\r\n          props.value.mappertype\r\n        ),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst voucherCtxInitial = {\r\n    voucherCtx: {\r\n        voucher:\"\",\r\n        attrobj:{}\r\n    },\r\n    voucherMaster: {\r\n        materials: []\r\n    },\r\n    setVoucherCtx: () => null\r\n}\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n\r\n    return voucherCtxInitial.voucherCtx;\r\n}\r\n\r\nexport const VoucherProvider = props => {\r\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',voucherCtx);\r\n    },[voucherCtx.voucher])\r\n\r\n    return(\r\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </VoucherContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst orderCtxInitial = {\r\n  orderCtx: {},\r\n  orderMaster: {\r\n    orders: [],\r\n  },\r\n  setOrderCtx: () => null,\r\n};\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\r\n\r\n  return orderCtxInitial.orderCtx;\r\n};\r\n\r\nexport const OrderProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"orderCtx s\", orderCtx);\r\n  }, [orderCtx.order]);\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\r\n    >\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { CATGORYLIST } from \"../../../../graphql/query\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  const [editcontent, setEditcontent] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias: vendordata.alias,\r\n      name: vendordata.name,\r\n      isedit: true,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\r\n  }\r\n  async function Savevendor(refetch) {}\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    props.onCancel();\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card>\r\n        <CardHeader title=\"Category\" />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n\r\n                  <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                  <TableCell align=\"left\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={(data) =>\r\n                      setPageCount(data.allMasterProductCategories.totalCount)\r\n                    }\r\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\r\n                  >\r\n                    {({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                        // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>;\r\n                        // return false\r\n                      }\r\n                      if (data) {\r\n                        return (\r\n                          <>\r\n                            {data.allMasterProductCategories.nodes.map(\r\n                              (row, index) => (\r\n                                <>\r\n                                  {index == 0 && props.isadd ? (\r\n                                    <TableRow key={row.name}>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => Cancelcreate()}>\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  ) : null}\r\n                                  <TableRow key={row.name}>\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"categoryname\"\r\n                                          name=\"categoryname\"\r\n                                          value={editcontent.name}\r\n                                          onChange={handleInputChange(\"name\")}\r\n                                          label=\"Name\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.name}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"alias\"\r\n                                          name=\"alias\"\r\n                                          value={editcontent.alias}\r\n                                          onChange={handleInputChange(\"alias\")}\r\n                                          label=\"alias\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.shortCode}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button\r\n                                          onClick={(e) => CancelEdit(row)}\r\n                                        >\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        onClick={(e) => Editvendor(row)}\r\n                                        style={{ width: 20 }}\r\n                                      >\r\n                                        <Button>\r\n                                          <EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                </>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return <div>{\"Fetch Products\"}</div>;\r\n                      }\r\n                    }}\r\n                  </Query>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Configuration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Daily Metal Rate\",\r\n    \"Countries & Fx Rates\",\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"daily_metal_rate\",\r\n    \"countries\",\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Configure\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {master_options.map((text, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link\r\n            underline=\"none\"\r\n            component={RouterLink}\r\n            to={master_options_url[index]}\r\n          >\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {text}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Configuration;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n \r\n  console.log(props);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label ? headCell.label : headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  colors, Dialog,\r\n\r\n\r\n  FormControlLabel,\r\n  Grid, Switch,\r\n\r\n\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\nimport \"../../tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  },\r\n}));\r\n\r\nconst EditContent = (props) => {\r\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond,\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  function previewimage(url) {\r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const toggleChecked = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\r\n  };\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => { }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          {attributes.map((columnname, index) => (\r\n            <>\r\n              {showpreview && (\r\n                <Lightbox\r\n                  class=\"fade\"\r\n                  mainSrc={previewurl}\r\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\r\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                  onCloseRequest={() => setShowpreview(false)}\r\n                  onMovePrevRequest={() => alert(\"prev\")}\r\n                  onMoveNextRequest={() => alert(\"next\")}\r\n                />\r\n              )}\r\n              <Grid container xs={12} spacing={2}>\r\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n\r\n                {columnname.key == \"email\" && !diamond.isedit ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.type === 2 && (\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      label={columnname.key}\r\n                      labelPlacement=\"start\"\r\n                      control={\r\n                        <Switch\r\n                          checked={editcontent[columnname.key]}\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                          onChange={toggleChecked(columnname.key)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {columnname.type === 3 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"combo-box-demo\"\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 4 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography> {diamond[columnname.key]}</Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 5 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"combo-box-demo\"\r\n                      // options={props.masters[columnname.mastervaluekey]}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 6 && (\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                      {columnname.controllabel}\r\n                    </Button>{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 9 && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={12}>\r\n                      <AvatarGroup max={2}>\r\n                        {diamond[columnname.key]\r\n                          ? diamond[columnname.key]\r\n                            .split(\",\")\r\n                            .map((diamond, index) => (\r\n                              <Avatar\r\n                                alt=\"Remy Sharp\"\r\n                                src={diamond}\r\n                                onClick={() => previewimage(diamond)}\r\n                                className={classes.small}\r\n                              />\r\n                            ))\r\n                          : null}\r\n                      </AvatarGroup>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FilePond\r\n                        style={{ height: \"100\", width: \"100\" }}\r\n                        oninit={() => handleInit()}\r\n                        labelIdle=\"Add Banner Image\"\r\n                        onaddfile={(error, fileItem) => {\r\n                          if (!error) {\r\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\r\n                          } else {\r\n                            // alert(row[columnname.key])\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => onClose()} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditContent;\r\n","import { Button, Grid, Paper, Switch, TextField } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditContent from \"./components/EditContent\";\r\nimport \"./tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Vendor = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [masterlist, setMasterlist] = React.useState(props.values);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editEmail, setEditEmail] = React.useState(false);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [isedit, setIsedit] = React.useState(false);\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const [aliasName, setaliasName] = React.useState(\"\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function addnewvendor() {\r\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\r\n    setaliasName(props.prefix + sort_id);\r\n\r\n    setEditcontent({\r\n      alias: aliasName,\r\n      ...editcontent,\r\n      isedit: false,\r\n    });\r\n\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n    setIsadd(true);\r\n    setOpenedit(true);\r\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n  }\r\n  Array.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditEmail(true);\r\n    delete vendordata[\"action\"];\r\n\r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit: true,\r\n    });\r\n    setOpenedit(true);\r\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n  }\r\n  async function Savevendor(content) {\r\n    props.onCreate(content);\r\n    setIsadd(false);\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n    // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function searrchcontent() {\r\n    props.onSearch(\r\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\r\n    );\r\n  }\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n  function removeimage(imagename, keyvalue) {\r\n    let previmagenames = editcontent[keyvalue];\r\n    let newimages = [];\r\n    let previmages = previmagenames.split(\",\");\r\n    previmages.forEach((element) => {\r\n      if (element == imagename) {\r\n      } else {\r\n        newimages.push(element);\r\n      }\r\n    });\r\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    if (isadd) {\r\n      let masters = masterlist;\r\n\r\n      masters.splice(0, 1);\r\n      setMasterlist(masterlist);\r\n    }\r\n    setIsadd(false);\r\n    setEditcontent({});\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleSearchChange = (type) => (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  const handleChange = (type) => (event) => {\r\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl =\r\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  useEffect(() => {\r\n    setMasterlist(props.values);\r\n  }, [props.values]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  }\r\n  function previewimage(url) {\r\n    setpreviewurl(url);\r\n    setShowpreview(true);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showpreview && (\r\n        <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n          // nextSrc={images[(photoIndex + 1) % images.length]}\r\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={() => setShowpreview(false)}\r\n          onMovePrevRequest={() => alert(\"prev\")}\r\n          onMoveNextRequest={() => alert(\"next\")}\r\n        />\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={3} sm={3}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\r\n            <Grid fullwidth item xs={9} sm={9}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                id=\"vendordeliverydays\"\r\n                name=\"vendordeliverydays\"\r\n                //  /  value={editcontent.searchcontent}\r\n                onChange={handleInputChange(\"searchcontent\")}\r\n                label=\"Search text\"\r\n              />\r\n            </Grid>\r\n            <Grid fullwidth item xs={3} sm={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => searrchcontent()}\r\n                color=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            {props?.fxSyncAPI && (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => props.fxSyncAPI()}\r\n                color=\"primary\"\r\n              >\r\n                Sync Latest Fx Rate\r\n              </Button>\r\n            )}\r\n            {props.button_title ? (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => addnewvendor()}\r\n                color=\"primary\"\r\n              >\r\n                {props.button_title}\r\n              </Button>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n            <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {masterlist.map((row, index) => (\r\n                <>\r\n                  <TableRow>\r\n                    {props.columns.map((columnname, index) => (\r\n                      <>\r\n                        {columnname.key === \"action\" ? (\r\n                          <TableCell align=\"center\" style={{ width: 20 }}>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <>\r\n                                <Button onClick={(e) => Savevendor()}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <Button onClick={(e) => Editvendor(row)}>\r\n                                <EditIcon />\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                        ) : (\r\n                          <>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell align=\"left\">\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    onChange={handleChange(columnname.key)}\r\n                                    checked={editcontent[columnname.key]}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button variant=\"outlined\" color=\"primary\">\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type == 3 ? (\r\n                                  <Autocomplete\r\n                                    multiple\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 9 ? (\r\n                                  <>\r\n                                    <FilePond\r\n                                      oninit={() => handleInit()}\r\n                                      labelIdle=\"Add Banner Image\"\r\n                                      onaddfile={(error, fileItem) => {\r\n                                        if (!error) {\r\n                                          uploadimagetoserver(\r\n                                            fileItem,\r\n                                            columnname.key,\r\n                                            \"add\"\r\n                                          );\r\n                                        } else {\r\n                                          // alert(row[columnname.key])\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <div className={classes.imagecontainer}>\r\n                                      {editcontent[columnname.key]\r\n                                        ? editcontent[columnname.key]\r\n                                            .split(\",\")\r\n                                            .map((row, index) => (\r\n                                              <Badge\r\n                                                overlap=\"circle\"\r\n                                                anchorOrigin={{\r\n                                                  vertical: \"top\",\r\n                                                  horizontal: \"right\",\r\n                                                }}\r\n                                                badgeContent={\r\n                                                  <HighlightOffIcon\r\n                                                    fontSize=\"small\"\r\n                                                    onClick={() =>\r\n                                                      removeimage(\r\n                                                        row,\r\n                                                        columnname.key\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                }\r\n                                              >\r\n                                                <Avatar\r\n                                                  alt=\"Remy Sharp\"\r\n                                                  src={row}\r\n                                                  className={classes.small}\r\n                                                />\r\n                                              </Badge>\r\n                                            ))\r\n                                        : null}\r\n                                    </div>\r\n                                  </>\r\n                                ) : null}\r\n                                {columnname.type == 5 ? (\r\n                                  <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    // options={\r\n                                    //   props.masters[columnname.mastervaluekey]\r\n                                    // }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 4 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {!columnname.type || columnname.type == 1 ? (\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    id={columnname.key}\r\n                                    name={columnname.key}\r\n                                    value={editcontent[columnname.key]}\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    label={columnname.label}\r\n                                  />\r\n                                ) : null}{\" \"}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>\r\n                                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n\r\n                                {columnname.type === 9 ? (\r\n                                  <AvatarGroup max={2}>\r\n                                    {row[columnname.key]\r\n                                      ? row[columnname.key]\r\n                                          .split(\",\")\r\n                                          .map((row, index) => (\r\n                                            <Avatar\r\n                                              alt=\"Remy Sharp\"\r\n                                              src={row}\r\n                                              onClick={() => previewimage(row)}\r\n                                              className={classes.small}\r\n                                            />\r\n                                          ))\r\n                                      : null}{\" \"}\r\n                                    {/* className={classes.small} />)) : null } */}\r\n                                  </AvatarGroup>\r\n                                ) : null}\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    checked={row[columnname.key]}\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type != 2 &&\r\n                                columnname.type != 6 &&\r\n                                columnname.type != 8 &&\r\n                                columnname.type != 9 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ))}\r\n                  </TableRow>\r\n                </>\r\n              ))}\r\n\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 200, 500]}\r\n                  count={[props.values.length]}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  // ActionsComponent={TablePaginationActions}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          {editcontent && (\r\n            <EditContent\r\n              diamond={editcontent}\r\n              attributes={props.columns}\r\n              title={props.title}\r\n              masters={props.masters}\r\n              onApply={Savevendor}\r\n              onClose={handleApplicationClose}\r\n              open={openedit}\r\n              prefix={aliasName}\r\n              editemail={editEmail}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import gql from \"graphql-tag\";\r\n\r\nlet CREATE_HOLIDAY = gql`\r\n  mutation ($item: HolidayManagerInput!) {\r\n    createHolidayManager(input: { holidayManager: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_HOLIDAY = gql`\r\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\r\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_HOLIDAY = gql`\r\n  mutation ($id: Int!) {\r\n    deleteHolidayManagerById(input: { id: $id }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_WAREHOUSE = gql`\r\n  mutation ($item: WarehouseInput!) {\r\n    createWarehouse(input: { warehouse: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_WAREHOUSE = gql`\r\n  mutation ($id: Int!, $item: WarehousePatch!) {\r\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_WAREHOUSE = gql`\r\n  mutation ($id: Int!) {\r\n    deleteWarehouseById(input: { id: $id }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_INVENTORY = gql`\r\n  mutation ($item: InventoryInput!) {\r\n    createInventory(input: { inventory: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_INVENTORY = gql`\r\n  mutation ($id: UUID!, $item: InventoryPatch!) {\r\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_INVENTORY = gql`\r\n  mutation ($id: UUID!) {\r\n    deleteInventoryById(input: { id: $id }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_ORDER = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $awbNumber: String\r\n    $comments: String\r\n    $orderStatus: String\r\n    $paymentStatus: String\r\n  ) {\r\n    updateOrderById(\r\n      input: {\r\n        orderPatch: {\r\n          awbNumber: $awbNumber\r\n          comments: $comments\r\n          orderStatus: $orderStatus\r\n          paymentStatus: $paymentStatus\r\n        }\r\n        id: $id\r\n      }\r\n    ) {\r\n      order {\r\n        id\r\n        paymentStatus\r\n        awbNumber\r\n        paymentMode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $updatedAt: Datetime!\r\n    $isActive: Boolean\r\n    $date: Datetime\r\n    $startDate: Date\r\n  ) {\r\n    createAppointmentDate(\r\n      input: {\r\n        appointmentDate: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          startDateTime: $date\r\n          endDateTime: $date\r\n          isActive: $isActive\r\n          startDate: $startDate\r\n          endDate: $startDate\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDate {\r\n        createdAt\r\n        createdBy\r\n        isActive\r\n        updatedBy\r\n        startDateTime\r\n        id\r\n        endDateTime\r\n        isUnavailable\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $startDateTime: Datetime\r\n    $endDateTime: Datetime\r\n    $appointmentDateId: UUID\r\n    $updatedAt: Datetime!\r\n    $startTime: Time\r\n    $endTime: Time\r\n    $appointmentTypeId : Int!\r\n  ) {\r\n    createAppointmentDateTimeSlot(\r\n      input: {\r\n        appointmentDateTimeSlot: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          endDateTime: $endDateTime\r\n          startDateTime: $startDateTime\r\n          isActive: true\r\n          appointmentDateId: $appointmentDateId\r\n          startTime: $startTime\r\n          endTime: $endTime\r\n          appointmentTypeId : $appointmentTypeId\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDateTime\r\n        endDateTime\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateTimeSlotById(input: { id: $id }) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDate\r\n        endDate\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DELETE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateById(input: { id: $id }) {\r\n      appointmentDate {\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREATE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  CREATE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  CREATE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_ORDER,\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HolidayModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Holiday\"}\r\n              name=\"holiday\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.holiday}\r\n              onChange={props.editItem}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className={classes.inputField}\r\n                label={\"Date\"}\r\n                name=\"date\"\r\n                fullWidth\r\n                inputVariant=\"outlined\"\r\n                value={props.item.date}\r\n                onChange={(_, value) => props.editItem(value, \"date\")}\r\n                format={\"yyyy-MM-dd\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HolidayModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n} from \"../../graphql/mutation\";\r\nimport { HOLIDAYLIST } from \"../../graphql/query\";\r\nimport HolidayModal from \"./HolidayModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const HolidayManager = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    HOLIDAYLIST,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\r\n\r\n  const editItem = (event, type) => {\r\n    var name, value;\r\n    if (type == \"date\") {\r\n      name = type;\r\n      value = event;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ holiday: \"\", date: null });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type == \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_HOLIDAY,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    // console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addholidays\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully added holidays!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Holiday Manager</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Holidays\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/holidays.csv\";\r\n            a.setAttribute(\"download\", \"holidays.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Holiday\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Holiday</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Holidays found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allHolidayManagers?.nodes.length > 0 &&\r\n                data?.allHolidayManagers?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.holiday}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allHolidayManagers?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <HolidayModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InventoryModal = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n\r\n  const client = useApolloClient();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const validateGeneratedSku = (generatedSku) => {\r\n    client\r\n      .mutate({\r\n        mutation: VALIDATEGENERATEDSKU,\r\n        variables: { generatedSku },\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\r\n          setError(\"Tag No doesn't exists!\");\r\n        } else {\r\n          setError(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              label={\"Tag No\"}\r\n              name=\"generatedSku\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.generatedSku}\r\n              onChange={props.editItem}\r\n              error={Boolean(error)}\r\n              helperText={error}\r\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              type={\"Number\"}\r\n              label={\"Quantity\"}\r\n              name=\"numberOfItems\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.numberOfItems}\r\n              onChange={props.editItem}\r\n            />\r\n            <Autocomplete\r\n              loading={loading}\r\n              options={data?.allWarehouses?.nodes}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name}\r\n              value={props.item.warehouse}\r\n              onChange={props.editItem}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Warehouse\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InventoryModal;\r\n","import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n} from \"../../graphql/mutation\";\r\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\r\nimport InventoryModal from \"./InventoryModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StockStatus = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery(STOCKSTATUS);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allWarehouses.nodes.length > 0 &&\r\n        data.allWarehouses.nodes.map((item, index) => (\r\n          <Badge\r\n            badgeContent={\r\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\r\n            }\r\n            max={99999999}\r\n            color={\"error\"}\r\n            key={index}\r\n            component=\"div\"\r\n            className={classes.iconButton}\r\n            overlap=\"circle\"\r\n          >\r\n            <IconButton\r\n              disableRipple\r\n              className={classes.icon}\r\n              onClick={() => {\r\n                props.setWarehouse(item?.name);\r\n              }}\r\n            >\r\n              <StoreIcon\r\n                style={{ fontSize: 35 }}\r\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\r\n          </Badge>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Inventory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [search, setSearch] = React.useState(null);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    INVENTORYLIST,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        filter: {\r\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\r\n          warehouseByWarehouseId: {\r\n            name: {\r\n              includesInsensitive: warehouse,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({\r\n    generatedSku: \"\",\r\n    numberOfItems: \"\",\r\n    warehouse: { id: \"\", name: \"\" },\r\n  });\r\n\r\n  const editItem = (event, newValue) => {\r\n    var name, value;\r\n    if (newValue) {\r\n      console.log(newValue);\r\n      name = \"warehouse\";\r\n      value = newValue;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_INVENTORY,\r\n          variables: {\r\n            id,\r\n            item: {\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n              updatedAt: new Date(),\r\n            },\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_INVENTORY,\r\n          variables: {\r\n            item: {\r\n              id: uuid(),\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_INVENTORY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addinventories\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Inventory</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Inventory\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/inventory.csv\";\r\n            a.setAttribute(\"download\", \"inventory.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n            setItem({\r\n              generatedSku: \"\",\r\n              numberOfItems: \"\",\r\n              warehouse: { id: \"\", name: \"\" },\r\n            });\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Inventory\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          name=\"tagno\"\r\n          placeholder=\"Search Tag No.\"\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Tag No</TableCell>\r\n                <TableCell align={\"center\"}>Quantity</TableCell>\r\n                <TableCell align={\"center\"}>Warehouse</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allInventories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No items in inventory!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allInventories?.nodes.length > 0 &&\r\n                data?.allInventories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.generatedSku}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.numberOfItems}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.warehouse.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={6}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allInventories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <InventoryModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport gradients from '../../../../utils/gradients';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { GlobalContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n   \r\n  },\r\n  card: {\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n   const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(formState.isValid)\r\n    {\r\n      //alert(JSON.stringify(formState.values))\r\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\r\n   \r\n   if(signinobj.statuscode === 200)\r\n   {\r\n    localStorage.setItem('accesstoken', signinobj.accessToken);\r\n\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      // pagepermissions[element.pageurl] = {\r\n      //   isread : element.is_view,\r\n      //   iswrite : element.is_write\r\n      // }\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n    localStorage.setItem('accesspages', pages);\r\n    localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    \r\n    props.history.push('/productlist')\r\n\r\n\r\n   }else\r\n   {\r\n\r\n    setShowmessage(signinobj.message)\r\n    setOpen(true);\r\n   }\r\n  \r\n    }else{\r\n      alert(\"has some error\")\r\n    }\r\n\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n        Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n        {/* Sign in on the internal platform */}\r\n        </Typography>\r\n        \r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError('email')}\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              \r\n              onChange={handleChange}\r\n              value={formState.values.email || ''}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError('password')}\r\n              fullWidth\r\n              helperText={\r\n                hasError('password') ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || ''}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n        Log in\r\n          </Button>\r\n          <Snackbar open={open} autoHideDuration={6000}\r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n          onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n             {showmessage}\r\n            </Alert>\r\n      </Snackbar>\r\n        </form>\r\n       \r\n      </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Input} from '../../components/Input.js'\r\nimport Page from '../../components/Page'\r\n\r\nimport \"./Login.css\"\r\nimport { LoginForm } from './components';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n   \r\n  render() {\r\n  return (\r\n    <Page\r\n    className='root'\r\n      title=\"Login\"\r\n    >\r\n    <LoginForm />\r\n        </Page>\r\n         \r\n  );\r\n}\r\n}\r\n\r\n\r\n  \r\n  export default (withRouter(Login));","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Manageadminusers = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [masterroles, setMasterroles] = React.useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let roles = [];\r\n    taxcontent.roles.forEach((element) => {\r\n      roles.push(element.name);\r\n    });\r\n    let bodydata = {\r\n      username: taxcontent.username,\r\n      password: \"123456789\",\r\n      email: taxcontent.email,\r\n      roles: roles,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  async function getmasterroles() {\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n\r\n    setMasterroles(response.roles);\r\n\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\r\n    let adminusers = response.users;\r\n    let users = [];\r\n    adminusers.forEach((element) => {\r\n      let userobj = {};\r\n      userobj[\"id\"] = element.id;\r\n      userobj[\"username\"] = element.username;\r\n      userobj[\"password\"] = element.password;\r\n      userobj[\"email\"] = element.email;\r\n      userobj[\"mobile\"] = element.mobile;\r\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\r\n      let roles = [];\r\n      let rolesnames = [];\r\n\r\n      let userroles = element.user_roles;\r\n      userroles.forEach((userroleobj) => {\r\n        let roleobj = {};\r\n        roleobj[\"id\"] = userroleobj.master_role.id;\r\n        roleobj[\"name\"] = userroleobj.master_role.name;\r\n        roles.push(roleobj);\r\n        rolesnames.push(userroleobj.master_role.name);\r\n      });\r\n      userobj[\"roles\"] = roles;\r\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\r\n      users.push(userobj);\r\n    });\r\n\r\n    setFiltervalue(users);\r\n    setMastervalue(users);\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Admin Users\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          masters={masterroles}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Manageadminusers;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst SheduleModal = (props) => {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Schedule-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Shedule-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`Add Schedule Date`}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.inputField}\r\n            name=\"date\"\r\n            placeholder=\"Select a date\"\r\n            fullWidth\r\n            inputVariant=\"outlined\"\r\n            value={props.date ?? null}\r\n            onChange={(_, value) => props.editItem(value)}\r\n            minDate={new Date()}\r\n            format={\"yyyy-MM-dd\"}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          Save\r\n        </Button>\r\n\r\n        <Button onClick={props.onClose} variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModal;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  datecard: {\r\n    backgroundColor: \"white\",\r\n    padding: \"15px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px #c1c1c1\",\r\n    position:\"relative\"\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    fontSize: \"22px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  available: {\r\n    fontSize: \"20px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  availableTitle:{\r\n    fontSize: \"20px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  time: {\r\n    fontSize: \"16px\",\r\n  },\r\n  notchedOutline:{\r\n   width:\"20%\"\r\n  },\r\n  day:{\r\n    fontSize:\"14px\"\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst SheduleModalShow = (props) => {\r\n  const classes = useStyles();\r\n  const {appointmentTypes} = props;\r\n\r\n  const getTime=(time)=>{\r\n    let x = time;\r\n    const [ hour,minute,second] = x.split(\":\");\r\n    let d = new Date();\r\n    d.setHours(hour);\r\n    d.setMinutes(minute);\r\n    d.setSeconds(second)\r\n    return moment(d).format('hh:mm a');\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.close}\r\n      maxWidth=\"md\"\r\n      fullWidth={true}\r\n    >\r\n       <Backdrop className={classes.backdrop} open={props.loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <DialogTitle id=\"Schedule-Modal\">\r\n      <div style={{display:\"flex\",justifyContent:\"space-between\",}}>\r\n           <Typography className={classes.availableTitle}>\r\n            Available Timing - ({moment(props.date).format(\"MMM\")} -\r\n          {moment(props.date).format(\"DD\")} -\r\n          {moment(props.date).format(\"YYYY\")})\r\n          </Typography>\r\n          <Select\r\n                className={classes.notchedOutline}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                defaultValue={1}\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.filterType(e.target.value)}\r\n           >\r\n         {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n        </Select>\r\n        </div>\r\n        <br/>\r\n        <Divider/>\r\n        \r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        {props.timing && props.timing.length > 0 ? (\r\n          <Typography className={classes.available}>\r\n           \r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.available}>No Data</Typography>\r\n        )}\r\n\r\n       <Grid container spacing={1}>\r\n          <Grid item xs={7} container spacing={1}>\r\n          {props.timing &&\r\n          props.timing.length > 0 &&\r\n          props.timing.map((val) => {\r\n            return (  \r\n              <Grid item xs={6}>\r\n                <div\r\n                  className={\r\n                    classes.datecard\r\n                  }\r\n                >\r\n                  <div  style={{ position: 'absolute',\r\n                    right: '5px',\r\n                    top: '30px',}}>\r\n                      <IconButton  onClick={() => props.deleteTime(val.id)}>\r\n                         <DeleteOutline style={{color:\"red\"}}/>\r\n                      </IconButton>\r\n                  </div>\r\n                \r\n\r\n                <div style={{paddingTop:\"20px\"}}>\r\n                  \r\n                 <Typography className={classes.day}>\r\n                  {`Start Time : ${getTime(val?.startTime)}`}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                  {`End Time : ${getTime(val?.endTime)}`}\r\n                  </Typography>\r\n                  \r\n                </div>\r\n                 \r\n                </div>       \r\n              </Grid>              \r\n            );\r\n          })}\r\n          </Grid>\r\n          <Grid item xs={1} style={{display: 'flex',\r\n              justifyContent: 'center',}}>\r\n            <Divider variant=\"vertical\"/>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <>\r\n            {\" \"}\r\n            <Typography className={classes.available}>Start Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"startTime\"\r\n                placeholder=\"Select Start Time\"\r\n                inputVariant=\"outlined\"\r\n                value={props?.timeValue?.startTime ?? null}\r\n                fullWidth\r\n                onChange={(value) => props.handleTimeValue(value, \"startTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            <Typography className={classes.available}>End Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"endTime\"\r\n                placeholder=\"Select End Time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                value={props?.timeValue?.endTime ?? null}\r\n                onChange={(value) => props.handleTimeValue(value, \"endTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>{\" \"}\r\n            {/* <Typography className={classes.available}>Type :</Typography>\r\n            <Select\r\n               className={classes.inputField}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.handleTimeValue(e.target.value, \"type\")}\r\n             >\r\n            {appointmentTypes?.map((_)=>{\r\n              return(\r\n                <MenuItem value={_.id}>{_.name}</MenuItem>\r\n              )\r\n             })}\r\n             </Select> */}\r\n\r\n                     <Button\r\n                      onClick={() => props.handleSubmitTime(props.appointmentDateId,props.date,props.endDate)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                     >\r\n                      Add Time\r\n                    </Button>\r\n          </>\r\n      \r\n          </Grid>\r\n        </Grid>\r\n\r\n       \r\n        <br />\r\n        <Divider />\r\n        <br />\r\n        \r\n      </DialogContent>\r\n      <DialogActions>\r\n  \r\n          {/* <Button\r\n            onClick={() => props.handleSubmitTime(props.appointmentDateId)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit Time\r\n          </Button> */}\r\n        <Button onClick={props.close} variant=\"contained\">\r\n          {\" \"}\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => props.deleteDate(props.appointmentDateId)}\r\n        >\r\n          Delete Date\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModalShow;\r\n","import {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport uuid from \"uuid/v1\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport SheduleModal from \"./shedulemodal\";\r\nimport SheduleModalShow from \"./shedulemodalshow\";\r\nimport {\r\n  ALL_APPOINTMENTS_DATE,\r\n  APPOINTMENTS_TYPE,\r\n  ALL_APPOINTMENTS_TIMESLOT,\r\n  FILTER_APPOINTEMENTS,\r\n  CHECK_APPOINTMENT,\r\n  CHECK_TIMESLOT,\r\n} from \"../../graphql/query\";\r\nimport {\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n} from \"../../graphql/mutation\";\r\nimport {\r\n  TimePicker,\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nexport const ManageShedule = (props) => {\r\n  // States\r\n  const [open, setOpen] = React.useState(false);\r\n  const [appointmentDateId, setAppointmentDateId] = React.useState(null);\r\n  const [type, setType] = React.useState();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [modalloading, setModalLoading] = React.useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [appointmentDate, setAppointmentDate] = useState([]);\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [appointmentSlots, setAppointmentSlots] = useState([]);\r\n  const [openAppointmentTime, setOpenAppointmentTime] = useState(false);\r\n  const [showTime, setShowTime] = useState(false);\r\n  const [timeValue, setTimeValue] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n    type: 1,\r\n  });\r\n  const [filterDate, setFilterDate] = useState({\r\n    startTime: moment(new Date()).startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    endTime: moment(new Date()).endOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    date: new Date(),\r\n  });\r\n\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const useStyles = makeStyles((theme) => ({\r\n    datecard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width: \"140px\",\r\n      height: \"130px\",\r\n      margin: 5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid #3F51B5\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\",\r\n    },\r\n    calenderCard: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      marginLeft: \"14px\",\r\n    },\r\n    inputField: {\r\n      marginBottom: theme.spacing(1),\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: \"12.5px 14px\",\r\n      },\r\n    },\r\n    closedCard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width: \"140px\",\r\n      height: \"130px\",\r\n      margin: 5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid red\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n\r\n    date: {\r\n      fontSize: \"22px\",\r\n      padding: \"10px 0px\",\r\n    },\r\n    day: {\r\n      fontSize: \"14px\",\r\n    },\r\n  }));\r\n\r\n  // LifeCycles\r\n  useEffect(() => {\r\n    GetAllAppointmentTypes();\r\n    FilterDates(filterDate.startTime, filterDate.endTime);\r\n  }, []);\r\n\r\n  // Handle Funcs\r\n  const editItem = (value) => {\r\n    setDate(value);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n  const handlemodalshow = (id) => {\r\n    GetAllAppointment_TimeSlots(id, 1);\r\n  };\r\n\r\n  const handleTimeValue = (value, name) => {\r\n    setTimeValue({ ...timeValue, [name]: value });\r\n  };\r\n\r\n  // Query Func\r\n  const GetAllAppointment = async () => {\r\n    setLoading(true);\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_DATE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n        setLoading(false);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const CheckAppointment = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CHECK_APPOINTMENT,\r\n        variables: {\r\n          startDate: moment(date).format(\"YYYY-MM-DD\"),\r\n          endDate: moment(date).format(\"YYYY-MM-DD\"),\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then(async (res) => {\r\n        if (res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0) {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"warning\",\r\n            msg: \"Date already available!\",\r\n          });\r\n        } else {\r\n          await handleSave();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointment_TimeSlots = async (id, type) => {\r\n    setModalLoading(true);\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_TIMESLOT(id ? id : appointmentDateId, type).loc\r\n          .source.body,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentSlots(res.data.allAppointmentDateTimeSlots.nodes);\r\n        setOpenAppointmentTime(true);\r\n        setAppointmentDateId(id);\r\n        setModalLoading(false);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          date: date,\r\n          startDate: moment(date).format(\"YYYY-MM-DD\"),\r\n          isActive: true,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        FilterDates(filterDate.startTime, filterDate.endTime);\r\n        onClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const CheckTimeslot = async (id, date, endDate) => {\r\n    await client\r\n      .query({\r\n        query: CHECK_TIMESLOT,\r\n        variables: {\r\n          appointmentDateId: id,\r\n          appointmentTypeId: timeValue.type,\r\n          startTime: moment(timeValue.startTime).format(\"HH:mm:00\"),\r\n          endTime: moment(timeValue.endTime).format(\"HH:mm:00\"),\r\n        },\r\n        fetchPolicy: \"no-cache\",\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0) {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"warning\",\r\n            msg: \"TimeSlot already available!\",\r\n          });\r\n        } else {\r\n          handleSubmitTime(id, date, endDate);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSubmitTime = async (id, date, endDate) => {\r\n    if (timeValue.type !== \"\") {\r\n      setModalLoading(true);\r\n      await client\r\n        .mutate({\r\n          mutation: CREATE_APPOINTMENT_TIME,\r\n          variables: {\r\n            id: uuid(),\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n            startDateTime: new Date(date),\r\n            endDateTime: new Date(endDate),\r\n            appointmentTypeId: timeValue.type,\r\n            appointmentDateId: id,\r\n            startTime: moment(timeValue.startTime).format(\"HH:mm:00\"),\r\n            endTime: moment(timeValue.endTime).format(\"HH:mm:00\"),\r\n          },\r\n          fetchPolicy: \"no-cache\",\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            GetAllAppointment_TimeSlots(appointmentDateId, timeValue.type);\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            setModalLoading(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n\r\n      setShowTime(!showTime);\r\n    }\r\n  };\r\n\r\n  const deleteTime = async (id) => {\r\n    setModalLoading(true);\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId, timeValue.type);\r\n          onClose();\r\n          setModalLoading(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const deleteDate = async (id) => {\r\n    setOpenAppointmentTime(false);\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          FilterDates(filterDate.startTime, filterDate.endTime);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleDateChange = async (date) => {\r\n    var start = moment(date).startOf(\"month\").format(\"YYYY-MM-DD\");\r\n    var end = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n    setFilterDate({\r\n      ...filterDate,\r\n      date: date,\r\n      startTime: start,\r\n      endTime: end,\r\n    });\r\n    FilterDates(start, end);\r\n  };\r\n\r\n  const FilterDates = async (start, end) => {\r\n    setLoading(true);\r\n    await client\r\n      .query({\r\n        query: FILTER_APPOINTEMENTS,\r\n        variables: {\r\n          startDate: start,\r\n          endDate: end,\r\n        },\r\n        fetchPolicy: \"no-cache\",\r\n      })\r\n      .then((res) => {\r\n        setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/appointment/upload_schedule\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          FilterDates(filterDate.startTime, filterDate.endTime);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const FilterTimeSlotes = (type) => {\r\n    GetAllAppointment_TimeSlots(appointmentDateId, type);\r\n    setTimeValue({ ...timeValue, type: type });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Manage Schedule</Typography>\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Dates\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href =\r\n              \"https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_appointment_schedule.csv\";\r\n            a.setAttribute(\"download\", \"sample_appointment_schedule.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Date\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item xs={5}>\r\n          <Typography className={classes.available}>\r\n            Month and Year :\r\n          </Typography>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"MM/yyyy\"\r\n              margin=\"normal\"\r\n              views={[\"year\", \"month\"]}\r\n              value={filterDate.date}\r\n              onChange={(date) => handleDateChange(date)}\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.calenderCard}>\r\n        {appointmentDate && appointmentDate.length > 0 ? (\r\n          appointmentDate.map((val) => {\r\n            return (\r\n              <Box key={val.id}>\r\n                <div\r\n                  className={\r\n                    moment(\r\n                      moment(val.startDateTime).format(\"YYYY-MM-DD\")\r\n                    ).isSameOrAfter(\r\n                      moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      \"day\"\r\n                    )\r\n                      ? classes.datecard\r\n                      : classes.closedCard\r\n                  }\r\n                  onClick={() => {\r\n                    handlemodalshow(val.id);\r\n                  }}\r\n                >\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"MMM\")}\r\n                  </Typography>\r\n                  <Typography className={classes.date}>\r\n                    {moment(val.startDateTime).format(\"DD\")}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"YYYY\")}\r\n                  </Typography>\r\n                </div>\r\n                {appointmentDateId === val.id && openAppointmentTime && (\r\n                  <SheduleModalShow\r\n                    open={openAppointmentTime}\r\n                    date={val.startDateTime}\r\n                    endDate={val.endDateTime}\r\n                    appointmentDateId={appointmentDateId}\r\n                    timing={appointmentSlots ? appointmentSlots : []}\r\n                    close={() => setOpenAppointmentTime(false)}\r\n                    showTime={showTime}\r\n                    timeValue={timeValue}\r\n                    handleTimeValue={handleTimeValue}\r\n                    handleSubmitTime={CheckTimeslot}\r\n                    filterType={FilterTimeSlotes}\r\n                    deleteTime={deleteTime}\r\n                    deleteDate={deleteDate}\r\n                    appointmentTypes={appointmentTypes}\r\n                    loading={modalloading}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No Data</p>\r\n        )}\r\n      </div>\r\n      <SheduleModal\r\n        open={open}\r\n        type={type}\r\n        date={date}\r\n        editItem={editItem}\r\n        handleSave={CheckAppointment}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { TableContainer ,IconButton,Grid,TextField,InputAdornment, Select, MenuItem,LinearProgress,Backdrop,CircularProgress } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport moment from \"moment\";\r\nimport { SHOW_APPOINMENT_DETAILS,MUTATE_STATUS,APPOINTMENTS_TYPE } from \"../../graphql/query\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst columns = [\r\n  { id: \"user_id\", label: \"Id\" },\r\n  { id: \"name\", label: \"Name\" },\r\n  { id: \"email\", label: \"Email\" },\r\n  { id: \"mobile\", label: \"Mobile\" },\r\n  { id: \"date\", label: \"Date\" },\r\n  // { id: \"location\", label: \"Location\" },\r\n  { id: \"StartTime\", label: \"Start Time\" },\r\n  { id: \"EndTime\", label: \"End Time\" },\r\n  { id: \"Type\", label: \"Type\" },\r\n  { id: \"Status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\" },\r\n];\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor:\"white\"\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px\",\r\n  },\r\n  select:{\r\n    \"& .MuiInputBase-root\":{\r\n      height:\"85%\"\r\n    }\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nlet filterData = {};\r\n\r\nexport const Manageappoinment = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [startDate, setStartDate] = React.useState(null);\r\n  const [endDate, setEndDate] = React.useState(null);\r\n  const [appointmentFilter, setAppointmentFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = React.useState(\"\");\r\n  const [selectedType, setSelectedType] = React.useState(\"\");\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(SHOW_APPOINMENT_DETAILS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      appointment_filter: { ...appointmentFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  React.useEffect(()=>{\r\n    GetAllAppointmentTypes();\r\n  },[])\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  let rowData = data?.allAppointments?.nodes;\r\n\r\n  const handleDateChange = (date, value) => {\r\n    if (value === \"start\") {\r\n      setStartDate(date);\r\n    }\r\n    if (value === \"end\") {\r\n      if (date > startDate && startDate) {\r\n        setEndDate(date);\r\n        setAppointmentFilter({\r\n          ...appointmentFilter,\r\n          appointmentDateTimeSlotBySlotId: {\r\n            appointmentDateByAppointmentDateId: {\r\n              startDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"),lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")},\r\n              endDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"), lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")}\r\n            }\r\n          },   \r\n        });\r\n      } else alert(\"the To date must be higher than from\");\r\n    }\r\n  };\r\n\r\n  const ActionIcon = (props) => {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            window.open(`appointmentdetails/${props.id}`);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleSelect = async (value,id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: id,status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  function tConvert(time) {\r\n    // Check correct time format and split into components\r\n    time = time\r\n      .toString()\r\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \"AM\" : \"PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(\"\"); // return adjusted time or original string\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n             \r\n        <Typography className={classes.title}>Manage Appointment</Typography>\r\n        <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setAppointmentFilter({\r\n                  ...appointmentFilter,\r\n                  or: [ {mobile: { includesInsensitive: event.target.value }} , {customerName: { includesInsensitive: event.target.value }}, {email: { includesInsensitive: event.target.value } }]\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"Start Date\"\r\n          value={startDate}\r\n          onChange={(date) => handleDateChange(date, \"start\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"End Date\"\r\n          value={endDate}\r\n          onChange={(date) => handleDateChange(date, \"end\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Status\"\r\n        value={selectedStatus}\r\n        onChange={(event) => {\r\n          setSelectedStatus(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            status: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedStatus !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedStatus(\"\");\r\n                    delete appointmentFilter.status;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Type\"\r\n        value={selectedType}\r\n        onChange={(event) => {\r\n          setSelectedType(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            appointmentTypeId: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedType !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedType(\"\");\r\n                    delete appointmentFilter.appointmentTypeId;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                            {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n        <TableContainer component={Paper}>\r\n        <Table      \r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rowData &&\r\n                rowData.length > 0 ?\r\n                rowData.map((row, index) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell align=\"left\">{row?.id ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.customerName ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row?.email ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">{row?.mobile ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startDateTime\r\n                          ? moment(\r\n                              row?.appointmentDateTimeSlotBySlotId\r\n                                ?.startDateTime\r\n                            ).format(\"Do MMM YYYY\")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">\r\n                        {row?.storeLocationByLocationId?.name ?? \"\"}\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.type?.name ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.status ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <ActionIcon id={row.id}/>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              : <p style={{position:'absolute',right:\"50%\"}}>{\"No Data\"}</p>}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={data?.allAppointments?.totalCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                onPageChange={() => {}}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        </TableContainer>\r\n        \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup, props.refetch);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setMarkup({\r\n      ...markup,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"category\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.category}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose category\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"producttype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.producttype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose product type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"materiallist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.materiallist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Material type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"puritylist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.puritylist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Purity type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Min\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemin\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Selling Price Min\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Max\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemax\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={handleoptionChange(\"markuptype\")}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Markup Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Markup Value \"\r\n                onChange={handleinputChange(\"markup\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport {\r\n  DELETEMARKUPPRICE, DIAMONDMARKUP\r\n} from \"../../../graphql/query\";\r\nimport Addmarkup from \"./Addmarkup\";\r\n\r\nconst columns = [\r\n  { id: \"Component\", label: \"Components\" },\r\n  { id: \"Product Category\", label: \"product Category\" },\r\n  { id: \"Product Type\", label: \"Product Type\" },\r\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\r\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\r\n  { id: \"Markup Type\", label: \"Markup Type\" },\r\n  { id: \"Markup value\", label: \"Markup value\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editmarkup, setEditmarkup] = React.useState({});\r\n  const [goldpricelist, setGoldpricelist] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [refetch, setRefetch] = React.useState(null);\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    setIsdelete(true);\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id);\r\n\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function updatemarkup(markupcontent, refetch) {\r\n    let product_type = markupcontent.producttype\r\n      ? markupcontent.producttype\r\n      : [];\r\n    let material_list = markupcontent.materiallist\r\n      ? markupcontent.materiallist\r\n      : [];\r\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\r\n\r\n    var bodydata = {};\r\n    bodydata[\"category\"] = markupcontent.category.name;\r\n    bodydata[\"producttype\"] = product_type;\r\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\r\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\r\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\r\n    bodydata[\"material_list\"] = material_list;\r\n    bodydata[\"purity_list\"] = purity_list;\r\n    bodydata[\"markupValue\"] = markupcontent.markup;\r\n    bodydata[\"material\"] = pricecomponent;\r\n    console.log(\"XXXXXXXX\");\r\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      markupid: diamondData.id,\r\n      sellingPriceMin: diamondData.sellingPriceMin,\r\n      sellingPriceMax: diamondData.sellingPriceMax,\r\n      markupValue: diamondData.markupValue,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n\r\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value });\r\n  };\r\n  const handlecomponentChange = (type) => (event, value) => {\r\n    setPriceomponent(value);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid\r\n          container\r\n          justify=\"left\"\r\n          alignItems=\"center\"\r\n          className={classes.cardroot}\r\n          spacing={4}\r\n        >\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              defaultValue={pricecomponent}\r\n              options={[\"Diamond\", \"Gemstone\", \"Gold\", \"Making Charge\", \"All\"]}\r\n              onChange={handlecomponentChange(\"earringbacking\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Pricing Components\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  // error = {productCtx.error_message.earringbacking}\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDMARKUP}\r\n                onCompleted={(data) =>\r\n                  setPageCount(data.allPricingMarkups.totalCount)\r\n                }\r\n                variables={{ vendorCode: pricecomponent }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    setGoldpricelist(data);\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Addmarkup\r\n                            isadd={open}\r\n                            material={pricecomponent}\r\n                            refetch={refetch}\r\n                            actionSave={updatemarkup}\r\n                            category={props.categories}\r\n                            producttype={props.producttypes}\r\n                            materiallist={props.materiallist}\r\n                            puritylist={props.puritylist}\r\n                            title={props.title}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allPricingMarkups.nodes.map((row, index) => (\r\n                          <>\r\n                            <TableRow key={row.category}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.material}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.productType ? row.productType : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMin}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMax}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"center\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Autocomplete\r\n                                    id=\"free-solo-2-demo\"\r\n                                    fullWidth\r\n                                    disableClearable\r\n                                    className={classes.fixedTag}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    onChange={handleoptionChange(\r\n                                      \"sellingPriceType\"\r\n                                    )}\r\n                                    options={[\r\n                                      { label: 1, name: \"Flat\" },\r\n                                      { label: 2, name: \"Percentage\" },\r\n                                    ]}\r\n                                    renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                        <Chip\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          label={option.name}\r\n                                          {...getTagProps({ index })}\r\n                                        />\r\n                                      ))\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label=\"Price Type\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                          ...params.InputProps,\r\n                                          readOnly: true,\r\n                                          type: \"search\",\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupType === 1\r\n                                        ? \"Flat\"\r\n                                        : \"Percentage\"}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value={editmarkup.markupValue}\r\n                                    onChange={handleinputChange(\"markupValue\")}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupValue}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {btnEdit.action && btnEdit.id == row.id\r\n                                    ? editmarkup.updatedAt\r\n                                    : row.updatedAt}\r\n                                </Moment>\r\n                              </TableCell>\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <TableCell\r\n                                  style={{ width: 170 }}\r\n                                  align=\"center\"\r\n                                >\r\n                                  <Button\r\n                                    onClick={(e) => handleSave(row.id, refetch)}\r\n                                  >\r\n                                    <SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}>\r\n                                    <CancelIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              ) : (\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 170 }}\r\n                                  >\r\n                                    <Button onClick={(e) => handleEdit(row)}>\r\n                                      <EditIcon />\r\n                                    </Button>\r\n                                    <Button\r\n                                      onClick={(e) => handleDelete(row, refetch)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                          </>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import { Button, Chip, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                        <TableRow key={row.diamondClarity}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondClarity}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondColour}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.costPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.costPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.sellingPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import {\r\n  Button, Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GEMPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount(data.allGemstonePriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.gemstoneType}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.gemstoneType}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.price}</TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import { Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.material}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.material}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.purity}</TableCell>\r\n                          <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 100, 200, 500]}\r\n\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport {\r\n  VENDORLIST,\r\n  MASTERCATEGORY,\r\n  PRODUCTDIAMONDTYPES,\r\n} from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Markupprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [materiallist, setMateriallist] = React.useState([]);\r\n  const [puritylist, setPuritylist] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\r\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n        // setVendorlist({\r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <Product\r\n          categories={categorylist}\r\n          producttypes={producttypes}\r\n          materiallist={materiallist}\r\n          puritylist={puritylist}\r\n          vendor={\"Gold\"}\r\n        />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n      {/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterattribute = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function Masterattribute(taxcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/managemasterattributes\",\r\n      {},\r\n      taxcontent\r\n    );\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Material List\"}\r\n          button_title=\"Add New\"\r\n          onCreate={Masterattribute}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterattribute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Mastercategories = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    alert(JSON.stringify(taxcontent));\r\n    // let response = await sendNetworkRequest(\r\n    //   \"/managecategories\",\r\n    //   {},\r\n    //   taxcontent\r\n    // );\r\n    // getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          prefix={data.prefix}\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Mastercategories;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterroles = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\r\n  const [masterpages, setMasterpages] = React.useState([]);\r\n  const [editroleid, setEditroleid] = React.useState(\"\");\r\n  const [editpermissons, setEditpermissions] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n    setMastervalue(response.roles);\r\n    setFiltervalue(response.roles);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n  async function showpermissions(rowcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getrolepermissions\",\r\n      {},\r\n      { role_id: rowcontent.id }\r\n    );\r\n    setEditpermissions(response.permissions);\r\n    setEditroleid(rowcontent.id);\r\n    setIsshowpermissions(true);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent) {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id: editroleid,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    setIsshowpermissions(false);\r\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  function cancelpermissions(rowcontent) {\r\n    setIsshowpermissions(false);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? (\r\n          <Addpermissions\r\n            role_id={editroleid}\r\n            isopen={isshowpermissions}\r\n            permissions={editpermissons}\r\n            pages={masterpages}\r\n            onClose={cancelpermissions}\r\n            onSave={updatepermissions}\r\n          />\r\n        ) : null}\r\n        <Mastercontent\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onPermissionadd={showpermissions}\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterroles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterscreens = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x?.name?.toLowerCase()\r\n        ? x?.name?.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Master Screens\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterscreens;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ORDERS } from \"./../../services/queries\";\r\nimport { PAYMENTSTATUSMASTER } from \"./../../graphql/query\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport { gql } from \"apollo-boost\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\n\r\nlet getAddress = (data) => {\r\n  if (!data) return \"\";\r\n  return (\r\n    data?.addressline1 +\r\n    \",\" +\r\n    data?.addressline2 +\r\n    \",\" +\r\n    data?.city +\r\n    \",\" +\r\n    data?.state +\r\n    \",\" +\r\n    data?.pincode\r\n  );\r\n};\r\n\r\nlet getGiftMessage = (data) => {\r\n  if (!data) return \"\";\r\n  return data?.message + \"  from:\" + data?.giftFrom + \"  to:\" + data?.giftTo;\r\n};\r\n\r\nlet getPaymentStatus = (data) => {\r\n  if (data?.paymentMode === \"COD\") {\r\n    return data.paymentStatus;\r\n  }\r\n  if (!data?.paymentResponse) return data.paymentStatus;\r\n  let payment_response = JSON.parse(data?.paymentResponse);\r\n  return (\r\n    <div>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.APTRANSACTIONID}\r\n      </p>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.MESSAGE ||\r\n          payment_response?.TRANSACTIONPAYMENTSTATUS}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet defaultColumns = {\r\n  \"Order ID\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"id\",\r\n  },\r\n  \"Order Date\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"order_date\",\r\n  },\r\n  \"Customer Name\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"customer_name\",\r\n  },\r\n  SKUs: { is_active: false, identifier: \"SKUs\" },\r\n  Email: { is_active: true, identifier: \"email\" },\r\n  \"Phone Number\": { is_active: true, identifier: \"phone_number\" },\r\n  \"Shipping Address\": { is_active: true, identifier: \"shipping_address\" },\r\n  \"Gift Message\": { is_active: false, identifier: \"gift_message\" },\r\n  \"Order Status\": { is_active: false, identifier: \"order_status\" },\r\n  \"Payment Mode\": { is_active: true, identifier: \"payment_mode\" },\r\n  \"Payment Status\": { is_active: true, identifier: \"payment_status\" },\r\n  \"Waybill No\": { is_active: false, identifier: \"waybill\" },\r\n  Comments: { is_active: false, identifier: \"comments\" },\r\n \r\n  Actions: {\r\n    is_active: true,\r\n    is_default: true,\r\n  },\r\n};\r\n\r\nconst ActionIcon = (props) => {\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          window.open(`orderdetails/${props.id}`);\r\n        }}\r\n      >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nlet filterData = {};\r\n\r\nexport const OrderList = withRouter((props) => {\r\n  \r\n  let user_id = props.location.pathname.split(\"/\")[2];\r\n  if (user_id) {\r\n    filterData = {\r\n      userProfileId: {\r\n        equalTo: user_id,\r\n      },\r\n    };\r\n  }\r\n  const [columnName, setColumnName] = React.useState(defaultColumns);\r\n  const [orderFilter, setOrderFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [masterData, setMasterData] = React.useState({\r\n    orderMaster: [],\r\n    paymentMaster: [\r\n      { name: \"SUCCESS\" },\r\n      { name: \"FAIL\" },\r\n      { name: \"TRANSACTION CANCELLED\" },\r\n    ],\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    orderStatus: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = React.useState(null);\r\n  const [ToDate, setToDate] = React.useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateChange = (date, value) => {\r\n    let createdAt = orderFilter?.createdAt;\r\n    if (value === \"from\") {\r\n      setFromDate(date);\r\n      setOrderFilter({\r\n        ...orderFilter,\r\n        createdAt: {\r\n          ...createdAt,\r\n          greaterThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n        },\r\n      });\r\n    }\r\n    if (value === \"to\") {\r\n      if (date > fromDate) {\r\n        setToDate(date);\r\n        setOrderFilter({\r\n          ...orderFilter,\r\n          createdAt: {\r\n            ...createdAt,\r\n            lessThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n          },\r\n        });\r\n      } else alert(\"the To date must be higher thean from\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          ${PAYMENTSTATUSMASTER}\r\n        `,\r\n      })\r\n      .then(({ data: { allOrderStatusMasters, allPaymentStatusMasters } }) => {\r\n        setMasterData({\r\n          orderMaster: allOrderStatusMasters?.nodes || [],\r\n          paymentMaster: [\r\n            ...masterData.paymentMaster,\r\n            ...allPaymentStatusMasters?.nodes,\r\n          ],\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(ORDERS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      order_filter: { ...orderFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  let rowData = data?.allOrders?.nodes;\r\n  if (rowData) {\r\n    rowData = rowData.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        order_date: moment(item?.createdAt).format(\"DD MMM YYYY HH:mm:ss\"),\r\n        SKUs: item?.shoppingCartByCartId?.shoppingCartItemsByShoppingCartId?.nodes\r\n          .map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n          .join(\", \"),\r\n        customer_name:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.firstname,\r\n        email: item?.shoppingCartByCartId?.userProfileByUserprofileId?.email,\r\n        phone_number:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.contactNumber,\r\n        shipping_address: getAddress(\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n        ),\r\n        gift_message: getGiftMessage(item?.shoppingCartByCartId?.nodes?.[0]),\r\n        payment_mode: item?.paymentMode,\r\n        order_status: item?.orderStatus,\r\n        payment_status: getPaymentStatus({\r\n          paymentMode: item?.paymentMode,\r\n          paymentResponse:\r\n            item?.paymentDetailsByOrderId?.nodes?.[0]?.paymentResponse,\r\n        }),\r\n        emailMessageId: item?.emailMessageId,\r\n        smsDeliveredId: item?.smsDeliveredId?.replace(\"otp-nacjotp-\", \"\"),\r\n        waybill: item?.awbNumber,\r\n        comments: item?.comments,\r\n      };\r\n    });\r\n  }\r\n  let colSpan = Object.keys(columnName).filter(\r\n    (item) => columnName[item].is_active\r\n  ).length;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Orders</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setOrderFilter({\r\n                shoppingCartByCartId: {\r\n                  or: [\r\n                    {\r\n                      userProfileByUserprofileId: {\r\n                        email: { includesInsensitive: event.target.value },\r\n                      },\r\n                    },\r\n                    {\r\n                      cartAddressesByCartId: {\r\n                        some: {\r\n                          or: [\r\n                            {\r\n                              firstname: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                            {\r\n                              contactNumber: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.orderStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                orderStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                orderStatus: { includesInsensitive: event.target.value },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Order Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.orderStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          orderStatus: \"\",\r\n                        });\r\n                        delete orderFilter.orderStatus;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.orderMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.paymentStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                paymentStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                paymentDetailsByOrderId: {\r\n                  some: {\r\n                    paymentResponse: {\r\n                      includesInsensitive: event.target.value,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Payment Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.paymentStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          paymentStatus: \"\",\r\n                        });\r\n                        delete orderFilter.paymentDetailsByOrderId;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.paymentMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"From\"\r\n              value={fromDate}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"from\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"To\"\r\n              value={ToDate}\r\n              disableFuture={true}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"to\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={1}>\r\n          <IconButton onClick={handleClick}>\r\n            <ViewColumnIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                height:\r\n                  Object.keys(columnName).filter((item) => !item?.is_default)\r\n                    .length * 20,\r\n                width: \"50ch\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid container style={{ padding: 10 }}>\r\n              {Object.keys(columnName).map(\r\n                (item) =>\r\n                  !columnName[item]?.is_default && (\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name={item}\r\n                            color=\"primary\"\r\n                            checked={columnName[item].is_active}\r\n                            onClick={(_) => {\r\n                              columnName[item].is_active =\r\n                                !columnName[item].is_active;\r\n                              setColumnName({ ...columnName });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(columnName).map(\r\n                  (item) =>\r\n                    columnName[item].is_active && (\r\n                      <TableCell key={item} align={\"center\"}>\r\n                        {item}\r\n                      </TableCell>\r\n                    )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {rowData &&\r\n                rowData.length > 0 &&\r\n                rowData.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    {Object.keys(columnName).map(\r\n                      (column) =>\r\n                        columnName[column].is_active && (\r\n                          <TableCell key={column} align={\"center\"}>\r\n                            {column !== \"Actions\" &&\r\n                              item[columnName[column]?.identifier]}\r\n                            {column === \"Actions\" && (\r\n                              <ActionIcon id={item.id} />\r\n                            )}\r\n                          </TableCell>\r\n                        )\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              {rowData && rowData.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>No Orders found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={colSpan}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allOrders?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  onPageChange={() => {}}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n} from \"../../../../graphql/query\";\r\nimport { UPDATE_ORDER } from \"../../../../graphql/mutation\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [updateOrder, setUpdateOrder] = useState({\r\n    waybillNum: null,\r\n    paymentStatus: null,\r\n    orderStatus: null,\r\n    comments: null,\r\n  });\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n  const handleChange = (event) => {\r\n    setUpdateOrder({ ...updateOrder, [event.target.name]: event.target.value });\r\n    if (updateOrder?.comments?.length > 0) {\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n\r\n        setUpdateOrder({\r\n          waybillNum: order?.awb_number ?? null,\r\n          paymentStatus: order?.payment_status ?? null,\r\n          orderStatus: order?.order_status ?? null,\r\n          comments: order?.comments ?? null,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const getOrderCommunicationLogs = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order?.id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  React.useEffect(() => {\r\n    getmaster();\r\n    getOrderCommunicationLogs();\r\n  }, []);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Send Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (updateOrder?.comments?.length > 0) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_ORDER,\r\n          variables: {\r\n            id: order?.id,\r\n            awbNumber: updateOrder?.waybillNum ?? \"\",\r\n            comments: updateOrder?.comments ?? \"\",\r\n            orderStatus: updateOrder?.orderStatus,\r\n            paymentStatus: updateOrder?.paymentStatus,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } else {\r\n      setErrorMsg(\"Enter Comments\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order.shopping_cart.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"waybillNum\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.waybillNum}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"paymentStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.paymentStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"orderStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.orderStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"comments\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.comments}\r\n                  variant=\"outlined\"\r\n                />\r\n                <span style={{ color: \"red\" }}>{errorMsg}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Grid>\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"order\")}\r\n              >\r\n                Order Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"payment\")}\r\n              >\r\n                Payment Confirmation Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Shipped\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Delivered\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"rate\")}\r\n              >\r\n                Rate Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"4px 0px\" }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst OrderItems = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Image</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order.shopping_cart.shopping_cart_items.map(item => (\r\n                  <TableRow key={item.id}>\r\n                     <TableCell>\r\n                      {item.product_sku}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.qty}\r\n                    </TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order.shopping_cart.shopping_cart_items.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\r\n                      </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <p className={classes.final_total_text}>\r\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\r\n            </p>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { GETORDERCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    console.log(response);\r\n    setOrder(response.orders);\r\n    setProductDetails(response.product_detail);\r\n  }\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order_id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n       \r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n\r\n    fetchorderdetails(com_id);\r\n    getOrderCommunicationLogs(com_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} productDetails={productDetails} />\r\n          <OrderDetails\r\n            order={order}\r\n            productDetails={productDetails}\r\n            style={{ marginTop: 30 }}\r\n          />\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Appointment Info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={2}>\r\n           <Grid item xs={4} >\r\n             <Typography>Name :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.customerName ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Email :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.email ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Mobile :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.mobile ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Type :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 1 ? \"Alive\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 2 ? \"Lotus\" :order?.allAppointments?.nodes[0]?.appointmentTypeId === 3 ? \"Piercing\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 4 ? \"Stones\" : order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5 ? \"Enquiry\" :\"no Data\" }</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Category :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n              {order?.allAppointments?.nodes[0]?.productCategory?.length > 0  ? order?.allAppointments?.nodes[0]?.productCategory?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>              \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Metal Type :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n             {order?.allAppointments?.nodes[0]?.metalType?.length > 0 ? order?.allAppointments?.nodes[0]?.metalType?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>     \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>isOnline :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>is IT required :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>Are more Members Joining :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}> \r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? null : true}/>} label=\"No\" />\r\n             </div>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Special Requests :</Typography>\r\n             <p style={{width:\"80%\",overflowWrap:'break-word'}}>{order?.allAppointments?.nodes[0]?.specialRequests ?? 'no data'}</p>\r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,Switch, Input,MenuItem,Select\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { API_URL } from \"../../../config\";\r\nimport { MUTATE_STATUS,MUTATE_MEETING } from \"../../../graphql/query\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentExtra= (props) => {\r\n  const { order, className,id, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [selected,setSelected] = React.useState('')\r\n  const [meetingLink,setmeetingLink] = React.useState('');\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  React.useEffect(()=>{\r\n   setSelected(order?.allAppointments?.nodes[0]?.status)\r\n   setmeetingLink(order?.allAppointments?.nodes[0]?.meetingLink)\r\n  },[order])\r\n\r\n\r\n  const handleMeeting = async ()=>{\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_MEETING,\r\n        variables: { id: parseInt(id), meetingLink:meetingLink },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Meeting Link Send Successfully!\",\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  const handleSelect = async (value) => {\r\n    setSelected(value)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: parseInt(id), status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        props.refetch()\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleLinkchange=(val)=>{\r\n     setmeetingLink(val)\r\n  }\r\n\r\n  const sendEmail = () => {\r\n    if(meetingLink !== ''){\r\n      const url = API_URL + \"/trigger_mail\";\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ appointment_id: parseInt(id),\r\n        meeting_link: meetingLink }),\r\n      };\r\n      fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          handleMeeting()\r\n        })\r\n        .catch((err) => {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader/>\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={1}>\r\n           <Grid item xs={6} >\r\n             <Typography>MeetingLink :</Typography>   \r\n             <TextField fullWidth variant=\"outlined\" onChange={(event)=>handleLinkchange(event.target.value)} value={meetingLink} disabled={order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5}/>       \r\n           </Grid>\r\n           <Grid item xs={6} >\r\n             <Typography>Status :</Typography>\r\n             <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        value={selected}\r\n        onChange={(event)=>handleSelect(event.target.value)}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>      \r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>   \r\n      <CardActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={sendEmail}>Send Invite</Button>\r\n      </CardActions> \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentExtra;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n  Typography,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport AppointmentInfo from \"./components/AppointmentInfo\";\r\nimport AppointmentExtra from \"./components/AppointmentExtra\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { GETORDERCOMMUNICATIONLOGS,SHOW_ALL_PPOINMENT_DETAILS,GETAPPLICATIONCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport const AppointmentManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETAPPLICATIONCOMMUNICATIONLOGS,\r\n        variables: {\r\n          id: parseInt(order_id),\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.appointmentById?.appointmentCommunicationLogsByAppointmentId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus,refetch } = useQuery(SHOW_ALL_PPOINMENT_DETAILS, {\r\n    variables: {\r\n      id: parseInt(order)\r\n    },\r\n    notifyOnNetworkStatusChange:true,\r\n    fetchPolicy:\"network-only\"\r\n  });\r\n \r\n  useEffect(() => {\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n    getOrderCommunicationLogs(com_id);\r\n    setOrder(com_id)\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  const handleStatusChange=()=>{\r\n    refetch()\r\n  }\r\n\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Appointment Management Details\">\r\n\r\n       <Backdrop className={classes.backdrop} open={loading || NetworkStatus.refetch === networkStatus}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n       <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Appointments\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Appointment #{order}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className={classes.container} container spacing={3}>\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                   <AppointmentInfo order={data}/>\r\n            </Grid>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                 <AppointmentExtra order={data} id={order} refetch={refetch}/>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default AppointmentManagementDetails;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\",\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [status, setStatus] = useState({});\r\n\r\n  function handleAdd(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.update(e);\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.resumeupdate(e);\r\n  }\r\n\r\n  function handledownload(e) {\r\n    props.downloadlog();\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: e.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatus({ ...status, [e.id]: response.message });\r\n  }\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card style={{ marginTop: 16 }}>\r\n        <CardContent className={classes.content}>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Components</TableCell>\r\n\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n\r\n                  <TableCell align=\"center\">Status</TableCell>\r\n                  <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                  <TableCell align=\"center\">Log</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.pricingrows.map((order) => (\r\n                  <TableRow>\r\n                    <TableCell>{order.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={(e) => handleAdd(order)}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                      >\r\n                        ₹ Run\r\n                      </Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"center\">\r\n                      {status[order.id] ? status[order.id] : \"\"}\r\n\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => handlestatus(order)}\r\n                        color=\"primary\"\r\n                      >\r\n                        <RefreshIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleupdate(order)}\r\n                        size=\"small\"\r\n                      >\r\n                        Re Run\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handledownload()}\r\n                        size=\"small\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}></CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = ((length, prefix,couponcount) => {\r\n  var count = 1;\r\n  var codes = []\r\n  if(couponcount)\r\n  {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var charactersLength = characters.length;\r\n  generatecode(0)\r\n  function generatecode(generatedcount)\r\n  {\r\n  for ( var i = 0; i < codelength; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  result = prefix.toUpperCase() + result.toUpperCase();\r\n  codes.push(result)\r\n  result = \"\"\r\n  generatedcount = generatedcount + 1\r\n  if(count > generatedcount)\r\n  {\r\n    generatecode(generatedcount);\r\n  }\r\n  }\r\n  return codes;\r\n});","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from \"../../../../utils/commonmethod\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  Chip,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst AboutVoucher = (props) => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\r\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\r\n  const [producttypelist, setProducttypelist] = useState(\r\n    props.masterData.product_type\r\n  );\r\n  const [productids, setProductids] = useState(props.productids);\r\n\r\n  const [updatestatus, setUpdatestatus] = useState(\"\");\r\n\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n\r\n  const handleproducttypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, producttypes: vendorsarray });\r\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\r\n  };\r\n  const handlecategorychange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, categories: vendorsarray });\r\n\r\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\r\n  };\r\n  const hangeoptionchange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.shortCode);\r\n    });\r\n    setFormData({ ...formData, vendorid: vendorsarray });\r\n\r\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\r\n  };\r\n\r\n  const handleClick = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/updatepricelist\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n    } else {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n  const handleuploadstatus = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/getpriceupdatestatus\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n      setUpdatestatus(response.message);\r\n    } else {\r\n    }\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setVouchercode(e.target.value.toUpperCase());\r\n  };\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n  const generateCoupon = (event) => {\r\n    // alert(JSON.stringify(voucherCtx))\r\n    setVouchercode(makeid(10));\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist || []}\r\n              getOptionLabel={(option) => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange(\"vendorcode\")}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Selct Vendor\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlecategorychange(\"category\")}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Category\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handleproducttypechange(\"product_type\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              disabled={props.isdisabled}\r\n              className={classes.fixedTag}\r\n              value={props.productids}\r\n              options={productids}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    props.productids.length > 0\r\n                      ? \"Products (\" + props.productids.length + \") \"\r\n                      : \"Products\"\r\n                  }\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleClick}\r\n        color=\"primary\">\r\n        Update Price\r\n      </Button>\r\n      </Grid>\r\n      \r\n      <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Update Status\r\n      </Button>\r\n      <Typography variant=\"subtitle1\">\r\n                {updatestatus}\r\n      </Typography>\r\n\r\n      </Grid> */}\r\n          {/* <Grid item xs={6} sm={3} >\r\n      <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Price Update\r\n      </Button>\r\n       \r\n      </Grid> */}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction FullLoader(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <div className={classes.loader}>\r\n\r\n      <CircularProgress />\r\n\r\n      </div>\r\n\r\n      </DialogContent>\r\n      \r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default FullLoader;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { Button, Link } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"../../components/Page\";\r\nimport { Results, AboutVoucher } from \"./components\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\nconst rows = [\r\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n  const [products, setProducts] = useState([]);\r\n  const [, setCategories] = useState([]);\r\n  const [, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component) {\r\n    if (products.length) {\r\n      setOpen(true);\r\n      var bodydata = {};\r\n      bodydata = {\r\n        component: component.label,\r\n        req_product_id: products,\r\n      };\r\n      setStartrun(true);\r\n      let response = await sendNetworkRequest(\r\n        \"/price_run_new\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      if (response.statuscode == 200) {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: response.message || \"Started Successfully!\",\r\n        });\r\n      } else {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Something went wrong, Please try later!\",\r\n        });\r\n      }\r\n      setOpen(false);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Apply filter to load products!\",\r\n      });\r\n    }\r\n  }\r\n  async function rerun(component) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      component: component.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getincompletepricerun\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let history_id = response.id;\r\n    let update_products = response.products;\r\n    if (response.products && response.products.length > 0) {\r\n      setOpen(true);\r\n\r\n      var bodydata = {};\r\n      bodydata = {\r\n        pricingcomponent: component.label,\r\n        req_product_id: update_products,\r\n        history_id: history_id,\r\n      };\r\n      setStartrun(true);\r\n      let response1 = await sendNetworkRequest(\r\n        \"/productpriceupdate\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      setOpen(false);\r\n    } else {\r\n      alert(\" Doesn't have any incomplete products\");\r\n    }\r\n  }\r\n\r\n  async function filterapllied(filterdata, categories, producttypes) {\r\n    var bodydata = {};\r\n\r\n    bodydata = {\r\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\r\n      product_category: categories && categories.length > 0 ? categories : \"\",\r\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/getdistinctproduct\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setCategories(response.category);\r\n    setVendors(response.vendorlist);\r\n  }\r\n  async function downloadlog() {\r\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <FullLoader title={\"Running Price Update\"} isopen={open}></FullLoader>\r\n        <AboutVoucher\r\n          isdisabled={startrun}\r\n          className={classes.aboutvoucher}\r\n          apply={filterapllied}\r\n          productids={products.length > 0 ? products : []}\r\n          categorylist={masters.category}\r\n          producttypelist={masters.product_type}\r\n          vendorlist={masters.vendorcode}\r\n          masterData={masters}\r\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\r\n        />\r\n        <Results\r\n          products={products}\r\n          pricingrows={rows}\r\n          downloadlog={downloadlog}\r\n          update={updateprices}\r\n          resumeupdate={rerun}\r\n        />\r\n        <div\r\n          style={{\r\n            padding: \"12px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Link href=\"/price-logs\">\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Price History Logs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Page>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { productCategory } from '../../services/mapper';\r\nimport Component from './PriceupdateContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Priceupdate = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} data={data} />\r\n    // </VoucherProvider>\r\n\r\n)});\r\nexport default Priceupdate;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"sku_id\", label: \"tag id\" },\r\n  { id: \"product_id\", label: \"product id\" },\r\n  { id: \"product_name\", label: \"product name\" },\r\n  { id: \"product_type\", label: \"product type\" },\r\n  { id: \"vendor_code\", label: \"vendor code\" },\r\n  { id: \"product_category\", label: \"product category\" },\r\n  { id: \"isactive\", label: \"active\" },\r\n  { id: \"createdAt\", label: \"Created on\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\r\n  }\r\n  useEffect(() => {\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\r\n  }, []);\r\n  useEffect(() => {\r\n    getproductlist(\r\n      props.filterparams.searchtext,\r\n      props.filterparams.categoryname,\r\n      props.filterparams.product_type,\r\n      \"\",\r\n      \"\",\r\n      order,\r\n      orderBy\r\n    );\r\n  }, [props.filterparams]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\r\n  }\r\n  async function showproductdetails(prod_id) {\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\r\n    console.log(response);\r\n    //setProductlists(response.products.rows)\r\n    window.open(response.url, \"_blank\");\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype) {\r\n    let products = allproductlists.filter((l) => {\r\n      return (\r\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\r\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\r\n      );\r\n    });\r\n    setProductlists(products);\r\n  }\r\n  async function getproductlist(\r\n    searchtext,\r\n    productcategory,\r\n    producttype,\r\n    pagesize,\r\n    offsetvalue,\r\n    sort,\r\n    orderby\r\n  ) {\r\n    let bodydata = {\r\n      size: pagesize ? pagesize : rowsPerPage,\r\n      offset: offsetValue,\r\n      searchtext: searchtext,\r\n      productcategory: productcategory,\r\n      producttype: producttype,\r\n      order: sort ? sort : order,\r\n      orderby: orderby ? orderby : orderBy,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\r\n\r\n    console.log(response);\r\n    setProductlists(response.products.rows);\r\n    setPageCount(response.products.count);\r\n  }\r\n  function applyfilter(searchtext, categoryname, typename) {\r\n    getproductlist(searchtext, categoryname, typename);\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n          />\r\n          <TableBody>\r\n            {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                  \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n            {stableSort(productlists, getComparator(order, orderBy)).map(\r\n              (row, index) => (\r\n                <TableRow key={row.product_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div style={{display:\"flex\",alignItems:\"center\"}}>\r\n                      {row?.trans_sku_lists?.[0].sku_id}\r\n                      <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                        <VisibityIcon />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.product_id}</TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => showproductdetails(row)}\r\n                  >\r\n                    {/* <Link variant=\"body2\">  */}\r\n                    {row.product_name}\r\n\r\n                    {/* </Link>   */}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      label={row.isactive ? \"\" : \"\"}\r\n                      control={\r\n                        <Switch checked={row.isactive} value=\"checkedA\" />\r\n                      }\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.createdAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )}\r\n            {/* </> */}\r\n            {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Dialog,\r\n  IconButton,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TextField,\r\n  LinearProgress,\r\n  Box,\r\n  CircularProgress,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Backdrop,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { isEmpty } from \"validate.js\";\r\nimport axios from \"axios\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    width: \"90%\",\r\n    margin: theme.spacing(5),\r\n  },\r\n  textarea: {\r\n    resize: \"both\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  errorTable: {\r\n    margin: 10,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  customWidth: {\r\n    maxWidth: 420,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ChooseWareHouse = (props) => {\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n  return (\r\n    <Autocomplete\r\n      id={\"warehouse-id\"}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={data?.allWarehouses?.nodes ?? []}\r\n      value={props.warehouse || null}\r\n      onChange={(event, newValue) => {\r\n        props.setWarehouse(newValue);\r\n      }}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Warehouse\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProductSync = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  var [data, setData] = React.useState({\r\n    action_type: \"price_sync\",\r\n    sync_url: \"\",\r\n    new_tagno: [],\r\n  });\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\r\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\r\n    status: false,\r\n    errors: {},\r\n  });\r\n  const [backDrop, setBackDrop] = React.useState(false);\r\n  var handleChange = (event) => {\r\n    var { name, value } = event.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  var handleAddChip = (chip) => {\r\n    var _ = data;\r\n    chip.split(\",\").forEach((item) => {\r\n      _.new_tagno.push(item);\r\n      setData({ ..._ });\r\n      client\r\n        .query({ query: VERIFYTAGNO, variables: { tagno: item } })\r\n        .then(({ data }) => {\r\n          if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\r\n            setErrorTagNo([...errorTagNo, item]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  var handleDeleteChip = (chip, index) => {\r\n    var _ = data;\r\n    _.new_tagno.splice(index, 1);\r\n    setData({ ..._ });\r\n  };\r\n\r\n  var { open, handleClose } = props;\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"sync_data\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setData({\r\n          action_type: \"price_sync\",\r\n          sync_url: \"\",\r\n          new_tagno: [],\r\n        });\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleRun = () => {\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Warehouse is mandatory!\",\r\n      });\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    var Product_lists = data.Product_lists;\r\n    delete data.Product_lists;\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\r\n      \"/product_sync\",\r\n      {},\r\n      {\r\n        ...data,\r\n        warehouse: warehouse?.id,\r\n      }\r\n    )\r\n      .then((res) => {\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"success\",\r\n          msg: res.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured while processing!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const validatePreSync = () => {\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\r\n      .then((response) => {\r\n        let errorStatus = true;\r\n        data.new_tagno.forEach((tagno) => {\r\n          if (response[tagno] && !isEmpty(response[tagno])) {\r\n            errorStatus = false;\r\n          }\r\n        });\r\n        setBackDrop(false);\r\n        setValidatedTagNo({\r\n          status: errorStatus,\r\n          errors: !errorStatus ? response : {},\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n\r\n    axios\r\n      .post(API_URL + \"/file_upload_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n            Product Sync\r\n          </Typography>\r\n          {data.action_type !== \"price_sync\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={validatePreSync}\r\n              disabled\r\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\r\n            >\r\n              {\"Validate Product Sync\"}\r\n            </Button>\r\n          )}\r\n          <Button\r\n            autoFocus\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            onClick={handleRun}\r\n            startIcon={<SyncIcon />}\r\n            // disabled={\r\n            //   data.action_type !== \"price_sync\" && !validatedTagNo?.status\r\n            // }\r\n          >\r\n            {data.action_type === \"price_sync\"\r\n              ? \"Run Price Sync\"\r\n              : \"Run Product Sync\"}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        className={classes.content}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\" fullWidth required>\r\n            <Typography variant=\"h4\">Choose action type</Typography>\r\n            <RadioGroup\r\n              aria-label=\"action-type\"\r\n              name=\"action_type\"\r\n              value={data.action_type}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value={\"price_sync\"}\r\n                control={<Radio />}\r\n                label={\"Price Sync\"}\r\n              />\r\n              <FormControlLabel\r\n                value={\"new_uploads\"}\r\n                control={<Radio />}\r\n                label={\"Product Sync\"}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ padding: \"9px\" }}>\r\n          <TextField\r\n            value={data.sync_url}\r\n            onChange={handleChange}\r\n            rows={15}\r\n            fullWidth\r\n            label={\"Sync Data URL\"}\r\n            name=\"sync_url\"\r\n            variant=\"outlined\"\r\n            required\r\n            inputProps={{ className: classes.textarea }}\r\n          />\r\n        </Grid>\r\n        {data.action_type === \"new_uploads\" && (\r\n          <>\r\n            <Grid item xs={12}>\r\n              <ChooseWareHouse\r\n                warehouse={warehouse}\r\n                setWarehouse={setWarehouse}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ChipInput\r\n                value={data.new_tagno}\r\n                onAdd={handleAddChip}\r\n                onDelete={handleDeleteChip}\r\n                fullWidth\r\n                newChipKeyCodes={[13, 32]}\r\n                newChipKeys={[\",\"]}\r\n                variant=\"outlined\"\r\n                label={\"TAG Number\"}\r\n                error={errorTagNo.length > 0}\r\n                helperText={\r\n                  errorTagNo.length > 0\r\n                    ? `${errorTagNo.join(\r\n                        \",\"\r\n                      )} already exists syncing again could cause loss of data. Please proceed with caution and validate the same in product edit!`\r\n                    : ``\r\n                }\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {!isEmpty(validatedTagNo?.errors) && (\r\n          <Grid item xs={12} className={classes.errorTable}>\r\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\r\n              {\r\n                \"Below masters are missing respectively, Please add them before syncing products\"\r\n              }\r\n            </Typography>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Tag No.</TableCell>\r\n                  <TableCell align=\"center\">Master Type</TableCell>\r\n                  <TableCell align=\"center\">Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.new_tagno.map(\r\n                  (element, index) =>\r\n                    !isEmpty(validatedTagNo.errors[element]) && (\r\n                      <React.Fragment key={index}>\r\n                        {console.log(\r\n                          Object.keys(validatedTagNo.errors[element]).length\r\n                        )}\r\n                        <TableRow>\r\n                          <TableCell\r\n                            rowSpan={\r\n                              Object.keys(validatedTagNo.errors[element]).length\r\n                            }\r\n                            align=\"center\"\r\n                          >\r\n                            {element}\r\n                          </TableCell>\r\n                          {Object.keys(validatedTagNo.errors[element]).map(\r\n                            (item, i) =>\r\n                              i == 0 && (\r\n                                <React.Fragment key={i}>\r\n                                  <TableCell align=\"center\">{item}</TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {validatedTagNo.errors[element][item]}\r\n                                  </TableCell>\r\n                                </React.Fragment>\r\n                              )\r\n                          )}\r\n                        </TableRow>\r\n                        {Object.keys(validatedTagNo.errors[element]).map(\r\n                          (item, i) =>\r\n                            i > 0 && (\r\n                              <TableRow key={i}>\r\n                                <TableCell align=\"center\">{item}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  {validatedTagNo.errors[element][item]}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                        )}\r\n                      </React.Fragment>\r\n                    )\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        )}\r\n        {progress > 0 && (\r\n          <Grid item xs={12}>\r\n            <LinearProgressWithLabel value={progress} />\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h5\"\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              borderBottom: \"1px solid #000\",\r\n              lineHeight: \"0.1em\",\r\n              margin: \"10px 0 20px\",\r\n            }}\r\n          >\r\n            <span style={{ background: \"#fff\", padding: \"0 10px\" }}>OR</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <div className={classes.root}>\r\n            <input\r\n              className={classes.input}\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              id=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                const files = event.target.files;\r\n                if (files) {\r\n                  handleUpload(files[0]);\r\n                }\r\n              }}\r\n            />\r\n            <label htmlFor=\"file\">\r\n              <Tooltip\r\n                title={\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"normal\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                  >\r\n                    1.Please make sure data is in sample file format.\r\n                    <br />\r\n                    2.materials,collections,occasions,themes,styles,stone_color,stone_count,hashtags\r\n                    should be comma seperated and already existing in respective\r\n                    masters.\r\n                    <br />\r\n                    3.Diamonds and Gemstones to be added in separate sheets, if\r\n                    multiple entries add each row with same tag no.\r\n                  </div>\r\n                }\r\n                classes={{ tooltip: classes.customWidth }}\r\n                arrow\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload Excel file\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </div>\r\n          <IconButton\r\n            onClick={() => {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `sample_upload.xlsx`;\r\n              link.href =\r\n                \"https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_upload.xlsx\";\r\n              link.click();\r\n            }}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Backdrop className={classes.backdrop} open={backDrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProductSync;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ProductFilter } from \"../../components\";\r\nimport ProductSync from \"./ProductSync\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\">\r\n              <Button variant=\"contained\" color=\"primary\" disabled>\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\r\n              Product Sync\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\r\n        <Product filterparams={filterparams} />\r\n        <ProductSync open={open} handleClose={handleClose} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { ProductContext } from \"../../context\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport \"./Productupload.css\";\r\nimport Select from \"react-select\";\r\nimport \"./floating_dropdown.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\r\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  dropdownlayout: {\r\n    \"& .menu\": {\r\n      position: \"Relative !important\",\r\n    },\r\n  },\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  fieldGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  dateField: {\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddressForm(props) {\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [initailRingSize, updateRingSize] = useState([]);\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  React.useEffect(async () => {\r\n    fetch(GRAPHQL_DEV_CLIENT, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\r\n  }, []);\r\n\r\n  React.useEffect(() => {}, [productCtx]);\r\n  // const handleChange = selectedOption => {\r\n\r\n  // };\r\n  const handlesizeChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\r\n  };\r\n  const handlevendorChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\r\n  };\r\n\r\n  const changeproducttype = (type) => (event, newvalue) => {\r\n    setProductCtx({ ...productCtx, product_type: newvalue });\r\n  };\r\n  const handlechange = (type) => (selectedOption) => {\r\n    if (type === \"product_type\") {\r\n      if (selectedOption) {\r\n        var size = \"\";\r\n        var minvalue = 0;\r\n        var maxvalue = 0;\r\n        var selected_sizes = [];\r\n        var default_size = 0;\r\n        if (selectedOption.shortCode === \"K\") {\r\n          selected_sizes.push({\r\n            value: \"XS\",\r\n            label: \"XS\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"S\",\r\n            label: \"S\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"M\",\r\n            label: \"M\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"L\",\r\n            label: \"L\",\r\n          });\r\n        } else {\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Male\"\r\n          // ) {\r\n          //   minvalue = 13;\r\n          //   maxvalue = 25;\r\n          //   default_size = 15;\r\n          // }\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Female\"\r\n          // ) {\r\n          //   minvalue = 8;\r\n          //   maxvalue = 23;\r\n          //   default_size = 12;\r\n          // }\r\n          // for (var i = minvalue; i < maxvalue; i++) {\r\n          //   selected_sizes.push({\r\n          //     value: i,\r\n          //     label: \"\" + i,\r\n          //   });\r\n          // }\r\n        }\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: selectedOption.shortCode,\r\n          product_type: selectedOption,\r\n          size,\r\n          default_size,\r\n          selected_sizes,\r\n        });\r\n      } else {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: \"\",\r\n          product_type: \"\",\r\n          size,\r\n          selected_sizes: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: selectedOption });\r\n    }\r\n  };\r\n  const handleTextChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"vendorcode\") {\r\n      setProductCtx({\r\n        ...productCtx,\r\n        [type]: value,\r\n        vendorleadtime: value.vendorDelivaryDays,\r\n      });\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: value });\r\n    }\r\n  };\r\n\r\n  const switchisorderable = (event) => {\r\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\r\n  };\r\n\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n\r\n  const handleGenderChange = (type) => (event, value) => {\r\n    var minvalue = 0;\r\n    var maxvalue = 0;\r\n    var selected_sizes = [];\r\n    var sizes = [];\r\n    var default_size = 0;\r\n    // if (productCtx.product_type.shortCode === \"K\") {\r\n    //   default_size = \"XS\";\r\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    // } else {\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n\r\n    // for (var i = minvalue; i < maxvalue; i++) {\r\n    // selected_sizes.push(\"\" + i);\r\n    // sizes.push(\"\" + i);\r\n    // }\r\n\r\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\r\n     \r\n      // updateRingSize(\r\n      //   initailRingSize.sort(\r\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\r\n      //   )\r\n      // );\r\n    \r\n\r\n    initailRingSize.forEach((e) => {\r\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\r\n        selected_sizes.push(\"\" + e.sizeValue);\r\n        sizes.push(\"\" + e.sizeValue);\r\n      }\r\n    });\r\n    // }\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n      sizes,\r\n      selected_sizes,\r\n      default_size,\r\n    });\r\n  };\r\n\r\n  const handleMaterialChange = (type) => (event, value) => {\r\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\r\n    if (value) {\r\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\r\n        if (steps.indexOf(\"Step3\") === -1) {\r\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n        }\r\n      }\r\n    }\r\n    setProductCtx({ ...productCtx, [type]: value, steps });\r\n  };\r\n\r\n  const handleInputChange = (type) => (e) => {\r\n    var size = productCtx.size;\r\n    var materials = productCtx.materials;\r\n    var selected_sizes = productCtx.selected_sizes;\r\n\r\n    if (type === \"selectedgender\") {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      selected_sizes = [];\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n\r\n      // for (var i = minvalue; i < maxvalue; i++) {\r\n      //   selected_sizes.push({\r\n      //     value: i,\r\n      //     label: \"\" + i,\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    if (type === \"product_categoy\") {\r\n      if (e.target.value === \"Platinum Jewellery\") {\r\n        materials.push(\"Platinum Jewellery\");\r\n        var index = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (index >= 0) {\r\n          materials.splice(index, 1);\r\n        }\r\n      } else if (e.target.value === \"Silver Jewellery\") {\r\n        materials.push(\"Silver Jewellery\");\r\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\r\n        if (index1 >= 0) {\r\n          materials.splice(index1, 1);\r\n        }\r\n      } else {\r\n        var indexval = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n        indexval = materials.indexOf(\"Platinum Jewellery\");\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      size,\r\n      [type]: e,\r\n      materials,\r\n      selected_sizes,\r\n    });\r\n  };\r\n\r\n  const materialChange = (type) => (selectedOption) => {\r\n    //   let material = { ...productCtx.material, [type]: selectedOption }\r\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\r\n    //   if(material.material)\r\n    //   {\r\n    //   material.material.forEach(element => {\r\n    let material_names = [];\r\n    if (selectedOption) {\r\n      selectedOption.forEach((element) => {\r\n        material_names.push(element.name);\r\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\r\n          if (steps.indexOf(\"Step3\") === -1) {\r\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    //   });\r\n    // }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: selectedOption,\r\n      steps,\r\n      material_names,\r\n    });\r\n  };\r\n  const keyPress = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <FullLoader /> */}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n            <Card {...rest} className={clsx(classes.root, className)}>\r\n              <CardHeader title=\"Product Information 1\" />\r\n              <Divider />\r\n              <CardContent className={classes.cardcontent}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={12} spacing={1}>\r\n                    <Input\r\n                      className={classes.helperinput}\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={productCtx.productname}\r\n                      id=\"productname\"\r\n                      error={productCtx.error_message.productname}\r\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                      name=\"productname\"\r\n                      label=\"Product Name\"\r\n                      onChange={keyPress(\"productname\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\r\n                    <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange(\"product_categoy\")}\r\n                      options={productCtx.masterData.category.map(\r\n                        (option) => option.label\r\n                      )}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Category\"\r\n                          margin=\"dense\"\r\n                          error={productCtx.error_message.product_categoy}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Autocomplete\r\n                      id=\"product_type\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={(option) => option.label}\r\n                      defaultValue={productCtx.product_type}\r\n                      options={productCtx.masterData.product_type}\r\n                      onChange={handleoptionChange(\"product_type\")}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Type\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          error={productCtx.error_message.product_type}\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Product Information 2\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      {productCtx.product_type ? (\r\n                        <>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Autocomplete\r\n                              id=\"free-solo-2-demo\"\r\n                              multiple\r\n                              className={classes.fixedTag}\r\n                              defaultValue={productCtx.material_names}\r\n                              options={productCtx.masterData.material.map(\r\n                                (option) => option.label\r\n                              )}\r\n                              onChange={handleMaterialChange(\"material_names\")}\r\n                              renderTags={(value, getTagProps) =>\r\n                                value.map((option, index) => (\r\n                                  <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={option}\r\n                                    {...getTagProps({ index })}\r\n                                  />\r\n                                ))\r\n                              }\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Select Product Materials\"\r\n                                  margin=\"dense\"\r\n                                  variant=\"outlined\"\r\n                                  error={\r\n                                    productCtx.error_message.material_names\r\n                                  }\r\n                                  fullWidth\r\n                                  InputProps={{\r\n                                    ...params.InputProps,\r\n                                    type: \"search\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      ) : null}\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.selectedgender}\r\n                          options={productCtx.masterData.gender.map(\r\n                            (option) => option.label\r\n                          )}\r\n                          onChange={handleGenderChange(\"selectedgender\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Gender\"\r\n                              margin=\"dense\"\r\n                              error={productCtx.error_message.selectedgender}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalpurity}\r\n                          options={productCtx.masterData.metalpurity}\r\n                          onChange={handleoptionChange(\"metalpurity\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Purity\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={productCtx.error_message.metalpurity}\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalcolour}\r\n                          options={productCtx.masterData.metalcolour}\r\n                          onChange={handleoptionChange(\"metalcolour\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Colour\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.metalcolour}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Vendor Information\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.vendorcode}\r\n                          getOptionLabel={(option) => option.label}\r\n                          options={productCtx.masterData.vendorcode}\r\n                          onChange={handleoptionChange(\"vendorcode\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Vendor Code\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.vendorcode}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Product Code\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          value={productCtx.productvendorcode}\r\n                          error={productCtx.error_message.productvendorcode}\r\n                          id=\"productvendorcode\"\r\n                          name=\"productvendorcode\"\r\n                          onChange={handleTextChange(\"productvendorcode\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Lead Time\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          error={productCtx.error_message.vendorleadtime}\r\n                          value={productCtx.vendorleadtime}\r\n                          InputLabelProps={{\r\n                            shrink: productCtx.vendorleadtime,\r\n                          }}\r\n                          id=\"vendorleadtime\"\r\n                          name=\"vendorleadtime\"\r\n                          onChange={handleTextChange(\"vendorleadtime\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">\r\n                            IsReorderable\r\n                          </FormLabel>\r\n                          <RadioGroup\r\n                            aria-label=\"position\"\r\n                            name=\"position\"\r\n                            value={productCtx.isreorderable}\r\n                            onChange={switchisorderable}\r\n                            row\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Yes\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"Yes\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"No\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"No\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>{\" \"}\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={12}>\r\n                {productCtx.product_type ? (\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader\r\n                      title=\"Default SKU For Display\r\n  \"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_colour}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_colour\"\r\n                            )}\r\n                            options={productCtx.metalcolour.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Colour\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={\r\n                                  productCtx.error_message.default_metal_colour\r\n                                }\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_purity}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_purity\"\r\n                            )}\r\n                            options={productCtx.metalpurity.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Purity\"\r\n                                margin=\"dense\"\r\n                                error={\r\n                                  productCtx.error_message.default_metal_purity\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              (productCtx.product_type.shortCode === \"K\" ||\r\n                productCtx.product_type.shortCode === \"R\" ||\r\n                productCtx.product_type.shortCode === \"BA\") &&\r\n              productCtx.sizes.length > 0 ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Size Information\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            multiple\r\n                            freeSolo\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.selected_sizes}\r\n                            options={productCtx.sizes}\r\n                            onChange={handleoptionChange(\"selected_sizes\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Ring Sizes\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.selected_sizes}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_type\"\r\n                            className={classes.fixedTag}\r\n                            freeSolo\r\n                            defaultValue={productCtx.default_size}\r\n                            options={productCtx.selected_sizes}\r\n                            onChange={handleoptionChange(\"default_size\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Select Default Size\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_size}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              productCtx.product_type.alias === \"Earrings\" ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Type of Fit\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.earringbacking}\r\n                            options={productCtx.masterData.earringbacking.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            onChange={handleoptionChange(\"earringbacking\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Earring Backing\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.earringbacking}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}></Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\nCardContent} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Select from 'react-select';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { ProductContext } from '../../context';\r\nimport Box from '@material-ui/core/Box';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\n\r\nimport \"./Productupload.css\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const materialChange = type => e => {\r\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\r\n    setProductCtx({ ...productCtx, selected_metal_colour })\r\n    }\r\n  const purityChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]:selectedOption })\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n  \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n<Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={6}>\r\n      <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>\r\n      <Grid item container xs={12} sm={12}>\r\n      <Grid item xs={6} sm={3}>\r\n\r\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                  <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange('product_code')}\r\n                      name=\"size\"\r\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\r\n                      \r\n                      />\r\n                      </Grid>\r\n     </Grid>\r\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\r\n      <>\r\n     <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Height\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_height')}\r\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\r\n          \r\n          />\r\n     </Grid> \r\n\r\n    <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Width\"\r\n          name=\"size\"\r\n          onChange = {handleInputChange('metal_width')}\r\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\r\n\r\n          autoComplete=\"size\"\r\n          \r\n          />\r\n    </Grid>\r\n    </>\r\n     }\r\n      \r\n   \r\n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Length\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_length')}\r\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\r\n\r\n          />\r\n    </Grid> : null }\r\n  \r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Enter weights for different Purity\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container spacing={1}>\r\n\r\n    <Grid item xs={12}>\r\n\r\n    </Grid>\r\n    {productCtx.metalpurity.map(row => (\r\n  \r\n  <Grid item container xs={12} spacing={2} >\r\n    \r\n    <Grid item xs={6} >\r\n\r\n      <Input\r\n    variant=\"outlined\"\r\n    disabled\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Purity\"\r\n    name=\"size\"\r\n    autoComplete=\"size\"\r\n    value={row.name}\r\n    />\r\n</Grid>\r\n    <Grid item xs={6} >\r\n\r\n<Input\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Weight\"\r\n    name=\"size\"\r\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\r\n    autoComplete=\"size\"\r\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\r\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\r\n    />\r\n</Grid>\r\n    </Grid> ))}\r\n\r\n      </Grid>\r\n      </CardContent>\r\n</Card>\r\n</Grid>\r\n<Grid item xs={12} sm={6}>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={6} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={6}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.prod_styles}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.occassions}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.collections}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n              </Grid>\r\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\r\n              <>\r\n               <Grid item xs={12} sm={6} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"No of Stones\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Stone Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    </> : null }\r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n\r\n</Grid>\r\n</Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\nimport React from 'react';\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n// Register the plugins\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'contain'\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Review() {\r\n  let count = 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images, setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = []\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach(element => {\r\n      if (element.name === productCtx.default_metal_colour) {\r\n        product_images[element.name] = []\r\n        if (metalcolour.length > 0) {\r\n          metalcolour.unshift(element);\r\n        } else {\r\n          metalcolour.push(element)\r\n        }\r\n\r\n      } else {\r\n        metalcolour.push(element)\r\n        product_images[element.name] = []\r\n      }\r\n    })\r\n    setMetalcolour(metalcolour)\r\n\r\n  }, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n\r\n    //alert(JSON.stringify(bodaydata))\r\n\r\n    let prodimages = productCtx.product_images;\r\n    if (prodimages) {\r\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n      let imagecolourobj = productCtx.product_images[imagecolor];\r\n      var imagecount = 1;\r\n      if (imagecolourobj) {\r\n        imagecount = imagecolourobj.length + 1;\r\n      }\r\n\r\n      let imagename = (prodid + \"-\" + (imagecount) + imagecolor.charAt(0));\r\n      let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\r\n      var returnData = responsedata.data.returnData;\r\n      var signedRequest = returnData.signedRequest;\r\n      var url = returnData.url;\r\n      console.log(\"responseurl\" + url);\r\n      var filepathname = returnData.filepath\r\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n      var options = {\r\n        headers: {\r\n          'Content-Type': bodaydata.fileExtension,\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      };\r\n\r\n      if (imagecolourobj) {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\r\n          \"position\": (imagecolourobj.length + 1),\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        if (uploadtype === 'edit') {\r\n          imagecolourobj[imageposition] = imageobj;\r\n\r\n        } else {\r\n          imagecolourobj.push(imageobj)\r\n\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n\r\n      } else {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\r\n          \"position\": imageposition,\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        imagecolourobj = [];\r\n        imagecolourobj.push(imageobj)\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      // setFiles([])\r\n    }\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n\r\n\r\n\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor) {\r\n\r\n\r\n    let prodimages = productCtx.product_images;\r\n\r\n    if (prodimages) {\r\n      let imagecolourobj = prodimages[imagecolor];\r\n\r\n      if (imagecolourobj) {\r\n        if (imagecolourobj.length > imageposition) {\r\n          let removedfile = imagecolourobj[imageposition]\r\n\r\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" }\r\n\r\n        }\r\n\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      //alert(JSON.stringify(productCtx.product_images))\r\n    }\r\n  }\r\n\r\n  const handleInit = () => {\r\n    // alert(\"initialized\")\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={2}>\r\n\r\n        <Grid item direction=\"row\" xs={12}>\r\n          <Grid container justify=\"left\" spacing={2}>\r\n\r\n            {metalcolour === undefined ? null : metalcolour.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.name}\r\n                  </Typography>\r\n                </Grid>\r\n                {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\r\n                      console.log(file);\r\n                      console.log('filepond property');\r\n\r\n                    })}\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={fileItem => {\r\n                      // Set currently active file objectsfiles to this.state\r\n\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {\r\n\r\n                    }}\r\n                    fileRenameFunction={\r\n                      (file) => new Promise(resolve => {\r\n                        var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n                        let imagecolourobj = productCtx.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\r\n                        resolve(imagename)\r\n\r\n                      })\r\n                    }\r\n                  >\r\n                  </FilePond>\r\n                  {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n                </Grid>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport Step4 from \"./Step4\";\r\nimport Step5 from \"./Step5\";\r\nimport Step6 from \"./Step6\";\r\nimport Step7 from \"./Step7\";\r\nimport Step8 from \"./Step8\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n      return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;\r\n    case \"Step6\":\r\n      return <Step6 />;\r\n\r\n    case \"Step7\":\r\n      return <Step7 />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var error_content = {};\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if (activeStep === 0) {\r\n      if (!productCtx.product_type) {\r\n        isvalid = false;\r\n        error_content[\"product_type\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productname) {\r\n        isvalid = false;\r\n        error_content[\"productname\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.product_categoy) {\r\n        isvalid = false;\r\n        error_content[\"product_categoy\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.metalcolour) {\r\n        isvalid = false;\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.material_names) {\r\n        isvalid = false;\r\n        error_content[\"material_names\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalpurity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.vendorcode) {\r\n        isvalid = false;\r\n        error_content[\"vendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.vendorleadtime) {\r\n        isvalid = false;\r\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.default_metal_colour) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.default_metal_purity) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productvendorcode) {\r\n        isvalid = false;\r\n        error_content[\"productvendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        !productCtx.earringbacking &&\r\n        productCtx.product_type.alias === \"Earrings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"earringbacking\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.selectedgender) {\r\n        isvalid = false;\r\n        error_content[\"selectedgender\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        (!productCtx.selected_sizes ||\r\n          productCtx.selected_sizes.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"selected_sizes\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (\r\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"default_size\"] = \"Error messsage\";\r\n      }\r\n      // isvalid = true;\r\n    }\r\n\r\n    if (activeStep === 1) {\r\n      productCtx.metalpurity.forEach((element) => {\r\n        const keyvalue = element.name + \"_metal_weight\";\r\n\r\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\r\n          isvalid = false;\r\n\r\n          error_content[keyvalue] = \"Error messsage\";\r\n        }\r\n      });\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\") {\r\n        if (!productCtx.metal_height) {\r\n          isvalid = false;\r\n          error_content[\"metal_height\"] = \"Error messsage\";\r\n        }\r\n        if (!productCtx.metal_width) {\r\n          isvalid = false;\r\n          error_content[\"metal_width\"] = \"Error messsage\";\r\n        }\r\n      }\r\n\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"prod_styles\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"occassions\"] = \"Error messsage\";\r\n      }\r\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n      // {\r\n      //   isvalid = false\r\n      //   error_content['collections'] = \"Error messsage\"\r\n      // }\r\n\r\n      //  isvalid = true;\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, error_message: error_content });\r\n    if (activeStep === productCtx.steps.length - 1) {\r\n      console.info(\"HANDLE\", sendNetworkRequest);\r\n      const productseries =\r\n        productCtx.masterData.productseries[0].productSeries;\r\n\r\n      delete productCtx[\"masterData\"];\r\n\r\n      var formdata = productCtx;\r\n      formdata[\"productseries\"] = productseries;\r\n\r\n      setLoading(true);\r\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      await sleep(500);\r\n      window.location.replace(\"/productlist\");\r\n    } else {\r\n      if (isvalid) {\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    }\r\n\r\n    //else\r\n    //  {\r\n    //  }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  async function sleep(millis) {\r\n    return new Promise((resolve) => setTimeout(resolve, millis));\r\n  }\r\n  console.log(productCtx, \"Component Samir\");\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {productCtx.steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Paper>\r\n\r\n      <React.Fragment>\r\n        {activeStep === productCtx.steps.length ? (\r\n          <React.Fragment>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Product Added Successfully\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"></Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {getStepContent(productCtx.steps[activeStep])}\r\n            <div className={classes.buttons}>\r\n              {activeStep !== 0 && (\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === productCtx.steps.length - 1\r\n                  ? \"Product Upload\"\r\n                  : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from \"./Component\";\r\nimport { ProductProvider } from \"../../context\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const Productupload = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n});\r\nexport default Productupload;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  \r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CategoryComponents } from \"./../../components\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nconst tabs = [\r\n  { value: \"Category\", label: \"Category\" },\r\n  { value: \"Producttype\", label: \"Product type\" },\r\n  { value: \"Material\", label: \"Material\" },\r\n  { value: \"Collections\", label: \"Collections\" },\r\n  { value: \"Occations\", label: \"Occations\" },\r\n  { value: \"Styles\", label: \"Styles\" },\r\n  { value: \"Themes\", label: \"Themes\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200],\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst VoucherComponent = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\r\n    React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const myFunction = () => {\r\n    props.onAdded(attrobj);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"materials\") {\r\n      let elements_arr = [];\r\n      value.forEach((element) => {\r\n        elements_arr.push(element.name);\r\n      });\r\n      if (elements_arr.indexOf(\"Gold\") > -1) {\r\n        setIsgold(true);\r\n      } else {\r\n        setIsgold(false);\r\n      }\r\n\r\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\r\n        setIsdiamond(true);\r\n      } else {\r\n        setIsdiamond(false);\r\n      }\r\n    }\r\n    setAttrobj({\r\n      ...attrobj,\r\n      [type]: value,\r\n    });\r\n\r\n    // props.onAdded(type,value)\r\n  };\r\n  const handleTabsChange = (event, value) => {\r\n    if (value == \"Material\") {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if (tabnames.indexOf(\"Purity\") === -1) {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n      }\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <div className={classes.content}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.category}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              getOptionLabel={(option) => option.name}\r\n              options={voucherCtx.voucherMaster.product_categories}\r\n              onChange={handleoptionChange(\"category\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Category\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.product_types}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.product_types}\r\n              onChange={handleoptionChange(\"product_types\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.product_types}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Types\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.materials}\r\n              onChange={handleoptionChange(\"materials\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.materials}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Materials\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {isgold ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                options={voucherCtx.voucherMaster.purities}\r\n                onChange={handleoptionChange(\"purities\")}\r\n                getOptionLabel={(option) => option.name}\r\n                value={attrobj.purities}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          {isdiamond ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.diamondtype}\r\n                options={voucherCtx.voucherMaster.diamondtypes}\r\n                onChange={handleoptionChange(\"diamondtype\")}\r\n                value={attrobj.diamondtype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.diamondtype}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.collections}\r\n              onChange={handleoptionChange(\"collections\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.collections}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Collections\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.occations}\r\n              onChange={handleoptionChange(\"occations\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.occations}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Occassions\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.styles}\r\n              onChange={handleoptionChange(\"styles\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.styles}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Styles\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.themes}\r\n              onChange={handleoptionChange(\"themes\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.themes}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Themes\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n            <Button\r\n              onClick={() => props.onAdded(attrobj)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Check Applicable Products\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired,\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Viewsku from \"../Viewsku\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Products = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = (event) => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map((order) => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel() {\r\n    setOpen(false);\r\n  }\r\n  function handleOpen(prodskus) {\r\n    setOpen(true);\r\n    setSelectskus(prodskus);\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      {open ? (\r\n        <Viewsku\r\n          isadd={open}\r\n          products={selectskus}\r\n          actionclose={handlecancel}\r\n        />\r\n      ) : null}\r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader title={props.title} />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product ID</TableCell>\r\n\r\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.products\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((order) => (\r\n                    <TableRow\r\n                    // key={order.id}\r\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      <TableCell>{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { VoucherContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Chip, IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport uuid from \"uuid/v1\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { palette } from \"../../theme\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Header,\r\n  Results,\r\n  Products,\r\n  AboutVoucher,\r\n  VoucherComponent,\r\n} from \"./components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  productcontent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor: theme.palette.white,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"Created Successfully\",\r\n    severity: \"Success\",\r\n  });\r\n\r\n  const { voucherCtx, setVoucherCtx, materialMaster } =\r\n    React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  async function getdiscountvalue(discount_id) {\r\n    let bodydata = {\r\n      discountid: discount_id,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getdiscount\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach((comp) => {\r\n      comparr.push({\r\n        name: comp,\r\n      });\r\n    });\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids);\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname: response.discunt.discount_name,\r\n      discountvalue: response.discunt.discount_value,\r\n      discounttype: response.discunt.discount_type,\r\n      discounttitle: response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes),\r\n    });\r\n    setIsloaded(true);\r\n  }\r\n  async function creatediscount(ispricerun) {\r\n    let skuarray = [];\r\n    while (skus.length > 0) {\r\n      let sku_content = skus.splice(0, 25000);\r\n      skuarray.push(sku_content);\r\n    }\r\n    if (errorskus.length > 0) {\r\n      alert(\"Some skus are overlapping\");\r\n    } else {\r\n      let discount_count = 0;\r\n      setIsloading(true);\r\n      updatediscount(discount_count);\r\n      async function updatediscount() {\r\n        let bodydata = {\r\n          discountvalue: parseFloat(attributeobj.discountvalue),\r\n          discounttype: attributeobj.discounttype,\r\n          componenets: attributeobj.componenets,\r\n          discountname: attributeobj.discountname,\r\n          discounttitle: attributeobj.discounttitle,\r\n          product_attributes: productattr,\r\n          product_attributes_text: productattrtext,\r\n          skus: skuarray[discount_count],\r\n        };\r\n        console.log(JSON.stringify(productattr));\r\n        let response = await sendNetworkRequest(\r\n          \"/creatediscount\",\r\n          {},\r\n          bodydata,\r\n          false\r\n        );\r\n\r\n        discount_count = discount_count + 1;\r\n        if (skuarray.length > discount_count) {\r\n          setLoadingtitle(skus.length + \" Left\");\r\n          updatediscount(discount_count);\r\n        } else {\r\n          setIsloading(false);\r\n          setOpen(true);\r\n          setIsshowpriceupdate(false);\r\n\r\n          window.location = \"/salediscountlist\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //setProducts([])\r\n    let errorindex = errorskus.indexOf(chipToDelete);\r\n    if (errorindex > -1) {\r\n      errorskus.splice(errorindex, 1);\r\n      var erroritems = [];\r\n      errorskus.forEach((itemname) => {\r\n        erroritems.push(itemname);\r\n      });\r\n      setErrorskus(erroritems);\r\n    }\r\n    let index = products.indexOf(chipToDelete);\r\n    products.splice(index, 1);\r\n    var items = [];\r\n    products.forEach((itemname) => {\r\n      items.push(itemname);\r\n    });\r\n    setProducts(items);\r\n\r\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  async function filterapllied(value) {\r\n    var bodydata = {};\r\n\r\n    let product_ids = [];\r\n    let response = await sendNetworkRequest(\r\n      \"/getaliasproduct\",\r\n      {},\r\n      value,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setSkus(response.skus);\r\n    setErrorskus(response.eror_skus);\r\n    setIsloading(false);\r\n    setTitlecontent(response.title);\r\n  }\r\n  async function updateprices() {\r\n    alert(\"i am here\");\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id: products,\r\n    };\r\n    setIsshowpriceupdate(true);\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/productpriceupdate\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: \"updateskuprice\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatusmessage(response.message);\r\n  }\r\n  function attributeadded(value) {\r\n    let componentsstring = {};\r\n    let attrs = [];\r\n    let display_arr = [];\r\n    let keys = Object.keys(value);\r\n    keys.forEach((key) => {\r\n      let values = [];\r\n      let alias_arr = [];\r\n      value[key].forEach((valueobj) => {\r\n        values.push(valueobj.name);\r\n        alias_arr.push(valueobj.alias);\r\n        attrs.push(valueobj.name);\r\n      });\r\n      componentsstring[key] = {\r\n        values: values,\r\n        alias: alias_arr,\r\n      };\r\n      let displaytext = key + \" : \" + attrs.join(\" , \");\r\n      display_arr.push(displaytext);\r\n    });\r\n    setProductattr(componentsstring);\r\n    setProductattrtext(display_arr.join(\" | \"));\r\n    //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true);\r\n    //setAttributeobj(value)\r\n    filterapllied(value);\r\n  }\r\n  function valuechange(type, value) {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {};\r\n    fetchOrders();\r\n    if (\r\n      props.location.pathname &&\r\n      props.location.pathname.split(\"/\").length > 2\r\n    ) {\r\n      let discount_id = props.location.pathname.split(\"/\")[2];\r\n      setDiscount_id(discount_id);\r\n      getdiscountvalue(discount_id);\r\n    } else {\r\n      setIsloaded(true);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FullLoader title={loadingtitle} isopen={isloading} />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Page className={classes.root} title=\"Orders Management List\">\r\n          {!discount_id ? (\r\n            <>\r\n              <VoucherComponent\r\n                onAdded={attributeadded}\r\n                className={classes.aboutvoucher}\r\n              />\r\n              {products.length > 0 ? (\r\n                <Products title={titlecontent} products={errorskus} />\r\n              ) : null}\r\n              {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n              {isloaded || !discount_id ? (\r\n                <AboutVoucher\r\n                  discountcontent={attributeobj}\r\n                  className={classes.aboutvoucher}\r\n                  onAdded={valuechange}\r\n                  categories={[\"Fixed Amount\", \"percentage\"]}\r\n                />\r\n              ) : null}\r\n\r\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                spacing={2}\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ marginTop: 16, textAlign: \"center\" }}\r\n                  spacing={2}\r\n                >\r\n                  {!isshowpriceupdate ? (\r\n                    <>\r\n                      <Button\r\n                        onClick={() => creatediscount(false)}\r\n                        color=\"primary\"\r\n                        style={{ margin: 16 }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n\r\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n                    </>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Name\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discountname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Title\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttitle}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttype == 2\r\n                      ? attributeobj.discountvalue + \"%\"\r\n                      : attributeobj.discountvalue}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Pricing Compponent\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.displaycomp}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {attributeobj.allkeys ? (\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  {attributeobj.allkeys.map((row, index) => (\r\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                      <Typography variant=\"body2\" component=\"body2\">\r\n                        {row}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h5\">\r\n                        {attributeobj.attributes[row].values}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                    <Typography variant=\"body2\" component=\"body2\">\r\n                      Total Sku\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {attributeobj.skucount}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n                {!isshowpriceupdate ? (\r\n                  <>\r\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    {statusmessage}\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={(e) => handlestatus()}\r\n                      color=\"primary\"\r\n                    >\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Page>\r\n      </MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from \"../../context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\nimport { materialMaster } from \"../../services/mapper\";\r\nimport Component from \"./Salediscountcontent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport const Salediscount = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(materialMaster.query);\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <VoucherProvider\r\n      value={{\r\n        data,\r\n        mapper: materialMaster.mapper,\r\n        mappertype: \"voucherMaster\",\r\n      }}\r\n    >\r\n      <Component {...props} />\r\n    </VoucherProvider>\r\n  );\r\n});\r\nexport default Salediscount;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":2  ,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipment Settings\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport data from \"./data.json\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          User and Roles Management\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {data.options.map((menu, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {menu.title}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Userconfiguration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGOLDPRICE, GOLDPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmetalprice from './Addmetalprice';\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [goldpricelist, setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEGOLDPRICE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      material: metalcontent.metal.name,\r\n      purity: metalcontent.purity.shortCode,\r\n      costprice: metalcontent.costPrice,\r\n      sellingprice: metalcontent.sellingPrice,\r\n      pricetype: metalcontent.pricetype.label,\r\n      vendor: props.vendor,\r\n      isadd: true\r\n    }\r\n    console.log(\"--------\")\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setOpen(false)\r\n    refetch()\r\n    //  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n\r\n  function handleEdit(diamondData) {\r\n    let pricetypes = [{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]\r\n    let selectedsellingPriceType = {}\r\n    pricetypes.forEach(element => {\r\n\r\n      if (element.label == diamondData.sellingPriceType) {\r\n        selectedsellingPriceType = element\r\n      }\r\n    })\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      selectedsellingPriceType: selectedsellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Gold Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={GOLDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allGoldPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      setGoldpricelist(data)\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          data={deleteid}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Addmetalprice isadd={open} refetch={refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.purity}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"center\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  value={editdiamond.selectedsellingPriceType}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEDIAMONDCHARGE, DIAMONDPRICELIST, PRODUCTDIAMONDTYPES, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Adddiamondprice from './Adddiamondprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEDIAMONDCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent, refetch) {\r\n    alert(\"i am here\")\r\n    let bodydata = {}\r\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\r\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\r\n    bodydata['costprice'] = metalcontent.costPrice\r\n    bodydata['pricetype'] = metalcontent.pricetype.label\r\n    bodydata['sellingprice'] = metalcontent.sellingprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['isadd'] = true\r\n\r\n\r\n\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n    setOpen(false)\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        // alert(JSON.stringify(fatchvalue))\r\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Diamond Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          data={deleteid}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.diamondClarity}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondClarity}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondColour}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(gemstonedata)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setGemstonedata({ ...gemstonedata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setGemstonedata({\r\n    ...gemstonedata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('gemstone')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.gems}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Gemstone\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {props.viewtype == 1 ? \r\n          <>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              onChange={handleinputChange('weightend')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          </> : null }\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              onChange={handleinputChange('costprice')}\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGEMCHARGE, GEMSTONEMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addgemstoneprice from './Addgemstoneprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'From weight', label: 'From weight' },\r\n  { id: 'To Weight', label: 'To Weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\nconst stonecountcolumns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editgem, setEditgem] = React.useState({})\r\n  const [gemlist, setgemlist] = React.useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(diamondcontent) {\r\n    if (deleteid.length > 0) {\r\n      let variables = {\r\n        elementId: deleteid[0]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    if (deleteid.length > 1) {\r\n      let variables = {\r\n        elementId: deleteid[1]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    setgemlist([])\r\n\r\n    setDeleteid([])\r\n    getgemlist()\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n\r\n    let deleteids = [];\r\n    deleteids.push(diamondData.costprice.id)\r\n    deleteids.push(diamondData.sellprice.id)\r\n\r\n    setDeleteid(deleteids)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata) {\r\n    var bodydata = {}\r\n    bodydata['gemstone_type'] = gemstonedata.name\r\n    bodydata['weight_start'] = gemstonedata.weightstart\r\n    bodydata['weight_end'] = gemstonedata.weightend\r\n    bodydata['cost_price'] = gemstonedata.costprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['selling_price_type'] = gemstonedata.pricetype.label\r\n    bodydata['selling_price'] = gemstonedata.sellingprice\r\n    bodydata['isadd'] = true\r\n\r\n    // alert(JSON.stringify(gemstonedata))\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\r\n    setOpen(false)\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditgem({\r\n      ...editgem,\r\n      cost_price_id: diamondData.costprice.id,\r\n      weight_start: diamondData.costprice.weight_start,\r\n      weight_end: diamondData.costprice.weight_end,\r\n      cost_price: diamondData.costprice.price,\r\n      selling_price: diamondData.sellprice.price,\r\n      selling_price_id: diamondData.sellprice.id,\r\n\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.costprice.id, action: true })\r\n\r\n  }\r\n\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, editgem)\r\n\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  async function getgemlist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n      ratetype: props.viewtype\r\n    }\r\n    let response = await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\r\n    // setProductlists(response.products)\r\n    setgemlist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    getgemlist()\r\n  }, [vendorid])\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleinputChange = type => e => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        onSuccess={handledelete}\r\n        data={deleteid}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              {props.viewtype == 1 ?\r\n                <TableRow>\r\n\r\n                  {columns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow> : <TableRow>\r\n\r\n                  {stonecountcolumns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>}\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n              {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\r\n                <TableRow key={row.gemstoneType}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.costprice.gemstone_type}\r\n\r\n                  </TableCell>\r\n                  {props.viewtype == 1 ?\r\n                    <>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_start}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_end}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                    </> : null}\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.cost_price}\r\n                        onChange={handleinputChange('cost_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.selling_price}\r\n                        onChange={handleinputChange('selling_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.sellprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        fullWidth\r\n                        disableClearable\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={option => option.name}\r\n                        options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Price Type\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                          />\r\n                        )}\r\n                      /> : <Typography className={classes.heading}>\r\n                          {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.updatedAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                  {\r\n                    btnEdit.action && btnEdit.id == row.costprice.id ?\r\n                      <TableCell style={{ width: 170 }} align=\"center\">\r\n                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                        </Button>\r\n                      </TableCell> :\r\n                      <TableCell align=\"center\" style={{ width: 170 }}>\r\n                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                  }\r\n                </TableRow>\r\n              ))}\r\n              {/* </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      } \r\n                  }}*/}\r\n              {/* </Query> */}\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Grid, Input } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEMAKINGCHARGE, MAKINGCHARGEPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmakingchargeprice from './Addmakingchargeprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'From Weight', label: 'From Weight' },\r\n  { id: 'To weight', label: 'To weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n\r\n  { id: 'updated On', label: 'updated On' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [editmc, setEditmc] = React.useState({})\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [mchargelist, setMchargelist] = React.useState([])\r\n  const [deleteid, setDeleteid] = React.useState('')\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: '',\r\n    add: false\r\n  })\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEMAKINGCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        //refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false, add: true })\r\n\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata = {}\r\n    bodydata['material'] = makingcontent.metal.name;\r\n    bodydata['weight_start'] = makingcontent.weightstart;\r\n    bodydata['weight_end'] = makingcontent.weightend;\r\n    bodydata['price_type'] = makingcontent.pricetype.label;\r\n    bodydata['vendor_code'] = props.vendor;\r\n    bodydata['purity'] = makingcontent.purity.shortCode;\r\n    bodydata['cost_price'] = makingcontent.costPrice;\r\n    bodydata['selling_price'] = makingcontent.sellingprice;\r\n    bodydata['isadd'] = true\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    setOpen(false)\r\n    getmclist()\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmc({\r\n      ...editmc,\r\n      price: diamondData.price,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function getmclist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor\r\n    }\r\n\r\n    let response = await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\r\n    setMchargelist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getmclist()\r\n  }, [vendorid])\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, editmc)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    getmclist()\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange = type => e => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\" : column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={MAKINGCHARGEPRICELIST}\r\n                onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightStart}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightEnd}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editmc.price}\r\n                                  onChange={handleinputChange('selling_price')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.price}\r\n                                  </Typography>}\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"left\">\r\n                                  <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"left\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster} isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Vendorprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n\r\n        setVendorlist({ \r\n          ...vendorlist,\r\n          vendors : fatchvalue.data.allMasterVendors.nodes\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n         <Grid container  spacing={1}>  \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Choose Vendor\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid>\r\n         \r\n         {vendorcode ? <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={vendorcode} />\r\n          </Grid>\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds vendor={vendorcode}/>\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \r\n    </Grid>\r\n\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n    </Grid>\r\n          </> : null }\r\n    </Grid>\r\n\r\n    \r\n  )\r\n});\r\n\r\nexport default withRouter(Vendorprice);","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst WarehouseModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Warehouse-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Warehouse-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Name\"}\r\n              name=\"name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.name}\r\n              onChange={props.editItem}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Shipping In Days\"}\r\n              name=\"shippingInDays\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.shippingInDays}\r\n              onChange={props.editItem}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WarehouseModal;\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport {\r\n  CREATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n} from \"../../graphql/mutation\";\r\nimport { WAREHOUSELIST } from \"../../graphql/query\";\r\nimport WarehouseModal from \"./WarehouseModal\";\r\n\r\nexport const Warehouse = (props) => {\r\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\r\n\r\n  const editItem = (event) => {\r\n    var { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ name: \"\", shippingInDays: \"\" });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_WAREHOUSE,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_WAREHOUSE,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setOpen(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_WAREHOUSE,\r\n          variables: {\r\n            id: item.id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (id, isActive) => {\r\n    client\r\n      .mutate({\r\n        mutation: UPDATE_WAREHOUSE,\r\n        variables: {\r\n          id,\r\n          item: { isActive: !isActive, updatedAt: new Date() },\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Warehouse</Typography>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Name</TableCell>\r\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Status</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allWarehouses?.nodes.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No Warehouses found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allWarehouses?.nodes.length > 0 &&\r\n                data?.allWarehouses?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.shippingInDays}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <Switch\r\n                        checked={item.isActive}\r\n                        onChange={() => handleSwitch(item.id, item.isActive)}\r\n                        name=\"active\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <WarehouseModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Slide,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { CARTBYID } from \"../../graphql/query\";\r\nimport Image from \"material-ui-image\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport SmsIcon from \"@material-ui/icons/Sms\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport moment from \"moment\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  fieldset: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    gridArea: \"1 / 1\",\r\n    width: \"inherit\",\r\n  },\r\n  legend: {\r\n    font: \"15pt/0\",\r\n    //margin: \"auto\" /* to center */,\r\n    padding: \"0 4px\",\r\n  },\r\n  textfield: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inline: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"inline\",\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport default function CartDetails(props) {\r\n  const classes = useStyles();\r\n  let { open, handleClose } = props;\r\n  const [state, setState] = React.useState({});\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Sent Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.id) {\r\n      client\r\n        .query({\r\n          query: CARTBYID,\r\n          variables: {\r\n            id: props.id,\r\n          },\r\n          fetchPolicy: \"network-only\",\r\n        })\r\n        .then((res) => {\r\n          setState(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, [props.id]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      maxWidth={\"lg\"}\r\n      fullWidth\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Cart Details</Typography>\r\n        {handleClose && (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {(state?.loading == undefined || state?.loading) && (\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {state?.data && (\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={6}>\r\n              {/* <Typography variant=\"h6\">User Details</Typography> */}\r\n              <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>User Details</legend>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  defaultValue={state?.data?.cart?.user?.firstName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  defaultValue={state?.data?.cart?.user?.lastName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"User Name\"\r\n                  defaultValue={state?.data?.cart?.user?.username}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  defaultValue={state?.data?.cart?.user?.email}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Mobile No.\"\r\n                  defaultValue={state?.data?.cart?.user?.mobile}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.isemailverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"Email Verified\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.ismobileverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\" Mobile Verified\"\r\n                  />\r\n                </FormGroup>\r\n                {state?.data?.cart?.address?.nodes.length > 0 ? (\r\n                  <div style={{ padding: 5 }}>\r\n                    {state?.data?.cart?.address?.nodes.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment key={item?.id}>\r\n                          <Typography variant=\"h6\">\r\n                            Cart Address #{index + 1} :{\" \"}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {`${item?.salutation ?? ``}${item?.firstname} ${\r\n                              item?.lastname\r\n                            }`.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline1.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline2.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.city.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.state.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.country.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.pincode.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Contact No.{\" \"}\r\n                            {`${item?.countryCode} - ${item?.contactNumber}`}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </fieldset>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Status</legend>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Status :{\" \"}\r\n                        <Chip\r\n                          className={classes.chip}\r\n                          label={state?.data?.cart?.status.toUpperCase()}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Gross Price : &#8377;\r\n                        {`${state?.data?.cart?.grossAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Discounted Price : &#8377;\r\n                        {`${state?.data?.cart?.discountedPrice ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Tax Amount : &#8377;\r\n                        {`${state?.data?.cart?.taxAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Items</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.cart_items?.nodes.map((item) => {\r\n                      var skuDetails = item?.transSkuListByProductSku;\r\n                      var product =\r\n                        item?.transSkuListByProductSku?.productListByProductId;\r\n                      var image = product?.productImagesByProductId?.nodes[0];\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.productSku}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemAvatar\r\n                              style={{\r\n                                width: \"30%\",\r\n                                height: \"30%\",\r\n                              }}\r\n                            >\r\n                              <Image src={`${image?.imageUrl}`} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography variant=\"h5\">\r\n                                  {\r\n                                    item?.transSkuListByProductSku\r\n                                      ?.productListByProductId?.productName\r\n                                  }\r\n                                </Typography>\r\n                              }\r\n                              secondary={\r\n                                <Grid container>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      SKU : {item?.productSku}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Quantity : {item?.qty}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Price : &#8377;\r\n                                      {skuDetails?.markupPrice}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                      style={{}}\r\n                                    >\r\n                                      Tax : &#8377;\r\n                                      {skuDetails?.markupPriceTax}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Follow ups</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.follow_ups?.nodes.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.senderResponseId}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemIcon>\r\n                              {item.type == \"email\" && <MailIcon />}\r\n                              {item.type == \"sms\" && <SmsIcon />}\r\n                              {item.type == \"phone\" && <CallIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={item?.senderResponseId}\r\n                              secondary={moment(item?.createdAt).format(\r\n                                \"DD/MMM/YYYY HH:mm A\"\r\n                              )}\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            sendEmail(props?.id, \"abandoned_cart\");\r\n          }}\r\n        >\r\n          Send Follow up Email\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  LinearProgress,\r\n  TableFooter,\r\n  TablePagination,\r\n  Chip,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { ABANDONEDCART } from \"../../graphql/query\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CartDetails from \"./cart_details\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nlet Headers = {\r\n  \"Cart ID\": {},\r\n  \"User Details\": {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_DESC\",\r\n    ],\r\n  },\r\n  \"Total Products in cart\": {\r\n    asc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_ASC\"],\r\n    desc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_DESC\"],\r\n  },\r\n  Contact: {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_DESC\",\r\n    ],\r\n  },\r\n  Status: {},\r\n  \"Created On\": {\r\n    asc: [\"CREATED_AT_ASC\"],\r\n    desc: [\"CREATED_AT_DESC\"],\r\n  },\r\n  \"Last Updated On\": {\r\n    asc: [\"UPDATED_AT_ASC\"],\r\n    desc: [\"UPDATED_AT_DESC\"],\r\n  },\r\n  Actions: {},\r\n};\r\n\r\nlet filterVariables = {\r\n  default: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n    },\r\n  },\r\n  withoutContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: true,\r\n      },\r\n    },\r\n  },\r\n  withContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: false,\r\n      },\r\n    },\r\n  },\r\n  emptyCart: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      shoppingCartItemsByShoppingCartId: {\r\n        every: {\r\n          productSku: {\r\n            isNull: true,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport const AbandonedCart = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"default\");\r\n  const [sort, setSort] = React.useState({\r\n    by: \"Created On\",\r\n    direction: \"desc\",\r\n  });\r\n  const client = useApolloClient();\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    ABANDONEDCART,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        orderBy: Headers[sort.by][sort.direction] ?? Headers[\"Created On\"].desc,\r\n        condition: { status: \"pending\" },\r\n        filter: filterVariables[filter]?.filter ?? null,\r\n      },\r\n    }\r\n  );\r\n  const handleClickFilter = (value) => {\r\n    setFilter(value);\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: [\"CREATED_AT_ASC\"],\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[value]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const applySort = (column) => {\r\n    var { by, direction } = sort;\r\n    if (by == column) {\r\n      if (direction && direction == \"asc\") {\r\n        direction = \"desc\";\r\n      } else {\r\n        direction = \"asc\";\r\n      }\r\n    } else {\r\n      direction = \"asc\";\r\n    }\r\n    setSort({ by: column, direction });\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: Headers[by][direction] ?? Headers[\"Created On\"].desc,\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[filter]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen();\r\n  };\r\n\r\n  const downloadAbandonedCart = () => {\r\n    client\r\n      .query({\r\n        query: ABANDONEDCART,\r\n        variables: {\r\n          orderBy: [\"CREATED_AT_ASC\"],\r\n          condition: { status: \"pending\" },\r\n          filter: { ...filterVariables[\"withContact\"]?.filter },\r\n        },\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n      .then(\r\n        ({\r\n          data: {\r\n            allShoppingCarts: { nodes: cartDetails },\r\n          },\r\n        }) => {\r\n          exportFromJSON({\r\n            data: cartDetails.map((item) => {\r\n              return {\r\n                cart_id: item.id,\r\n                created_at: moment(item.createdAt).format(\"DD/MM/YYYY hh:mm a\"),\r\n                gross_amount: item.grossAmount,\r\n                discount_amount: item.discountAmount,\r\n                first_name: item.user?.firstName,\r\n                last_name: item.user?.lastName,\r\n                email: item.user?.email,\r\n                mobile_no: item.user?.mobile,\r\n                sku_ids: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.skuId)\r\n                  ?.join(\",\"),\r\n                generated_skus: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n                  ?.join(\",\"),\r\n                product_names: item?.cart_items?.nodes\r\n                  ?.map(\r\n                    (i) =>\r\n                      i?.transSkuListByProductSku?.productListByProductId\r\n                        ?.productName\r\n                  )\r\n                  ?.join(\",\"),\r\n              };\r\n            }),\r\n            fileName: `abandoned_cart_${moment().format(\"YYYY-MM-DD\")}`,\r\n            exportType: \"xls\",\r\n          });\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Abandoned Cart</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withoutContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withoutContact\")}\r\n          >\r\n            Without Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withContact\")}\r\n          >\r\n            With Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"emptyCart\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"emptyCart\")}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"default\")}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"download abandoned cart\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={filter != \"withContact\"}\r\n            onClick={() => downloadAbandonedCart()}\r\n          >\r\n            <CloudDownloadOutlinedIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(Headers).map((item) => {\r\n                  return (\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      key={item}\r\n                      sortDirection={\r\n                        sort?.by === item ? sort?.direction : false\r\n                      }\r\n                    >\r\n                      {Headers[item]?.asc ? (\r\n                        <TableSortLabel\r\n                          active={sort?.by === item}\r\n                          direction={\r\n                            sort?.by === item ? sort?.direction : \"asc\"\r\n                          }\r\n                          onClick={() => applySort(item)}\r\n                        >\r\n                          {item}\r\n                          {sort?.by === item ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {sort?.direction === \"desc\"\r\n                                ? \"sorted descending\"\r\n                                : \"sorted ascending\"}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                    padding=\"none\"\r\n                  >\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allShoppingCarts?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>No Cart Data Found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allShoppingCarts?.nodes.length > 0 &&\r\n                data?.allShoppingCarts?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align=\"center\">{item.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {item?.user?.firstName\r\n                        ? `${item.user.firstName}${\r\n                            item.user?.lastName ? ` ${item.user.lastName}` : ``\r\n                          }`\r\n                        : item?.user?.userName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className={classes.root}>\r\n                      <Tooltip\r\n                        arrow\r\n                        title={item?.cart_items?.nodes\r\n                          .map((i) => i.productSku)\r\n                          .join(\",\")}\r\n                      >\r\n                        <Chip\r\n                          label={item?.cart_items?.nodes.length}\r\n                          color={\"primary\"}\r\n                          size=\"small\"\r\n                        />\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" padding=\"none\">\r\n                      {item?.user?.email && (\r\n                        <Button\r\n                          startIcon={<EmailIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          href={`mailto:${item?.user?.email}`}\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.email}\r\n                        </Button>\r\n                      )}\r\n                      {item?.user?.mobile && (\r\n                        <Button\r\n                          startIcon={<CallIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.mobile}\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        className={classes.chip}\r\n                        label={item.status.toUpperCase()}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {/* <IconButton size=\"small\">\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleClickOpen(item.id)}\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={Object.keys(Headers).length}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allShoppingCarts?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <CartDetails open={Boolean(open)} handleClose={handleClose} id={open} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BackupOutlinedIcon from \"@material-ui/icons/BackupOutlined\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const PriceUpload = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"price_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleUpload = (event) => {\r\n    let files = event.target.files;\r\n    if (files) {\r\n      files = files[0];\r\n    } else {\r\n      return;\r\n    }\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", files);\r\n    axios\r\n      .post(API_URL + \"/file_upload_price_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <input\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={handleUpload}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"error\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <BackupOutlinedIcon style={{ fontSize: 200 }} />\r\n            </IconButton>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">UPLOAD EXCEL FILE</Typography>\r\n        </Grid>\r\n        {progress !== 0 && (\r\n          <Grid item xs={12}>\r\n            <CircularProgressWithLabel size={100} value={progress} />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet fetchMasterCountries = gql`\r\n  query ($name: String) {\r\n    allMasterCountries(filter: { name: { includesInsensitive: $name } }) {\r\n      nodes {\r\n        id\r\n        name\r\n        nicename\r\n        numcode\r\n        phonecode\r\n        currency\r\n        currencyAlias\r\n        currencySymbol\r\n        fxConversionRate\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: MasterCountryInput!) {\r\n    createMasterCountry(input: { masterCountry: $input }) {\r\n      masterCountry {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $masterCountryPatch: MasterCountryPatch!) {\r\n    updateMasterCountryById(\r\n      input: { id: $id, masterCountryPatch: $masterCountryPatch }\r\n    ) {\r\n      masterCountry {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const MasterCountry = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [search, setSearch] = React.useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const addMasterCountry = (data) => {\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          masterCountryPatch: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const syncFXAPI = () => {\r\n    sendNetworkRequest(\"/fxSynclatest\", null, {})\r\n      .then((res) => {\r\n        snack.setSnack({ open: true, msg: res.message });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some Error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchMasterCountries, {\r\n    variables: {\r\n      name: search,\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Page title={\"Country List\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          title={\"Country & Fx Rate\"}\r\n          button_title=\"Add New\"\r\n          fxSyncAPI={syncFXAPI}\r\n          onCreate={addMasterCountry}\r\n          onSearch={setSearch}\r\n          columns={tableData.columns}\r\n          values={data?.allMasterCountries?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nlet fetchDailyMetalPrices = gql`\r\n  query {\r\n    allDailyMetalPrices {\r\n      nodes {\r\n        id\r\n        metalName\r\n        displayName\r\n        displayPrice\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: DailyMetalPriceInput!) {\r\n    createDailyMetalPrice(input: { dailyMetalPrice: $input }) {\r\n      dailyMetalPrice {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $dailyMetalPricePatch: DailyMetalPricePatch!) {\r\n    updateDailyMetalPriceById(\r\n      input: { id: $id, dailyMetalPricePatch: $dailyMetalPricePatch }\r\n    ) {\r\n      dailyMetalPrice {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const DailyMetalRate = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const addDailyMetalPrice = (data) => {\r\n    console.log(data);\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          dailyMetalPricePatch: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchDailyMetalPrices);\r\n\r\n  return (\r\n    <Page title={\"Daily MetalRate\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          button_title=\"Add New\"\r\n          onCreate={addDailyMetalPrice}\r\n          columns={tableData.columns}\r\n          values={data?.allDailyMetalPrices?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nimport { PRICE_RUN_LOGS } from \"../../graphql/query\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const PriceLogs = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    PRICE_RUN_LOGS,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Price Run History Logs </Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Completed Product</TableCell>\r\n                <TableCell align={\"center\"}>Pricing Component</TableCell>\r\n                <TableCell align={\"center\"}>Requested </TableCell>\r\n                <TableCell align={\"center\"}>Succeed</TableCell>\r\n                <TableCell align={\"center\"}>Failed</TableCell>\r\n                <TableCell align={\"center\"}>Updated</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allPriceRunningHistories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Price Run Logs found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allPriceRunningHistories?.nodes.length > 0 &&\r\n                data?.allPriceRunningHistories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {item?.completedProductCount ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {\" \"}\r\n                      {item?.pricingComponent ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.requestedProducts &&\r\n                      item?.logs?.nodes[0]?.requestedProducts.length\r\n                        ? item?.logs?.nodes[0]?.requestedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.successfullyExecutedProducts &&\r\n                      item?.logs?.nodes[0]?.successfullyExecutedProducts.length\r\n                        ? item?.logs?.nodes[0]?.successfullyExecutedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.failedProducts &&\r\n                      item?.logs?.nodes[0]?.failedProducts.length\r\n                        ? item?.logs?.nodes[0]?.failedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allPriceRunningHistories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { API_URL } from \"../config\";\r\nimport Axios from \"axios\";\r\n\r\nexport const UploadImage = (file) => {\r\n  var bodyFormData = new FormData();\r\n  bodyFormData.set(\"web_img\", file);\r\n\r\n  return Axios.post(API_URL + \"/banner_image_upload\", bodyFormData, {\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Content-Type\": `multipart/form-data; boundary=${bodyFormData._boundary}`,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { UploadImage } from \"../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../context/AlertContext\";\r\nconst useStyles = makeStyles({\r\n  Card: {\r\n    height: \"500px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n        setDisableButton(true);\r\n        setImgLink(res?.data?.web ?? \"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ResetFunc = () => {\r\n    setImgLink(\"\");\r\n    setDisableButton(false);\r\n  };\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Image upload\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"button-files\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"button-files\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                disabled={disableButton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <Typography\r\n              style={{ textAlign: \"center\", marginTop: 2 }}\r\n              component=\"h4\"\r\n              variant=\"h4\"\r\n            >\r\n              {imgLink\r\n                ? \"Click image to copy link :\"\r\n                : \"Upload image to get link here\"}\r\n            </Typography>\r\n\r\n            {imgLink && (\r\n              <div\r\n                onClick={() => {\r\n                  alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Link Copied Successfully\",\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Tooltip title=\"Click to Copy Link\"> */}\r\n                <img\r\n                  style={{ cursor: \"copy\", width: \"100%\", height: \"auto\" }}\r\n                  src={imgLink}\r\n                  alt=\"imag\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                />\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: 6,\r\n                    cursor: \"copy\",\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                >\r\n                  {imgLink}\r\n                </Typography>\r\n                {/* </Tooltip> */}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        style={{\r\n          margin: \"auto\",\r\n          paddingTop: \"8px\",\r\n        }}\r\n      >\r\n        <Button variant=\"outlined\" onClick={ResetFunc}>\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  dialogPaper: {\r\n    minWidth: \"1200px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"800px\",\r\n  },\r\n  dialogHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  blogInnerImage: {\r\n    marginBottom: \"20px\",\r\n    \"& img\": {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n\r\n  border: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\",\r\n  },\r\n\r\n  imageText: {\r\n    marginBottom: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      fontWeight: 600,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  alignText: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    marginBottom: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      fontWeight: 600,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  contentText: {\r\n    marginBottom: \"20px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  datePicker: {\r\n    \"& .react-datepicker-wrapper\": {\r\n      \"& .react-datepicker__input-container\": {\r\n        \"& input\": {\r\n          width: \"100% !important\",\r\n          padding: \"8.5px 12px !important\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n\r\n  textFields: {\r\n    \"& .rdw-editor-main\": {\r\n      borderRadius: \"4px\",\r\n    },\r\n    \"& .public-DraftStyleDefault-ltr\": {\r\n      padding: \"0px 12px\",\r\n    },\r\n  },\r\n\r\n  headerBottom: {\r\n    marginTop: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"12px\",\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  dialogTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TableHeaderComp(props) {\r\n  const classes = useStyles();\r\n  const { name, handleAddNew = () => null, noAddNew = false } = props;\r\n  return (\r\n    <div className={classes.dialogHeader} style={{ padding: \"8px\" }}>\r\n      <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n        {name}\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddNew}>\r\n        Add New\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableHeaderComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst header = [\r\n  \"Position\",\r\n  \"Link to Check\",\r\n  \"Mobile Image\",\r\n  \"Desktop Image\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"position\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst BannerCMS = (props) => {\r\n  console.log(\"hfjdskalSDJBSK\", props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    position: \"\",\r\n    urlParam: null,\r\n    mobile: \"\",\r\n    web: \"\",\r\n    url: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.position && state.url && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Banner Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.banners}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"position\"\r\n            label=\"Position\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.position}\r\n            name=\"position\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Banner's Redirect Link (Routes Only)\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.url}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Mobile Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.web}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {(state.mobile.length > 0 || state.web.length > 0) && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.mobile.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.mobile}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {state.web.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.web}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BannerCMS;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CDNPAGES = `\r\n    query ($page: String!){\r\n        cdnByPage(page: $page) {\r\n          data\r\n          id\r\n          page\r\n        }\r\n      }\r\n    `;\r\n\r\nexport const ALLCDNPAGES = `query MyQuery {\r\n  allCdns {\r\n    nodes {\r\n      page\r\n      data\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CMS_UPDATE = `\r\nmutation updateStore( $stringifyState: JSON!,$page: String!) {\r\n  updateCdnByPage(input: { cdnPatch: { data: $stringifyState }, page: $page }) {\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_CMS = `\r\nmutation createNew($cloneData: JSON!, $page: String!){\r\n  createCdn(input: {cdn: {data: $cloneData, page: $page}}) {\r\n    cdn {\r\n      data\r\n      page\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const UPDATE_STATUS_CMS = `\r\nmutation updateStatus($isActive: Boolean!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {isActive: $isActive}, page: $page}){\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const UPDATE_URL = `\r\nmutation updateStatus($changePage: String!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {page: $changePage}, page: $page}){\r\n    cdn {\r\n      data\r\n      isActive\r\n      page\r\n    }\r\n  }\r\n}`;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"City\", \"Total Stores\", \"View Stores\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"city\" },\r\n  { type: \"TOTAL_STORES\", name: \"stores\" },\r\n  { type: \"VIEW_STORES\", name: \"stores\", customName: \"View Stores\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst storeHeader = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Address\",\r\n  \"Store Id\",\r\n  \"Location\",\r\n  \"Image\",\r\n  \"Button\",\r\n  \"Action\",\r\n];\r\nconst viewStoreHeader = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Address\",\r\n  \"Store Id\",\r\n  \"Location\",\r\n  \"Image\",\r\n  \"Button\",\r\n];\r\n\r\nconst tableStoreData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst tableStoreView = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n];\r\n\r\nconst initialStoreDetails = {\r\n  title: \"\",\r\n  button: \"\",\r\n  para: \"\",\r\n  location: \"\",\r\n  img: \"\",\r\n  key: \"\",\r\n  href: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction StoreLocatorCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openStores, setOpenStores] = useState(false);\r\n  const [stores, setStores] = useState([]);\r\n  const [addStoresOpens, setAddStores] = useState(false);\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    stores: [],\r\n  });\r\n  const [showStoreFields, setShowStoreFields] = useState(false);\r\n  const [storeState, setStoreState] = useState(initialStoreDetails);\r\n  const [editData, setEditData] = useState(initialEdit);\r\n  const [storesEdit, setStoresEdit] = useState(initialEdit);\r\n\r\n  const handleViewStores = (e, data, index) => {\r\n    setOpenStores(true);\r\n    setStores(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenStores(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddStores(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddStores(false);\r\n    setState({\r\n      city: \"\",\r\n      stores: [],\r\n    });\r\n    setEditData(initialEdit);\r\n    setStoreState(initialStoreDetails);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setStoreState({\r\n      ...storeState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleShowStoreField = () => {\r\n    setShowStoreFields(true);\r\n  };\r\n\r\n  const validationHead = [\"title\", \"button\", \"para\", \"location\", \"img\", \"key\"];\r\n  const storeDetailsValidate = () => {\r\n    let err = [];\r\n    validationHead.map((val) => {\r\n      if (storeState[val].length === 0) err.push(val);\r\n    });\r\n    return err;\r\n  };\r\n\r\n  const addStoreDetails = () => {\r\n    const validate = storeDetailsValidate();\r\n    if (validate.length === 0) {\r\n      if (storesEdit.isEdit) {\r\n        const editStores = state.stores;\r\n        editStores.splice(storesEdit.editIndex, 1, storeState);\r\n        const newState = {\r\n          city: state.city,\r\n          stores: editStores,\r\n        };\r\n        setShowStoreFields(false);\r\n        setState(newState);\r\n      } else {\r\n        setShowStoreFields(false);\r\n        const newStore = [...state.stores, storeState];\r\n        setState({\r\n          ...state,\r\n          stores: newStore,\r\n        });\r\n        setStoreState(initialStoreDetails);\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill the mandatory details\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setStoreState({\r\n            ...storeState,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (state.city.length > 0 && state.stores.length > 0) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.storeData;\r\n        storeDataEdit.splice(editData.editIndex, 1, state);\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      } else {\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...props?.data?.props?.storeData, state],\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please add both the State and the Store\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = props?.data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleStoresEdit = (e, rowData, rowIndex) => {\r\n    setShowStoreFields(true);\r\n    setStoresEdit({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setStoreState(rowData);\r\n  };\r\n\r\n  const handleDeleteStore = (e, rowData, rowIndex) => {\r\n    const deleteStores = state.stores;\r\n    deleteStores.splice(rowIndex, 1);\r\n    const newState = {\r\n      city: state.city,\r\n      stores: deleteStores,\r\n    };\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Store Locator Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.storeData}\r\n        handleViewStores={handleViewStores}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openStores}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Stores in {stores?.city}</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableComp\r\n            header={viewStoreHeader}\r\n            tableData={tableStoreView}\r\n            data={stores?.stores}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addStoresOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add new data</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          >\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              label=\"Add New State\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeData}\r\n              value={state.city.toUpperCase()}\r\n              name=\"city\"\r\n              required\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            {!showStoreFields && (\r\n              <Button onClick={handleShowStoreField}>Add New Store</Button>\r\n            )}\r\n          </div>\r\n\r\n          {showStoreFields && (\r\n            <div>\r\n              <Typography variant=\"h6\">Add Store Details</Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"title\"\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.title}\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"button\"\r\n                    label=\"Button\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.button}\r\n                    name=\"button\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"key\"\r\n                label=\"Store Id\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.key}\r\n                name=\"key\"\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.location}\r\n                name=\"location\"\r\n                required\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"para\"\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.para}\r\n                name=\"para\"\r\n                required\r\n              />\r\n              <Grid container style={{ paddingTop: \"8px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Add Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {storeState.img.length > 0 && (\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={storeState.img}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              <div\r\n                className={classes.dialogHeader}\r\n                style={{ justifyContent: \"center\" }}\r\n                onClick={addStoreDetails}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Store Details\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Stores Added\r\n          </Typography>\r\n          <TableComp\r\n            header={storeHeader}\r\n            tableData={tableStoreData}\r\n            data={state?.stores}\r\n            handleEdit={handleStoresEdit}\r\n            handleDelete={handleDeleteStore}\r\n          />\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StoreLocatorCMS;\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport ColorPic  from \"./colorPic\";\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parentState = this.props.parentState;\r\n    console.log(\"parentState-1\", parentState);\r\n    const contentBlock = htmlToDraft(parentState);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    // if (editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    const data = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    console.log(\"data-00\", data);\r\n    this.props.handleChangeState(data);\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            fontFamily: {\r\n              options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana','Noto Serif,serif', ],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n            colorPicker: { colors: ['rgb(97,189,109)', 'rgb(26,188,156)', 'rgb(84,172,210)', 'rgb(44,130,201)',\r\n            'rgb(147,101,184)', 'rgb(71,85,119)', 'rgb(204,204,204)', 'rgb(65,168,95)', 'rgb(0,168,133)',\r\n            'rgb(61,142,185)', 'rgb(41,105,176)', 'rgb(85,57,130)', 'rgb(40,50,78)', 'rgb(0,0,0)',\r\n            'rgb(247,218,100)', 'rgb(251,160,38)', 'rgb(235,107,86)', 'rgb(226,80,65)', 'rgb(163,143,132)',\r\n            'rgb(239,239,239)', 'rgb(255,255,255)', 'rgb(250,197,28)', 'rgb(243,121,52)', 'rgb(209,72,65)',\r\n            'rgb(184,49,47)', 'rgb(124,112,107)', 'rgb(209,213,216)','rgb(47,52,139)'],}\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;\r\n","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BlockPicker } from 'react-color';\r\nimport ColorizeIcon from '@material-ui/icons/Colorize';\r\n\r\nclass ColorPic extends Component {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    onExpandEvent: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    currentState: PropTypes.object,\r\n  };\r\n\r\n  stopPropagation = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  onChange = (color) => {\r\n    const { onChange } = this.props;\r\n    onChange('color', color.hex);\r\n  }\r\n\r\n  renderModal = () => {\r\n    const { color } = this.props.currentState;\r\n    return (\r\n      <div\r\n        onClick={this.stopPropagation}\r\n      >\r\n        <BlockPicker color={color} onChangeComplete={this.onChange} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { expanded, onExpandEvent } = this.props;\r\n    return (\r\n      <div\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={expanded}\r\n        aria-label=\"rdw-color-picker\"\r\n      >\r\n        <div\r\n          onClick={onExpandEvent}\r\n        >\r\n          {/* <img\r\n            src={<ColorizeIcon style={{}} />}\r\n            alt=\"\"\r\n          /> */}\r\n          <ColorizeIcon style={{fontSize:\"12px\"}} />\r\n        </div>\r\n        {expanded ? this.renderModal() : undefined}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPic;","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"HTMLTEXT\", name: \"richEditor\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  richEditor: \"\",\r\n};\r\n\r\nconst TitleDescriptionCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.description.length < 1 || state.title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: state,\r\n      };\r\n      setTitleDesc([getData.props]);\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"TitleAndData\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      richEditor: data,\r\n    });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <div\r\n            style={{\r\n              border: \"1px solid #c0c0c0\",\r\n              padding: \"8px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeState}\r\n              parentState={state.richEditor}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleDescriptionCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst QueryFormCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    image: \"\",\r\n  });\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setImage([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let getData = [];\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: state,\r\n    };\r\n    setImage([getData.props]);\r\n    setOpen(false);\r\n    props.handleSubmit(getData, \"QueryForm\", \"\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n\r\n  console.log(\"-------1\", image);\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Query Form Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={image}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Edit Query Form</DialogTitle>\r\n        <DialogContent>\r\n          <Grid>\r\n            <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n            />\r\n            <label htmlFor=\"button-file\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                startIcon={<CloudUploadIcon />}\r\n                // disabled={disableButton.mobile}\r\n              >\r\n                Store Image\r\n              </Button>\r\n            </label>\r\n            {image.length > 0 &&\r\n              image.map((e, i) => {\r\n                return (\r\n                  <>\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={e?.image}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default QueryFormCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Image\",\r\n  \"SkuUrl\",\r\n  \"Price\",\r\n  \"Offer Price\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"skuUrl\", width: \"250px\" },\r\n  { type: \"TEXT\", name: \"price\" },\r\n  { type: \"TEXT\", name: \"offerPrice\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  price: null,\r\n  offerPrice: null,\r\n  title: null,\r\n  save: 0,\r\n  image: {\r\n    placeImage: {\r\n      img: null,\r\n    },\r\n    hoverImage: {\r\n      img: null,\r\n    },\r\n  },\r\n  productId: null,\r\n  diamondType: \"\",\r\n  purity: \"\",\r\n  productType: \"\",\r\n  skuId: null,\r\n  skuID: null,\r\n  skuUrl: null,\r\n  description: null,\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst SlidingImageCardCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [constructedData, setConstructedData] = React.useState([]);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  React.useEffect(() => {\r\n    const dataConstruct = props?.data?.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    if (event.target.name === \"skuId\") {\r\n      setState({\r\n        ...state,\r\n        skuID: event.target.value,\r\n        skuId: event.target.value,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.skuUrl &&\r\n      state.image.hoverImage.img &&\r\n      state.image.placeImage.img &&\r\n      state.price &&\r\n      state.offerPrice &&\r\n      state.productId &&\r\n      state.skuID &&\r\n      state.skuId\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const listingProducts = props?.data?.props?.listingProducts;\r\n        listingProducts.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: listingProducts,\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: [...props?.data?.props?.listingProducts, state],\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            image: {\r\n              placeImage: {\r\n                img: res?.data?.web,\r\n              },\r\n              hoverImage: {\r\n                img: res?.data?.web,\r\n              },\r\n            },\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const listingProducts = props?.data?.props?.listingProducts;\r\n    listingProducts.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        listingProducts: listingProducts,\r\n      },\r\n    };\r\n    const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n    props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Sliding Image Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={constructedData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Edit Sliding Image Card Component\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"skuUrl\"\r\n            label=\"SKU Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.skuUrl}\r\n            name=\"skuUrl\"\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            style={{ padding: \"16px 0px\" }}\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                >\r\n                  Image Upload\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.image.placeImage.img && <Grid item>\r\n              <img\r\n                alt=\"nacimages\"\r\n                src={state.image.placeImage.img}\r\n                style={{ width: \"100px\", height: \"auto\" }}\r\n              />\r\n            </Grid>}\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"skuId\"\r\n                label=\"SKU ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.skuId}\r\n                name=\"skuId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"productId\"\r\n                label=\"Product ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.productId}\r\n                name=\"productId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.price}\r\n                name=\"price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"offerPrice\"\r\n                label=\"Offer Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.offerPrice}\r\n                name=\"offerPrice\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SlidingImageCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useContext } from \"react\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Content\",\r\n  \"Mobile Image\",\r\n  \"Web Image\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerBannerCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    content: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.content && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Banner Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.banners}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={onChangeData}\r\n              name=\"title\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n\r\n            {/* Image Upload */}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {(state.mobile.length > 0 || state.web.length > 0) && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.mobile.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.mobile}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {state.web.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.web}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerBannerCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Job Role\",\r\n  \"Location\",\r\n  \"Description\",\r\n  \"Button Text\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"job_Role\" },\r\n  { type: \"TEXT\", name: \"location\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerCardCMS = (props) => {\r\n  console.log(\"textt\", props);\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    job_Role: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    button_Text: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.job_Role &&\r\n      state.location &&\r\n      state.description &&\r\n      state.button_Text\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.cardContent;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"job_Role\"\r\n              label=\"Job_Role\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.job_Role}\r\n              onChange={onChangeData}\r\n              name=\"job_Role\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.location}\r\n              onChange={onChangeData}\r\n              name=\"location\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.description}\r\n              onChange={onChangeData}\r\n              name=\"description\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Description\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCollectionHeaderCMS = (props) => {\r\n  console.log(\"prop123\", props);\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.description) {\r\n      if (editData.isEdit) {\r\n        const editHeader = props?.data?.props?.header;\r\n        editHeader.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: editHeader,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: [...props?.data?.props?.header, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const header = props?.data?.props?.header;\r\n    header.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        header: header,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Header Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.header}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      </Paper>\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Header Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionHeaderCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Content\", \"Buttons\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"BUTTON_ARRAY\", name: \"buttons\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst innerHeader = [\"S.No\", \"Buttons\", \"Link\", \"Action\"];\r\nconst innerTableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"name\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialButtonState = {\r\n  name: \"\",\r\n  url: \"\",\r\n};\r\n\r\nconst initialState = {\r\n  img: \"\",\r\n  content: \"\",\r\n  buttons: [],\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst CustomCollectionCardsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [state, setState] = React.useState(initialState);\r\n    console.log(\"stateHandle\",state);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n  const [buttonState, setButtonState] = React.useState(initialButtonState);\r\n  const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.content) {\r\n      if (editData.isEdit) {\r\n        const editCard = props?.data?.props?.cardContent;\r\n        editCard.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editCard,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleInnerDelete = (e, rowData, rowIndex) => {\r\n    const deleteButton = state.buttons;\r\n    deleteButton.splice(rowIndex,1);\r\n    setState({\r\n      ...state, buttons: deleteButton\r\n    })\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const handleInnerEdit = (e, rowData, rowIndex) => {\r\n    setButtonState(rowData);\r\n    setButtonEditState({\r\n      ...buttonEditState,\r\n      isEdit: true,\r\n      editIndex: rowIndex,\r\n    });\r\n  };\r\n\r\n  const onChangeButtonData = (event) => {\r\n    setButtonState({\r\n      ...buttonState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddButtonUrl = () => {\r\n    if (buttonEditState.isEdit) {\r\n      const editButton = state.buttons;\r\n      editButton.splice(buttonEditState.editIndex,1,buttonState);\r\n      setState({\r\n        ...state, buttons: editButton\r\n      })\r\n    } else {\r\n      if (buttonState.name.length > 0) {\r\n        setState({\r\n          ...state,\r\n          buttons: [...state.buttons, buttonState],\r\n        });\r\n        setButtonState(initialButtonState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please add the button\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Cards Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.img}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid style={{ borderTop: \"1px solid #e0e0e0\" }}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"button\"\r\n                label=\"Button\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.name}\r\n                onChange={onChangeButtonData}\r\n                name=\"name\"\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Link\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.url}\r\n                onChange={onChangeButtonData}\r\n                name=\"url\"\r\n              />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  style={{ margin: \"8px 0px 12px\" }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleAddButtonUrl}\r\n                >\r\n                  Add Button and Url\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <TableComp\r\n              header={innerHeader}\r\n              tableData={innerTableData}\r\n              data={state.buttons}\r\n              handleDelete={handleInnerDelete}\r\n              handleEdit={handleInnerEdit}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionCardsCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Description\", \"Button Text\", \"Url\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomNewsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"News Room Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New News Room Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Add Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {state.img.length > 0 && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.img.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomNewsCMS;\r\n","import React from \"react\";\r\nimport {\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Description\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"Title\" },\r\n  { type: \"TEXT\", name: \"Description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst initialState = {\r\n  Title: \"\",\r\n  Description: \"\",\r\n};\r\nconst SpclTitleDescr = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [spclTitleDescr, setSpclTitleDescr] = React.useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  React.useEffect(() => {\r\n    setSpclTitleDescr([data?.props?.storeData]);\r\n    setState(data?.props?.storeData);\r\n  }, []);\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setState(rowData);\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.Description.length < 1 || state.Title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      const storeData = data?.props?.storeData;\r\n      getData = {\r\n        component: data?.component,\r\n        props: {\r\n          storeData: state,\r\n        },\r\n      };\r\n      setSpclTitleDescr([getData.props?.storeData]);\r\n\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"SpclTitleDescr\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Special Title and Description Component\"}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={spclTitleDescr}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit Special Title and Description Component\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"Title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state?.Title}\r\n              name=\"Title\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"Description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              onChange={onChangeData}\r\n              value={state?.Description}\r\n              name=\"Description\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SpclTitleDescr;\r\n","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Image\",\r\n    \"Content\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    title: \"\",\r\n    image: null,\r\n    content: \"\",\r\n}\r\n\r\nconst BookYourAppointmentCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n    console.log(data?.props, \"data?.props\")\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        image: res?.data?.web\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title &&\r\n            state.image &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: values,\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            } else {\r\n                console.log(editData, \"isaddd\")\r\n\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props:\r\n                        [...data?.props, state],\r\n\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Book Your Appointment Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Book Your Appointment Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"flex-start\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                            spacing={3}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-file\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                />\r\n                                <label htmlFor=\"button-file\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    // disabled={disableButton.mobile}\r\n                                    >\r\n                                        Image Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state.image && <Grid item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.image}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"Details\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default BookYourAppointmentCMS","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Name\",\r\n    \"Image\",\r\n    \"Address\",\r\n    \"Feed\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"name\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"address\" },\r\n    { type: \"TEXT\", name: \"feed\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    name: \"\",\r\n    img: null,\r\n    address: \"\",\r\n    feed: \"\",\r\n}\r\nconst TestimonialCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        handleClickOpen();\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setState(initialState)\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.name &&\r\n            state.img &&\r\n            state.address &&\r\n            state.feed\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const storeData = data?.props?.storeData;\r\n                storeData.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: storeData,\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: [...props?.data?.props?.storeData, state],\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        let getData = [];\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(rowIndex, 1);\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                storeData: storeData,\r\n            },\r\n        };\r\n\r\n        props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Testimonial Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.storeData}\r\n                    handleDelete={handleDelete}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Testimonial Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.name}\r\n                            name=\"name\"\r\n                        />\r\n                            <Grid\r\n                                container\r\n                                justifyContent=\"flex-start\"\r\n                                style={{ padding: \"16px 0px\" }}\r\n                                spacing={3}\r\n                            >\r\n                                <Grid item>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: \"none\" }}\r\n                                        id=\"button-file\"\r\n                                        multiple\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                    />\r\n                                    <label htmlFor=\"button-file\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon />}\r\n                                        >\r\n                                            Image Upload\r\n                                        </Button>\r\n                                    </label>\r\n                                </Grid>\r\n                                {state?.img && <Grid item>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.img}\r\n                                        style={{ width: \"100px\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"feed\"\r\n                            label=\"Feed\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.feed}\r\n                            name=\"feed\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.address}\r\n                            name=\"address\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default TestimonialCMS","import React, { useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Image\", \"Name\", \"Details\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"sub\" },\r\n  { type: \"TEXT\", name: \"sub2\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst initialState = {\r\n  title: \"\",\r\n  img: null,\r\n  type: \"\",\r\n  sub: \"\",\r\n  sub2: \"\",\r\n};\r\n\r\nconst AboutCollection = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            img: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setState(state);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.title && state.img && state.type && state.sub && state.sub2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeData,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      } else {\r\n        debugger\r\n        console.log(editData, \"isaddd\")\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...data?.props?.storeData, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n\r\n    props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"About Collection Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props?.storeData}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit About Collection Component\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.title}\r\n              name=\"title\"\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.type}\r\n              name=\"type\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                  >\r\n                    Image Upload\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"sub\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.sub}\r\n              name=\"sub\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"sub2\"\r\n              label=\"Details\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              onChange={onChangeData}\r\n              value={state.sub2}\r\n              name=\"sub2\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default AboutCollection;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleComp = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState([]);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setTitle([data?.props]);\r\n    setState(data?.props);\r\n  }, []);\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setState(state);\r\n    handleClickOpen();\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: state,\r\n      };\r\n      setTitle([getData.props]);\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"titleComp\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp name={\" Title Component\"} noAddNew />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={title}\r\n        handleEdit={handleEdit}\r\n      />\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Title Component</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state?.title}\r\n            name=\"title\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default TitleComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleWithDescription = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    const getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setOpen(false);\r\n    setTitleDesc([state])\r\n    props.handleSubmit(getData,\"TitleAndDescription\",\"\")\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows={10}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleWithDescription;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Description\",\r\n  \"Italic Text\",\r\n  \"Button Text\",\r\n  \"Url\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"italic_text\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomAdvertisementCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    italic_text: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Advertisement Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Advertisement Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"italic_text\"\r\n            label=\"Italic_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.italic_text}\r\n            onChange={onChangeData}\r\n            name=\"italic_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid container style={{ padding: \"16px 0px\" }}>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n\r\n            {state.img.length > 0 && (\r\n              <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                <img\r\n                  alt=\"nacimages\"\r\n                  src={state.img}\r\n                  style={{ width: \"100px\", height: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomAdvertisementCMS;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"Category Heading\", \"Category List\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"categoryHeading\" },\r\n  { type: \"ARRAYTEXT\", name: \"categoryList\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst initialData = {\r\n  categoryHeading: \"\",\r\n  categoryList: [],\r\n};\r\nconst initialStateRow = {\r\n  url: \"\",\r\n  name: \"\",\r\n};\r\nconst SiteMapCMS = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n  const alert = React.useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  //\r\n  const [stateRow, setStateRow] = React.useState(initialStateRow);\r\n  const [data1, setData1] = React.useState(initialData);\r\n\r\n  const handleChange = (key, val, i, parentKey) => {\r\n    debugger;\r\n    let tempState = data1;\r\n    tempState[parentKey][i][key] = val;\r\n    setData1({ ...tempState });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setData1({\r\n      ...data1,\r\n      categoryHeading: rowData?.categoryHeading,\r\n      categoryList: rowData?.categoryList,\r\n    });\r\n    setStateRow(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setData1(initialData);\r\n    setStateRow(initialStateRow);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (data1.categoryHeading && data1.categoryList) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate) {\r\n      if (editData.isEdit) {\r\n        const values = data?.props;\r\n        values.splice(editData.editIndex, 1, data1);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: values,\r\n        };\r\n        setOpen(false);\r\n        setData1(initialData);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"siteMap\", \"props\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...data?.props, data1],\r\n        };\r\n        setOpen(false);\r\n        setData1(initialData);\r\n        props.handleSubmit(getData, \"siteMap\", \"props\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = (val, i, data1) => {\r\n    const delRow = [...data1?.categoryList];\r\n    delRow.splice(i, 1);\r\n    setData1({ ...data1, categoryList: delRow });\r\n  };\r\n\r\n  const handleAddItem = (key, value) => {\r\n    setStateRow({ ...stateRow, [key]: value });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const categoryItems = data?.props;\r\n    categoryItems.splice(rowIndex, 1);\r\n    getData = {\r\n      component: data?.component,\r\n      props: categoryItems,\r\n    };\r\n    props.handleSubmit(getData, \"siteMap\", \"props\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setEditData({ ...editData, isEdit: false });\r\n    setOpen(true);\r\n  };\r\n\r\n  const addItems = () => {\r\n    const data = [...data1?.categoryList, stateRow];\r\n    updateState(\"categoryList\", data);\r\n    setStateRow(initialStateRow);\r\n  };\r\n\r\n  const updateState = (key, value) => {\r\n    debugger;\r\n    setData1({ ...data1, [key]: value });\r\n  };\r\n\r\n  console.log(data1, \"data1\");\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Site Map Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props}\r\n          handleEdit={handleEdit}\r\n          handleDelete={handleDelete}\r\n        />\r\n        <Dialog classes={{ paper: classes.dialogPaperMid }} open={open}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            <div className={classes.dialogTitle} style={{ display: \"flex\" }}>\r\n              <Typography>Edit Site Map Component</Typography>\r\n              {/* {editData?.isEdit && <Button variant=\"contained\" color=\"primary\" onClick={handleAddItem}>\r\n                                Add\r\n                            </Button>} */}\r\n            </div>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"categoryHeading\"\r\n              label=\"Category Heading\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={(e) => updateState(\"categoryHeading\", e.target.value)}\r\n              value={data1.categoryHeading}\r\n            />\r\n            <Grid\r\n              xs={12}\r\n              item\r\n              alignContent={\"start\"}\r\n              justifyContent={\"space-between\"}\r\n            >\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"space-between\"}\r\n              >\r\n                <>\r\n                  <Grid Item xs={5}>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      rows={3}\r\n                      onChange={(val) =>\r\n                        handleAddItem(\"name\", val.target.value)\r\n                      }\r\n                      value={stateRow?.name}\r\n                      name=\"name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid Item xs={5}>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"url\"\r\n                      label=\"url\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      rows={3}\r\n                      onChange={(val) => handleAddItem(\"url\", val.target.value)}\r\n                      value={stateRow?.url}\r\n                      name=\"url\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    Item\r\n                    xs={1}\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={addItems}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Grid>\r\n                </>\r\n                {data1?.categoryList?.length > 0 &&\r\n                  data1?.categoryList?.map((e, i) => {\r\n                    return (\r\n                      <>\r\n                        <Grid Item xs={5}>\r\n                          <TextField\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            rows={3}\r\n                            onChange={(val) =>\r\n                              handleChange(\r\n                                \"name\",\r\n                                val.target.value,\r\n                                i,\r\n                                \"categoryList\"\r\n                              )\r\n                            }\r\n                            value={e?.name}\r\n                            name=\"Name\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid Item xs={5}>\r\n                          <TextField\r\n                            margin=\"dense\"\r\n                            id=\"url\"\r\n                            label=\"URL\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            rows={3}\r\n                            onChange={(val) =>\r\n                              handleChange(\r\n                                \"url\",\r\n                                val.target.value,\r\n                                i,\r\n                                \"categoryList\"\r\n                              )\r\n                            }\r\n                            value={e?.url}\r\n                            name=\"URL\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          Item\r\n                          xs={1}\r\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                        >\r\n                          <DeleteIcon\r\n                            onClick={(val) => handleDeleteItem(val, i, data1)}\r\n                            style={{ color: \"red\", cursor: \"pointer\" }}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>\r\n              {editData.isEdit ? \"Update \" : \"Add\"}\r\n            </Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SiteMapCMS;\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { useContext } from \"react\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  \r\n  const header = [\r\n    \"S.No\",\r\n    \"Mobile Image\",\r\n    \"Web Image\",\r\n    \"Action\",\r\n  ];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n    { type: \"WEB_IMAGE\", name: \"web\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceBannerCMS = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const alert = useContext(AlertContext);\r\n    const initialState = {\r\n      mobile: \"\",\r\n      web: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState);\r\n    const [disableButton, setDisable] = React.useState({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            // setDisable({ ...disableButton, [name]: true });\r\n  \r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.mobile && state.web) {\r\n        if (editData.isEdit) {\r\n          const editBanner = props?.data?.props?.banners;\r\n          editBanner.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: editBanner,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: [...props?.data?.props?.banners, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Banner Component\"}\r\n            handleAddNew={handleClickOpen}\r\n            noAddNew\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.banners}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n            <DialogContent>\r\n  \r\n              {/* Image Upload */}\r\n  \r\n              <Grid\r\n                container\r\n                justifyContent=\"space-around\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                      disabled={disableButton.mobile}\r\n                    >\r\n                      Mobile Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.web}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n              {(state.mobile.length > 0 || state.web.length > 0) && (\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"flex-start\"\r\n                  style={{ padding: \"16px 0px\" }}\r\n                >\r\n                  {state.mobile.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.mobile}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {state.web.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.web}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onsubmitvalue}>Add</Button>\r\n              <Button onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceBannerCMS;\r\n  ","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nconst header = [\r\n  \"S.No\",\r\n  \"Background Image\",\r\n  \"Header Image\",\r\n  \"Description\",\r\n  \"Form Title\",\r\n  \"Submit Text\",\r\n  \"Button Text\",\r\n  \"Type\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"background_Image\" },\r\n  { type: \"WEB_IMAGE\", name: \"header_Image\" },\r\n  { type: \"HTMLTEXT\", name: \"description\" },\r\n  { type: \"HTMLTEXT\", name: \"form_Title\" },\r\n  { type: \"TEXT\", name: \"submit_Content\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"TEXT\", name: \"type\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst initialState = {\r\n  background_Image: \"\",\r\n  header_Image: \"\",\r\n  description: \"\",\r\n  form_Title: \"\",\r\n  submit_Content: \"\",\r\n  button_Text: \"\",\r\n  type: \"\",\r\n};\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst ExperienceCardCMS = (props) => {\r\n  console.log(\"console data\", props);\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [sendData, setSendData] = React.useState([]);\r\n  const [state, setState] = React.useState({ ...initialState });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    background_Image: false,\r\n    header_Image: false,\r\n  });\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    setSendData([data?.props]);\r\n    setState(data?.props);\r\n  }, [data?.props]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditData(initialEdit);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.background_Image &&\r\n      state.header_Image &&\r\n      state.description &&\r\n      state.form_Title &&\r\n      state.submit_Content &&\r\n      state.button_Text &&\r\n      state.type\r\n    ) {\r\n      let getData = [];\r\n      if (editData.isEdit) {\r\n        getData = {\r\n          component: data?.component,\r\n          props: state,\r\n        };\r\n        setOpen(false);\r\n      } else {\r\n        getData = {\r\n          component: data?.component,\r\n          props: [...data?.props, state],\r\n        };\r\n        setOpen(false);\r\n      }\r\n      props.handleSubmit(getData, \"ExperienceCard\", \"props\");\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      description: data,\r\n    });\r\n  };\r\n  const handleChangeTitle = (data) => {\r\n    setState({\r\n      ...state,\r\n      form_Title: data,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Experience Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={sendData}\r\n          handleEdit={handleEdit}\r\n        />\r\n        {/* Dialog */}\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeState}\r\n              parentState={state.description}\r\n            />\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeTitle}\r\n              parentState={state.form_Title}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"submit Content\"\r\n              label=\"Submit_Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.submit_Content}\r\n              onChange={onChangeData}\r\n              name=\"submit_Content\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.type}\r\n              onChange={onChangeData}\r\n              name=\"type\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"background_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.background_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.background_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.background_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"header_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.header_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.header_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.header_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default ExperienceCardCMS;\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { useContext } from \"react\";\r\n  \r\n  const header = [\"S.No\", \"Image\", \"Title\", \"Description\", \"Url\", \"Action\"];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"TEXT\", name: \"description\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceTableCardCMS = (props) => {\r\n    const classes = useStyles();\r\n    const alert = useContext(AlertContext);\r\n  \r\n    const initialState = {\r\n      image: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      url: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [state, setState] = React.useState(initialState);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [disableButton, setDisable] = React.useState({\r\n      image: false,\r\n    });\r\n    const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n      setEditData(initialEdit)\r\n    };\r\n  \r\n    const onChangeData = (event) => {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.image && state.title && state.description && state.url) {\r\n        if (editData.isEdit) {\r\n          const editContent = props?.data?.props?.cardContent;\r\n          editContent.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: editContent,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: [...props?.data?.props?.cardContent, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n      let getData = [];\r\n      const content = props?.data?.props?.cardContent;\r\n      content.splice(rowIndex, 1);\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: {\r\n          cardContent: content,\r\n        },\r\n      };\r\n      props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Cards Component\"}\r\n            handleAddNew={handleClickOpen}\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.cardContent}\r\n            handleDelete={handleDelete}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog\r\n            classes={{ paper: classes.dialogPaperMid }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.title}\r\n                onChange={onChangeData}\r\n                name=\"title\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.description}\r\n                onChange={onChangeData}\r\n                name=\"description\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Url\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.url}\r\n                onChange={onChangeData}\r\n                name=\"url\"\r\n                required\r\n              />\r\n              {/* Image Upload */}\r\n  \r\n              <Grid container style={{ padding: \"16px 0px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.image}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {state.image.length > 0 && (\r\n                  <Grid item style={{ padding: \"0px 8px\" }}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n                Add\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceTableCardCMS;","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Address\",\r\n  \"Map Link\",\r\n  \"Contact Number\",\r\n  \"Store Id\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"address\" },\r\n  { type: \"TEXT\", name: \"url\", width: \"300px\" },\r\n  { type: \"TEXT\", name: \"contactNo\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  address: \"\",\r\n  url: \"\",\r\n  contactNo: \"\",\r\n  key: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst StoreLocatorDetailsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit)\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.address &&\r\n      state.contactNo &&\r\n      state.key\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: editContent,\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const deleteContent = props?.data?.props;\r\n    deleteContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: deleteContent\r\n    };\r\n    props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Career Card Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.address}\r\n            onChange={onChangeData}\r\n            name=\"address\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Map Link\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"contactNo\"\r\n            label=\"Contact No\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.contactNo}\r\n            onChange={onChangeData}\r\n            name=\"contactNo\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"key\"\r\n            label=\"Store Id\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.key}\r\n            onChange={onChangeData}\r\n            name=\"key\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StoreLocatorDetailsCMS;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { DatePickerComp } from \"../../../components\";\r\nimport moment from \"moment\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Header\",\r\n  \"Header Bottom\",\r\n  \"Heading Text\",\r\n  \"Content\",\r\n  \"Date\",\r\n  \"Button Text\",\r\n  \"View More\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"header\" },\r\n  { type: \"HTMLTEXT\", name: \"header_Bottom\" },\r\n  { type: \"TEXT\", name: \"heading\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"DATE_PICKER\", name: \"date\" },\r\n  { type: \"TEXT\", name: \"bottomText\" },\r\n  { type: \"VIEW_STORES\", name: \"blogs\",customName:\"View Details\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst options = [\"Left\", \"Right\"];\r\n\r\nconst initialBlogDetails = {\r\n  image: \"\",\r\n  header: \"\",\r\n  header_Bottom: \"\",\r\n  heading: \"\",\r\n  content: \"\",\r\n  date: new Date(),\r\n  bottomText: \"\",\r\n  description_1: \"\",\r\n  description_2: \"\",\r\n  description_3: \"\",\r\n  end_Text: \"\",\r\n  third_Image: {\r\n    align: \"\",\r\n    image: \"\",\r\n  },\r\n  second_Image: {\r\n    banners: [],\r\n  },\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction BlogPageCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [addBlogsOpens, setAddBlogs] = useState(false);\r\n  const [state, setState] = useState({\r\n    blogs: [],\r\n  });\r\n\r\n  const [blogState, setBlogState] = useState({ ...initialBlogDetails });\r\n  const [editData, setEditData] = useState(initialEdit);\r\n\r\n  const handleViewMore = (e, data, index) => {\r\n    setOpenBlog(true);\r\n    setBlogs(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddBlogs(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddBlogs(false);\r\n    setEditData(initialEdit);\r\n    setBlogState(initialBlogDetails);\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name,i) => {\r\n    debugger;\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        console.log(res?.data, \"ll\");\r\n        if (res?.data?.web) {\r\n          if (name === \"banners\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners: [\r\n                  ...blogState?.second_Image?.banners,\r\n                  {\r\n                    position: blogState?.second_Image?.banners.length,\r\n                    url: \"\",\r\n                    urlParam: \"\",\r\n                    web: res?.data?.web,\r\n                    mobile: res?.data?.web,\r\n                  },\r\n                ],\r\n              },\r\n            });\r\n          } else if (name === \"third_Image\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              third_Image: {\r\n                ...blogState?.third_Image,\r\n                image: res?.data?.web,\r\n              },\r\n            });\r\n          }else if(name === \"editBanners\"){\r\n            debugger;\r\n            const newBanner = {\r\n              position: i+1,\r\n              url: \"\",\r\n              urlParam: \"\",\r\n              web: res?.data?.web,\r\n              mobile: res?.data?.web,\r\n            }\r\n            const editBanners = [...blogState?.second_Image?.banners];\r\n            editBanners.splice(i,1,newBanner)\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners:editBanners\r\n              },\r\n            });\r\n          } else {\r\n            setBlogState({\r\n              ...blogState,\r\n              [name]: res?.data?.web,\r\n            });\r\n          }\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (\r\n      blogState.image &&\r\n      blogState.header &&\r\n      blogState.header_Bottom &&\r\n      blogState.heading &&\r\n      blogState.content &&\r\n      blogState.date &&\r\n      blogState.bottomText &&\r\n      blogState.description_1 &&\r\n      blogState.description_2 &&\r\n      blogState.description_3 &&\r\n      blogState.end_Text &&\r\n      blogState.third_Image.align &&\r\n      blogState.third_Image.image.length > 0 &&\r\n      blogState.second_Image.banners.length > 0\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.cardContent;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          bottomText: blogState?.bottomText,\r\n          content: blogState?.content,\r\n          date: moment(blogState?.date).format(\"MM/DD/YYYY\"),\r\n          description_1: blogState?.description_1,\r\n          description_2: blogState?.description_2,\r\n          description_3: blogState?.description_3,\r\n          end_Text: blogState?.end_Text,\r\n          header: blogState?.header,\r\n          header_Bottom: blogState?.header_Bottom,\r\n          heading: blogState?.heading,\r\n          image: blogState?.image,\r\n          second_Image: {\r\n            banners: blogState?.second_Image?.banners?.map((val, index) => {\r\n              return {\r\n                position: index,\r\n                url: \"\",\r\n                urlParam: \"\",\r\n                web: val.web,\r\n              };\r\n            }),\r\n          },\r\n          third_Image: {\r\n            align: blogState?.third_Image?.align,\r\n            image: blogState?.third_Image?.image,\r\n          },\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [\r\n              ...props?.data?.props?.cardContent,\r\n              {\r\n                bottomText: blogState?.bottomText,\r\n                content: blogState?.content,\r\n                date: new Date(blogState?.date),\r\n                description_1: blogState?.description_1,\r\n                description_2: blogState?.description_2,\r\n                description_3: blogState?.description_3,\r\n                end_Text: blogState?.end_Text,\r\n                header: blogState?.header,\r\n                header_Bottom: blogState?.header_Bottom,\r\n                heading: blogState?.heading,\r\n                image: blogState?.image,\r\n                second_Image: blogState.second_Image,\r\n                third_Image: {\r\n                  align: blogState?.third_Image?.align,\r\n                  image: blogState?.third_Image?.image,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        setAddBlogs(false);\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setBlogState(initialBlogDetails);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setBlogState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleChangeheaderBottom = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      header_Bottom: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_1 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_1: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_2 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_2: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_3 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_3: data,\r\n    });\r\n  };\r\n  const handleDate = (value) => {\r\n    setBlogState({ ...blogState, date: value });\r\n  };\r\n  const handleDeleteBanner =(i) => {\r\n    const editBanners = [...blogState?.second_Image?.banners];\r\n    editBanners.splice(i,1)\r\n    setBlogState({\r\n      ...blogState,\r\n      second_Image: {\r\n        banners:editBanners\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Blog Page Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleViewStores={handleViewMore}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Blogs Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n          <Grid>\r\n            <div className={classes.imageText}>\r\n              <Typography>Second Image</Typography>\r\n            </div>\r\n          </Grid>\r\n            <Grid container>\r\n              <Grid container spacing={2} style={{padding:\"10px 10px 20px\"}}>\r\n                {blogs?.second_Image?.banners?.map((val) => {\r\n                  return (\r\n                      <Grid md={4} xs={4}>\r\n                        <div>\r\n                          <img src={val?.web} alt=\"Second Image\" width={\"90%\"} />\r\n                        </div>\r\n                      </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Third Image</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.blogInnerImage}>\r\n                    <img src={blogs?.third_Image?.image} alt=\"Third Image\" />\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_1</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_1}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_2</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_2}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_3</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_3}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>End Text</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.end_Text}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.alignText}>\r\n                    <Typography>Align</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.third_Image?.align}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addBlogsOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add Blog Page Details</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          ></div>\r\n          <div className={classes.textFields}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"header\"\r\n              label=\"Header\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.header}\r\n              name=\"header\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Header Bottom Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeheaderBottom}\r\n                parentState={blogState.header_Bottom}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"outlined-multiline-flexible\"\r\n              label=\"Heading Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState.heading}\r\n              name=\"heading\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.content}\r\n              name=\"content\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Date Picker :</Typography>\r\n              </div>\r\n              <div className={classes.datePicker}>\r\n                <DatePickerComp onChange={handleDate} value={blogState?.date} />\r\n                {console.log(blogState?.date, \"ll\")}\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"bottomText\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.bottomText}\r\n              name=\"bottomText\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_1 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_1}\r\n                parentState={blogState.description_1}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_2 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_2}\r\n                parentState={blogState.description_2}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_3 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_3}\r\n                parentState={blogState.description_3}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"end_Text\"\r\n              label=\"End Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.end_Text}\r\n              name=\"end_Text\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <Autocomplete\r\n              value={blogState?.third_Image?.align}\r\n              onChange={(event, newValue) => {\r\n                setBlogState({\r\n                  ...blogState,\r\n                  third_Image: { ...blogState.third_Image, align: newValue },\r\n                });\r\n              }}\r\n              id=\"controllable-states-demo\"\r\n              options={options}\r\n              sx={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Third Image Align Position\"\r\n                  required\r\n                  margin=\"dense\"\r\n                />\r\n              )}\r\n            />\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    First Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={5} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file2\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"banners\")}\r\n                />\r\n                <label htmlFor=\"button-file2\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Second Banner Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.second_Image?.banners.length > 0 && blogState?.second_Image?.banners?.map((img,index) => {\r\n                    return (\r\n                      <Grid item style={{position:\"relative\"}}>\r\n                      <div style={{position:\"absolute\",width:\"150px\"}}>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                          <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            id={`button-file-edit${index}`}\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={(e) => {handleChange(e.target.files[0],\"editBanners\",index)}}\r\n                          />\r\n                          <label htmlFor={`button-file-edit${index}`}>\r\n                            <Edit style={{fontSize:\"12px\",color:\"#fff\",backgroundColor:\"#000\",cursor:\"pointer\"}} />\r\n                          </label>\r\n                          <div style={{backgroundColor:\"#000\"}}>\r\n                            <Delete style={{fontSize:\"12px\",color:\"#fff\",cursor:\"pointer\"}} onClick={() => handleDeleteBanner(index)} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={img?.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                      </Grid>\r\n                    );\r\n                  }\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file3\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"third_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-file3\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Third Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.third_Image?.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState?.third_Image?.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <div\r\n              className={classes.dialogHeader}\r\n              style={{ justifyContent: \"center\" }}\r\n              // onClick={addStoreDetails}\r\n            >\r\n              {/* <Button variant=\"contained\" color=\"primary\">\r\n                  Add Blog Details\r\n                </Button> */}\r\n            </div>\r\n          </div>\r\n          {/* )} */}\r\n          {/* <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Blogs Page Added\r\n          </Typography>\r\n          <TableComp\r\n            header={blogHeader}\r\n            // tableData={tableStoreData}\r\n            // data={state?.blogs}\r\n            // handleEdit={handleStoresEdit}\r\n            // handleDelete={handleDeleteStore}\r\n          /> */}\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BlogPageCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Description\",\r\n  \"Customer Care\",\r\n  \"Whats App\",\r\n  \"Email\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"customer_Care\" },\r\n  { type: \"TEXT\", name: \"whatsApp\" },\r\n  { type: \"TEXT\", name: \"email\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst ContactUsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    customer_Care: \"\",\r\n    whatsApp: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.customer_Care &&\r\n      state.whatsApp &&\r\n      state.email\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Contact Us Component\"}\r\n        handleAddNew={handleClickOpen}\r\n        noAddNew\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Advertisement Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"customer_Care\"\r\n            label=\"Customer Care\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.customer_Care}\r\n            onChange={onChangeData}\r\n            name=\"customer_Care\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"whatsApp\"\r\n            label=\"WhatsApp\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.whatsApp}\r\n            onChange={onChangeData}\r\n            name=\"whatsApp\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Id\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.email}\r\n            onChange={onChangeData}\r\n            name=\"email\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ContactUsCMS;\r\n","import React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Banner Image\",\r\n    \"Content\",\r\n    \"Title\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TempleBannerCMS = (props) => {\r\n    const { data } = props\r\n\r\n    console.log(data?.props?.banners, \"data?.props?.banner\")\r\n    const classes = useStyles();\r\n    const initialState = {\r\n        img: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n    };\r\n    const initialEdit = {\r\n        isEdit: false,\r\n        editIndex: null,\r\n    };\r\n    const alert = useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [state, setState] = React.useState(initialState);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    };\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.img &&\r\n            state.title &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                debugger\r\n                const values = data?.props?.banners;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                 getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        banners: values\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"TempleWorkBannerComponent\", \"banners\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        banners: [...data?.props.banners, state],\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                props.handleSubmit(getData, \"TempleWorkBannerComponent\", \"banners\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Temple Work Banner Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.banners}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog open={open} onClose={handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"content\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                            required\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"space-around\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-files\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                                />\r\n                                <label htmlFor=\"button-files\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >Image\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {state.img.length > 0 && (\r\n                            <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.img}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\nexport default TempleBannerCMS;","import React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Products\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"ARR_TEXT\", name: \"sectionOne\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TempleFooterCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const classes = useStyles();\r\n  const initialData = {\r\n    title: \"\",\r\n    sectionOne: [],\r\n  };\r\n  const initialStateRow = {\r\n    products: \"\",\r\n    location: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialData);\r\n  const [stateRow, setStateRow] = React.useState(initialStateRow);\r\n  // const [resState, setResState] = React.useState([]);\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  // React.useEffect(() => {\r\n  //     setResState(props?.data?.content)\r\n  // }, [])\r\n  console.log(props.data.props.content, \"[props?.data?.content]\");\r\n\r\n  const handleChange = (key, val, i, parentKey) => {\r\n    // debugger\r\n    let tempState = state;\r\n    tempState[parentKey][i][key] = val;\r\n    setState({ ...tempState });\r\n  };\r\n\r\n  const updateState = (key, value) => {\r\n    // debugger\r\n    setState({ ...state, [key]: value });\r\n  };\r\n\r\n  const handleDeleteItem = (val, i, data1) => {\r\n    const delRow = [...state?.sectionOne];\r\n    delRow.splice(i, 1);\r\n    setState({ ...state, sectionOne: delRow });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    // debugger\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState({\r\n      ...state,\r\n      title: rowData?.title,\r\n      sectionOne: rowData?.sectionOne,\r\n    });\r\n  };\r\n\r\n  const addItems = () => {\r\n    const data = [...state?.sectionOne, stateRow];\r\n    updateState(\"sectionOne\", data);\r\n    setStateRow(initialStateRow);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialData);\r\n    setStateRow(initialStateRow);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setEditData({ ...editData, isEdit: false });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleAddItem = (key, value) => {\r\n    setStateRow({ ...stateRow, [key]: value });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.title && state.sectionOne) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate) {\r\n      if (editData.isEdit) {\r\n        debugger;\r\n        const values = data?.props?.content;\r\n        values.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            content: values,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialData);\r\n        setEditData(initialEdit);\r\n        console.log(getData, \"lll\");\r\n        props.handleSubmit(getData, \"FooterComponent\", \"content\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            content: [...data?.props, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialData);\r\n        props.handleSubmit(getData, \"FooterComponent\", \"content\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Temple Work Footer Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props?.content}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Foot Item</DialogTitle>\r\n          <DialogContent>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Grid Item xs={12}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"title\"\r\n                  label=\"title\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(e) => updateState(\"title\", e.target.value)}\r\n                  value={state.title}\r\n                  name=\"title\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid Item xs={5}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"products\"\r\n                  label=\"Products\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows={3}\r\n                  onChange={(val) =>\r\n                    handleAddItem(\"products\", val.target.value)\r\n                  }\r\n                  value={stateRow?.products}\r\n                  name=\"products\"\r\n                />\r\n              </Grid>\r\n              <Grid Item xs={5}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"location\"\r\n                  label=\"Location\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  rows={3}\r\n                  onChange={(val) =>\r\n                    handleAddItem(\"location\", val.target.value)\r\n                  }\r\n                  value={stateRow?.location}\r\n                  name=\"location\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                Item\r\n                xs={1}\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" onClick={addItems}>\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            {state?.sectionOne?.length > 0 &&\r\n              state?.sectionOne?.map((e, i) => {\r\n                return (\r\n                  <Grid\r\n                    container\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid Item xs={5}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"products\"\r\n                        label=\"Products\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        rows={3}\r\n                        onChange={(val) =>\r\n                          handleChange(\r\n                            \"products\",\r\n                            val.target.value,\r\n                            i,\r\n                            \"sectionOne\"\r\n                          )\r\n                        }\r\n                        value={e?.products}\r\n                        name=\"products\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid Item xs={5}>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"location\"\r\n                        label=\"Location\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        rows={3}\r\n                        onChange={(val) =>\r\n                          handleChange(\r\n                            \"location\",\r\n                            val.target.value,\r\n                            i,\r\n                            \"sectionOne\"\r\n                          )\r\n                        }\r\n                        value={e?.location}\r\n                        name=\"location\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      Item\r\n                      xs={1}\r\n                      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                      <DeleteIcon\r\n                        onClick={(val) => handleDeleteItem(val, i, state)}\r\n                        style={{ color: \"red\", cursor: \"pointer\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default TempleFooterCMS;\r\n","import React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Images\", \"Description\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"ARR_IMAGE\", name: \"images\" },\r\n  { type: \"DETAILED_ARR\", name: \"content\" },\r\n  // { type: \"VIEW_STORES\", name: \"\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  images: [],\r\n  content: [\r\n    {\r\n      title: \"\",\r\n      subtitle: \"\",\r\n      weigh: \"\",\r\n      ContentOne: \"\",\r\n      about: \"\",\r\n      contentTwo: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n\r\nconst TempleCardDetailComp = (props) => {\r\n  const { data } = props;\r\n\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [viewData, setviewData] = React.useState([]);\r\n  const [constructedData, setConstructedData] = React.useState(initialState);\r\n\r\n  // React.useEffect(() => {\r\n  //   let setData = { ...constructedData };\r\n  //   setData.content = data?.props?.detailData?.content;\r\n  //   setData.images = data?.props?.detailData?.images;\r\n\r\n  //   setConstructedData(setData);\r\n\r\n  //   setviewData([setData]);\r\n  // }, [data.props]);\r\n\r\n  const handleChangeTitle = (data) => {\r\n    onChangeData(\"title\", data, \"content\");\r\n  };\r\n  const handleChangeAbout = (data) => {\r\n    onChangeData(\"about\", data, \"content\");\r\n  };\r\n\r\n  const onChangeData = (key, val, parentKey) => {\r\n    let tempState = constructedData;\r\n    tempState[parentKey][0][key] = val;\r\n    console.log(tempState);\r\n    setConstructedData({ ...tempState });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setConstructedData({\r\n            ...constructedData,\r\n            images: [...constructedData?.images, res?.data?.web],\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditData(initialEdit);\r\n    setConstructedData(initialState);\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setConstructedData(rowData);\r\n  };\r\n  const handleViewStores = (e, data, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: false, isView: true });\r\n    setviewData(data);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (constructedData.content && constructedData.images) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate) {\r\n      // let getData = [];\r\n\r\n      let getData = {\r\n        component: props?.data?.component,\r\n        props: {\r\n          detailData: constructedData,\r\n        },\r\n      };\r\n      setOpen(false);\r\n      setEditData(initialEdit);\r\n      setConstructedData(initialState);\r\n      props.handleSubmit(getData, \"TempleCardDetailsComponent\", \"detailData\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleDeleteItem = (val, i, data1) => {\r\n  //     const delRow = [...constructedData?.images]\r\n  //     delRow.splice(i, 1);\r\n  //     setConstructedData({ ...constructedData, images: delRow })\r\n\r\n  // }\r\n  console.log(Array.isArray(viewData), \"viewData\");\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Card Details Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={[data?.props?.detailData]}\r\n          handleEdit={handleEdit}\r\n          handleViewStores={handleViewStores}\r\n        />\r\n        <>\r\n          {editData?.isView && (\r\n            <Dialog open={open} onClose={handleClose}>\r\n              <DialogTitle id=\"form-dialog-title\"> Card Details</DialogTitle>\r\n              <DialogContent>\r\n                <>\r\n                  {[viewData]?.map((val) => {\r\n                    return (\r\n                      <>\r\n                        {val?.images?.map((e) => {\r\n                          return (\r\n                            <Grid\r\n                              style={{ textAlign: \"center\" }}\r\n                              xs={6}\r\n                              md={6}\r\n                              item\r\n                            >\r\n                              <img\r\n                                alt=\"nacimages\"\r\n                                src={e}\r\n                                style={{ width: \"100px\", height: \"auto\" }}\r\n                              />\r\n                            </Grid>\r\n                          );\r\n                        })}\r\n                        {val?.content?.map((e) => {\r\n                          return (\r\n                            <>\r\n                              <Typography>{e?.title}</Typography>\r\n                              <Typography>{e?.subtitle}</Typography>\r\n                              <Typography>{e?.weigh}</Typography>\r\n                              <Typography>{e?.ContentOne}</Typography>\r\n                              <Typography>{e?.about}</Typography>\r\n                              <Typography>{e?.contentTwo}</Typography>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    );\r\n                  })}\r\n                </>\r\n              </DialogContent>\r\n            </Dialog>\r\n          )}\r\n          {editData?.isEdit && (\r\n            <Dialog open={open} onClose={handleClose}>\r\n              <DialogTitle id=\"form-dialog-title\">\r\n                Add New Card Item\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                {constructedData.content.map((e) => {\r\n                  return (\r\n                    <>\r\n                      <EditorConvertToHTML\r\n                        handleChangeState={handleChangeTitle}\r\n                        parentState={e.title}\r\n                      />\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"weigh\"\r\n                        label=\"Weight\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          onChangeData(\"weigh\", val.target.value, \"content\")\r\n                        }\r\n                        value={e.weigh}\r\n                        name=\"weigh\"\r\n                        required\r\n                      />\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"subtitle\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          onChangeData(\"subtitle\", val.target.value, \"content\")\r\n                        }\r\n                        value={e.subtitle}\r\n                        name=\"subtitle\"\r\n                        required\r\n                      />\r\n                      {/* <TextField\r\n                        margin=\"dense\"\r\n                        id=\"ContentOne\"\r\n                        label=\"Content One\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          onChangeData(\r\n                            \"ContentOne\",\r\n                            val.target.value,\r\n                            \"content\"\r\n                          )\r\n                        }\r\n                        value={e.ContentOne}\r\n                        name=\"ContentOne\"\r\n                        required\r\n                      /> */}\r\n                      <EditorConvertToHTML\r\n                        handleChangeState={handleChangeAbout}\r\n                        parentState={e.about}\r\n                      />\r\n                      {/* <TextField\r\n                        margin=\"dense\"\r\n                        id=\"contentTwo\"\r\n                        label=\"Content Two\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          onChangeData(\r\n                            \"contentTwo\",\r\n                            val.target.value,\r\n                            \"content\"\r\n                          )\r\n                        }\r\n                        value={e.contentTwo}\r\n                        name=\"contentTwo\"\r\n                        required\r\n                      /> */}\r\n                    </>\r\n                  );\r\n                })}\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"space-around\"\r\n                  style={{ padding: \"16px 0px\" }}\r\n                >\r\n                  <Grid item>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      style={{ display: \"none\" }}\r\n                      id=\"button-files\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                    />\r\n                    <label htmlFor=\"button-files\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        component=\"span\"\r\n                        startIcon={<CloudUploadIcon />}\r\n                      >\r\n                        Image\r\n                      </Button>\r\n                    </label>\r\n                  </Grid>\r\n                </Grid>\r\n                {constructedData.images.length > 0 &&\r\n                  constructedData.images.map((e, i) => {\r\n                    return (\r\n                      <>\r\n                        <Grid\r\n                          style={{ textAlign: \"center\" }}\r\n                          xs={6}\r\n                          md={6}\r\n                          item\r\n                        >\r\n                          <img\r\n                            alt=\"nacimages\"\r\n                            src={e}\r\n                            style={{ width: \"100px\", height: \"auto\" }}\r\n                          />\r\n                        </Grid>\r\n                        {/* <Grid Item xs={1}\r\n                                                style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                <DeleteIcon onClick={(val) => handleDeleteItem(val, i, state)}\r\n                                                    style={{ color: \"red\", cursor: \"pointer\" }} />\r\n                                            </Grid> */}\r\n                      </>\r\n                    );\r\n                  })}\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={onsubmitvalue}>Add</Button>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          )}\r\n        </>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default TempleCardDetailComp;\r\n","\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Image\",\r\n    \"Title\",\r\n    \"Details\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst TempleCardComponent = (props) => {\r\n    const { data } = props\r\n\r\n    console.log(data?.props?.detailData, \"data?.props?.CardData\")\r\n    const classes = useStyles();\r\n    const initialState = {\r\n        img: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n    };\r\n    const initialEdit = {\r\n        isEdit: false,\r\n        editIndex: null,\r\n    };\r\n    const alert = useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [state, setState] = React.useState(initialState);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    };\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.img &&\r\n            state.title &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                debugger\r\n                const values = data?.props?.CardData;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        CardData: values\r\n                    }\r\n                };\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"TempleCardComponent\", \"CardData\");\r\n                setOpen(false);\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        CardData: [...data?.props.CardData, state],\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                props.handleSubmit(getData, \"TempleCardComponent\", \"CardData\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        debugger\r\n        let getData = [];\r\n        const content = data?.props?.CardData;\r\n        content.splice(rowIndex, 1);\r\n        getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n                CardData: content,\r\n            },\r\n        };\r\n        props.handleSubmit(getData, \"TempleCardComponent\", \"CardData\");\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Temple Card Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.CardData}\r\n                    handleEdit={handleEdit}\r\n                    handleDelete={handleDelete}\r\n                />\r\n                <Dialog open={open} onClose={handleClose}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"content\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                            required\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"space-around\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-files\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                                />\r\n                                <label htmlFor=\"button-files\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >Image\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {state.img.length > 0 && (\r\n                            <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.img}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\nexport default TempleCardComponent;","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport BannerCMS from \"./components/bannerCMS\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../config\";\r\nimport { CDNPAGES, CMS_UPDATE, CREATE_CMS } from \"../../graphql/cmsQuery\";\r\nimport StoreLocatorCMS from \"./components/storeLocatorCMS\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AlertContext } from \"../../context\";\r\nimport TitleDescriptionCMS from \"./components/titleDescriptionCMS\";\r\nimport QueryFormCMS from \"./components/queryFormCMS\";\r\nimport SlidingImageCardCMS from \"./components/slidingImageCardCMS\";\r\nimport CustomCareerBannerCMS from \"./components/customCareerBannerCMS\";\r\nimport CustomCareerCardCMS from \"./components/customCareerCardCMS\";\r\nimport CustomCollectionHeaderCMS from \"./components/customCollectionHeaderCMS\";\r\nimport CustomCollectionCardsCMS from \"./components/customCollectionCardsCMS\";\r\nimport CustomNewsCMS from \"./components/customNewsCMS\";\r\nimport SpclTitleDescr from \"./components/spclTitleDescrCMS\";\r\nimport BookYourAppointmentCMS from \"./components/bookYourAppointmentCMS\";\r\nimport TestimonialCMS from \"./components/testimonialCMS\";\r\nimport AboutCollection from \"./components/aboutCollectionCMS\";\r\nimport TitleComp from \"./components/titleCompCMS\";\r\nimport TitleWithDescription from \"./components/titleWithDescription\";\r\nimport CustomAdvertisementCMS from \"./components/customAdvertisementCMS\";\r\nimport SiteMapCMS from \"./components/siteMapCMS\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExperienceBannerCMS from \"./components/experienceBannerCMS\";\r\nimport ExperienceCardCMS from \"./components/experienceCardCMS\";\r\nimport ExperienceTableCardCMS from \"./components/experienceTableCards\";\r\nimport StoreLocatorDetailsCMS from \"./components/storeLocatorDetailsCMS\";\r\nimport BlogPageCMS from \"./components/blogPageCMS\";\r\nimport ContactUsCMS from \"./components/contactUsCMS\";\r\nimport TempleBannerCMS from \"./components/TempleBannerCMS\";\r\nimport TempleFooterCMS from \"./components/templeFooterCMS\";\r\nimport TempleCardDetailComp from \"./components/TempleCardDetailComponent\";\r\nimport TempleCardComponent from \"./components/TempleCardComponent\";\r\nimport TempleProducts from \"./components/templeProducts\";\r\n\r\nconst CmsComponent = (props) => {\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const location = useLocation();\r\n  const [state, setState] = useState([]);\r\n  const [cloneDialog, setCloneDialog] = useState(false);\r\n  const [cloneState, setCloneState] = useState({\r\n    page: null,\r\n  });\r\n  console.log(\"state\", state);\r\n  console.log(\"cloneState\", cloneState);\r\n\r\n  useEffect(() => {\r\n    fetchCall();\r\n  }, []);\r\n\r\n  const handleClone = () => {\r\n    console.log(\"handleClone\", state);\r\n    setCloneDialog(true);\r\n  };\r\n\r\n  const handleCloneSumbit = () => {\r\n    if (cloneState.page) {\r\n      const cloneData = JSON.stringify(state);\r\n      const pageName = cloneState.page;\r\n      fetch(`${API_URL}/graphql`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: CREATE_CMS,\r\n          variables: {\r\n            cloneData: cloneData,\r\n            page: pageName,\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(\"catch data\",data);\r\n          if(data?.errors?.length > 0){\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Something went wrong. Please provide a unique route\",\r\n              severity:\"error\"\r\n            });\r\n          }else{\r\n            handleCloneDialogClose()\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Page Created Successfully\",\r\n            });   \r\n          }\r\n          \r\n        })\r\n        .catch((err) => {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Something went wrong\",\r\n            severity:\"error\"\r\n          });\r\n        });\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        msg: \"Please enter the page Route\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloneDialogClose = () => {\r\n    setCloneDialog(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCloneState({\r\n      ...cloneState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const fetchCall = () => {\r\n    const pageName = location?.state?.name;\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CDNPAGES,\r\n        variables: { page: pageName },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = JSON.parse(data?.data?.cdnByPage?.data);\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (data, component, propsKey) => {\r\n    const replaceIndex = state.findIndex((val) => val.component === component);\r\n    const newState = state;\r\n    newState.splice(replaceIndex, 1, data);\r\n    const stringifyState = JSON.stringify(newState);\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMS_UPDATE,\r\n        variables: {\r\n          stringifyState: stringifyState,\r\n          page: location.state.name,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Successfully Updated!\",\r\n        });\r\n        const newStateSet = JSON.parse(JSON.stringify(newState));\r\n        setState(newStateSet);\r\n        fetchCall();\r\n      });\r\n  };\r\n\r\n  const getTheTable = (val) => {\r\n    console.log(\"val000\", val);\r\n    switch (val?.component) {\r\n      case \"BannerComponent\": {\r\n        return <BannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Storelocator\": {\r\n        return <StoreLocatorCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndData\": {\r\n        return <TitleDescriptionCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"QueryForm\": {\r\n        return <QueryFormCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SlideImgMediaCard\": {\r\n\r\n        return <SlidingImageCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomBanner\": {\r\n        return <CustomCareerBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CareerCard\": {\r\n        return <CustomCareerCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CollectionHeader\": {\r\n        return (\r\n          <CustomCollectionHeaderCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CollectionCards\": {\r\n        return (\r\n          <CustomCollectionCardsCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CustomNews\": {\r\n        return <CustomNewsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SpclTitleDescr\": {\r\n        return <SpclTitleDescr data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"AboutBookAppointment\": {\r\n        return (\r\n          <BookYourAppointmentCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"titleComp\": {\r\n        return <TitleComp data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Testimonial\": {\r\n        return <TestimonialCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TestimonialTwo\": {\r\n        return <AboutCollection data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndDescription\": {\r\n        return <TitleWithDescription data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomAdvertising\": {\r\n        return (\r\n          <CustomAdvertisementCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"siteMap\": {\r\n        return (\r\n\r\n          <SiteMapCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"ExperienceCard\": {\r\n        return <ExperienceCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceBanner\": {\r\n        return <ExperienceBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceCard\": {\r\n        return <ExperienceTableCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      \r\n      case \"blogPageCard\": {\r\n        return <BlogPageCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StoreDetailsComponent\": {\r\n        return (\r\n          <StoreLocatorDetailsCMS data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n      case \"formContent\": {\r\n        return <ContactUsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n\r\n      case \"TempleWorkBannerComponent\": {\r\n        return (\r\n          <TempleBannerCMS data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n\r\n      case \"FooterComponent\": {\r\n        return (\r\n          <TempleFooterCMS data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n\r\n      case \"TempleCardDetailsComponent\": {\r\n        return (\r\n          <TempleCardDetailComp data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n\r\n      case \"TempleCardComponent\": {\r\n        return (\r\n          <TempleCardComponent data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n      default: {\r\n        return <h1></h1>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid>\r\n          <Button variant=\"contained\" onClick={handleClone} color=\"primary\">\r\n            Clone\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {state.map((val, i) => {\r\n        return getTheTable(val);\r\n      })\r\n      }\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={cloneDialog}\r\n        onClose={handleCloneDialogClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Clone the current page</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={cloneState.page}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloneSumbit}>Clone Data</Button>\r\n          <Button onClick={handleCloneDialogClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default CmsComponent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CircularProgressWithLabel;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  FETCH_COMBO_OFFERED_PRODUCTS,\r\n  GET_UNIQUE_PRODUCT,\r\n  LIST_COMBO_PRODUCTS,\r\n  UPDATE_COMBO_BY_MAIN_PRODUCT,\r\n} from \"../../graphql/query\";\r\nimport { API_URL, BASE_IMAGE_URL } from \"../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { AlertContext } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CircularProgressWithLabel from \"../../components/CircularProgress\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  comboCard: {\r\n    padding: \"10px\",\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  image: {\r\n    height: 230,\r\n    width: 165,\r\n  },\r\n  productName: {\r\n    fontSize: \"1em\",\r\n  },\r\n  alignCardTypo: {\r\n    paddingTop: \"6px\",\r\n  },\r\n  details: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: 600,\r\n  },\r\n  alignItems: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst InduvidualProductCard = (props) => {\r\n  const classes = useStyles();\r\n  let source = props?.productListByMainProduct ?? props;\r\n  let productId = props?.mainProduct ?? source?.productId;\r\n  return (\r\n    <Card className={classes.image}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt={productId}\r\n        image={source?.productImagesByProductId?.nodes?.[0]?.imageUrl}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.productName}\r\n        >\r\n          {source?.productName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ComboCard = (props) => {\r\n  const classes = useStyles();\r\n  let { offeredProducts } = props;\r\n  if (offeredProducts.length < 2) {\r\n    offeredProducts = offeredProducts;\r\n  }\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    FETCH_COMBO_OFFERED_PRODUCTS,\r\n    { variables: { offeredProducts } }\r\n  );\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Typography style={{ fontWeight: 600 }}>Main Product</Typography>\r\n        <InduvidualProductCard {...props} />\r\n        <Typography className={classes.alignCardTypo}>\r\n          Product Id :{\" \"}\r\n          <span className={classes.details}>{props?.mainProduct}</span>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid>{\"+\"}</Grid>\r\n      {!loading &&\r\n        data &&\r\n        data.allProductLists.nodes.map((product, index) => (\r\n          <>\r\n            <Grid key={product.id} item>\r\n              <Typography>Combo Product{index + 1}</Typography>\r\n              <InduvidualProductCard {...product} />\r\n              <Typography className={classes.alignCardTypo}>\r\n                Product Id :{\" \"}\r\n                <span className={classes.details}>{product?.productId}</span>\r\n              </Typography>\r\n            </Grid>\r\n            {index + 1 < data.allProductLists.nodes.length && (\r\n              <Grid>{\"+\"}</Grid>\r\n            )}\r\n          </>\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ComboOfferConfig = (props) => {\r\n  const initialState = {\r\n    offeredProducts: [],\r\n    discountType: \"\",\r\n    discountValue: 0,\r\n    mainProduct: \"\",\r\n    isActive: true,\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [editState, setEditState] = useState(initialState);\r\n  const [offerError, setOfferError] = React.useState({});\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"combo_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: \"info\",\r\n          msg: `Process Completed`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleComboForm = (product) => {\r\n    setEditState({\r\n      ...editState,\r\n      offeredProducts: product?.offeredProducts,\r\n      discountType: product?.discountType,\r\n      discountValue: product?.discountValue,\r\n      mainProduct: product?.mainProduct,\r\n      isActive: product?.isActive,\r\n    });\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const chipAdd = (chipValue) => {\r\n    client\r\n      .query({ query: GET_UNIQUE_PRODUCT, variables: { productId: chipValue } })\r\n      .then(({ data }) => {\r\n        if (data?.product) {\r\n          setEditState({\r\n            ...editState,\r\n            offeredProducts: [...editState.offeredProducts, chipValue],\r\n          });\r\n        } else {\r\n          setOfferError({\r\n            ...offerError,\r\n            offeredProducts: `${chipValue} is not a valid product!`,\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const chipDelete = (_chip, index) => {\r\n    let { offeredProducts } = editState;\r\n    offeredProducts.splice(index, 1);\r\n    setEditState({\r\n      ...editState,\r\n      offeredProducts,\r\n    });\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    if (name == \"discountValue\") value = Number(value);\r\n    setEditState({\r\n      ...editState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditState(initialState);\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const validate = () => {\r\n    const validationField = [\r\n      \"offeredProducts\",\r\n      \"discountType\",\r\n      \"discountValue\",\r\n      \"mainProduct\",\r\n    ];\r\n    let error = [];\r\n    validationField.forEach((val) => {\r\n      if (Array.isArray(editState[val]) && editState[val].length <= 1) {\r\n        error.push(true);\r\n      }\r\n      if (editState[val] !== null && editState[val] !== \"\") {\r\n        error.push(true);\r\n      } else {\r\n        error.push(false);\r\n      }\r\n    });\r\n    if (error.includes(false)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validate()) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_COMBO_BY_MAIN_PRODUCT,\r\n          variables: editState,\r\n        })\r\n        .then(() => {\r\n          refetch();\r\n          setOpenForm(false);\r\n        })\r\n        .catch(console.log);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: `Please fill all the fields`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { loading, data, error, refetch, networkStatus } =\r\n    useQuery(LIST_COMBO_PRODUCTS);\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    axios\r\n      .post(API_URL + \"/bulk_upload_combo\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          setProgress(1);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res?.data?.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Grid item xs={8}>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Search by Product ID or Product Name\"\r\n          label=\"Search\"\r\n        />\r\n      </Grid>\r\n      <Grid>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = `https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_combo.csv`;\r\n            a.setAttribute(\"download\", \"sample_combo.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      {progress == 0 && (\r\n        <Grid item xs={2}>\r\n          <input\r\n            accept=\".csv\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              const files = event.target.files;\r\n              if (files) {\r\n                handleUpload(files[0]);\r\n              }\r\n            }}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<CloudUploadIcon />}\r\n              component=\"span\"\r\n            >\r\n              Upload Combo Offers\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n      )}\r\n      {progress > 0 && (\r\n        <Grid item xs={2}>\r\n          <CircularProgressWithLabel value={progress} />\r\n        </Grid>\r\n      )}\r\n      {!loading &&\r\n        data &&\r\n        data.allProductComboOffers.nodes.map((products) => (\r\n          <Grid key={products.id} component={Paper}>\r\n            <div className={classes.comboCard}>\r\n              <ComboCard {...products} />\r\n            </div>\r\n            <div\r\n              className={classes.alignItems}\r\n              style={{ padding: \"0px 10px\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div>\r\n                <Typography>\r\n                  Discount Type :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.discountType}\r\n                  </span>\r\n                </Typography>\r\n                <Typography>\r\n                  Discount Value :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.discountValue}\r\n                  </span>\r\n                </Typography>\r\n                <Typography>\r\n                  Combo Status :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.isActive ? \"Active\" : \"In-Active\"}\r\n                  </span>\r\n                </Typography>\r\n              </div>\r\n              <Button\r\n                onClick={() => handleComboForm(products)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      <Dialog\r\n        open={openForm}\r\n        onClose={() => handleClose()}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Edit Combo Offer</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              className={classes.alignItems}\r\n              style={{ marginBottom: \"18px\" }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Main Product\"\r\n                size=\"small\"\r\n                defaultValue=\"Hello World\"\r\n                variant=\"outlined\"\r\n                disabled={true}\r\n                name=\"mainProduct\"\r\n                value={editState?.mainProduct}\r\n              ></TextField>\r\n              <FormControlLabel\r\n                style={{ margin: \"5px\" }}\r\n                control={\r\n                  <Switch\r\n                    checked={editState.isActive}\r\n                    onChange={({ target }) => {\r\n                      setEditState({\r\n                        ...editState,\r\n                        isActive: target.checked,\r\n                      });\r\n                    }}\r\n                  />\r\n                }\r\n                label={\"Active\"}\r\n              />\r\n            </div>\r\n            <Grid container spacing={2} style={{ marginBottom: \"18px\" }}>\r\n              <Grid item xs={12}>\r\n                <ChipInput\r\n                  value={editState?.offeredProducts}\r\n                  onAdd={chipAdd}\r\n                  onDelete={chipDelete}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label={\"Offered Products\"}\r\n                  error={Boolean(offerError?.offeredProducts)}\r\n                  helperText={offerError?.offeredProducts}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} style={{ marginBottom: \"18px\" }}>\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={[\"FLAT\", \"PERCENTAGE\"]}\r\n                  getOptionLabel={(option) => option}\r\n                  value={editState?.discountType}\r\n                  onChange={(event, newValue) => {\r\n                    setEditState({\r\n                      ...editState,\r\n                      discountType: newValue,\r\n                    });\r\n                  }}\r\n                  size=\"small\"\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      size=\"small\"\r\n                      {...params}\r\n                      label=\"Combo box\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"outlined-required\"\r\n                  size=\"small\"\r\n                  label=\"Discount Value\"\r\n                  defaultValue=\"Hello World\"\r\n                  variant=\"outlined\"\r\n                  name=\"discountValue\"\r\n                  onChange={(e) =>\r\n                    handleChange(\"discountValue\", e.target.value)\r\n                  }\r\n                  value={editState?.discountValue}\r\n                ></TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleSubmit()} color=\"primary\" autoFocus>\r\n            Sumbit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"17px\",\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h2\r\n          className=\"products\"\r\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\r\n        >\r\n          Products\r\n        </h2>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        lassName=\"column\"\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n          <Button\r\n            className=\"product\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns columnclose={handleClose} />\r\n          </Popover>\r\n        </Grid>\r\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n          <Button\r\n            id=\"create\"\r\n            className=\"product\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n          >\r\n            CREATE PRODUCT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  cardButton: {\r\n    textAlign: \"center\",\r\n    margin: \"8px 0px\",\r\n    textTransform: \"capitalize\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"8px\",\r\n    color: \"#fff\",\r\n  },\r\n  labelAlign: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: \"4px\",\r\n  },\r\n  edit:{\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    gap: \"4px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"400px\",\r\n  },\r\n}));\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { ALLCDNPAGES, UPDATE_STATUS_CMS, UPDATE_URL } from \"../../graphql/cmsQuery\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst CmsHome = (props) => {\r\n  let history = useHistory();\r\n  const snack = React.useContext(AlertContext);\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState([]);\r\n  const [edit, setEdit] = useState({\r\n    open: false,\r\n    page: \"\",\r\n  });\r\n  console.log(\"edit\",edit);\r\n  const [newPage, setNewPage] = useState(\"\");\r\n\r\n  console.log(\"fetchedPages\", state);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }, []);\r\n\r\n  // Chnage the name of the new UrL\r\n  const handleChangeData = (value) => {\r\n    setNewPage(value);\r\n  };\r\n\r\n  // Load the particular page \r\n  const handleClick = (name) => {\r\n    history.push({\r\n      pathname: \"/cmsComponent\",\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Fetch the initial data\r\n  const fetchData = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  // Open the Edit page \r\n  const handleOpenEdit = (page) => {\r\n    setEdit({\r\n      open: true,\r\n      page:page\r\n    })\r\n  };\r\n\r\n  // Get the Name of the Page\r\n  const getThePageTitle = (name) => {\r\n    let createdName = name.replace(\r\n      /[A-Z]/g,\r\n      (val) => \" \" + `${val.toLowerCase()}`\r\n    );\r\n    if (name === \"loc\") {\r\n      return (createdName = \"Store Locator Details\");\r\n    } else {\r\n      return createdName;\r\n    }\r\n  };\r\n\r\n  // Update the Status\r\n  const handleChangeActive = (page, isActive) => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_STATUS_CMS,\r\n        variables: {\r\n          isActive: !isActive,\r\n          page: page,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Status Updated Successfully\",\r\n        });\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  // Edit the URL\r\n  const handleEditSumbit = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_URL,\r\n        variables: {\r\n          page: edit.page,\r\n          changePage: newPage\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Status Updated Successfully\",\r\n        });\r\n        setEdit({\r\n          open:false,\r\n          page:\"\"\r\n        })\r\n        fetchData();\r\n      });\r\n  }\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          CMS Complete List\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                NAC Banners\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Featured Product\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Customers Reviews\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/newarrival\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                New Arrival\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      {/* cms page */}\r\n      {state.map((val) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <div>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  className={classes.cardButton}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => handleClick(val.page)}\r\n                >\r\n                  {getThePageTitle(val.page)}\r\n                </Typography>\r\n                <div className={classes.labelAlign}>\r\n                  <div className={classes.edit}>\r\n                    <Typography>Is page active:</Typography>\r\n                    <FormControlLabel\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                      control={\r\n                        <Switch\r\n                          checked={val.isActive}\r\n                          onChange={() =>\r\n                            handleChangeActive(val.page, val.isActive)\r\n                          }\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <EditIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => handleOpenEdit(val.page)}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          {/* </Link> */}\r\n        </Grid>\r\n      ))}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={edit.open}\r\n        onClose={() => {\r\n          setEdit({\r\n            open: false,\r\n            page: \"\",\r\n          });\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Change the URL</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => handleChangeData(e.target.value)}\r\n            value={newPage}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditSumbit}>Edit Url</Button>\r\n          <Button\r\n            onClick={() => {\r\n              setEdit({\r\n                open: false,\r\n                page: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CmsHome;\r\n","import React, { useEffect, useState , useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport {\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { AlertContext } from \"../../../../context\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            - Landing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n                        <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image</TableCell>\r\n                <TableCell>Desktop Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.mobile} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverLandingPage;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { APP_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                     \r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        alt=\"nacimages\"\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport {\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\nfunction SpecificListPages(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSPECIFICLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.urlParam &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESPECIFICLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Specific Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Specific Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Banner's Page Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n                   <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL + val.urlParam}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL + val.urlParam}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpecificListPages;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingBottom = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLISTINGBOTTOMBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (createlandingbanner.mobile && createlandingbanner.web) {\r\n      let create_banner_data = {\r\n        position: +\"1\",\r\n        url: \"#\",\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGBOTTOMBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          setOpen(false);\r\n          window.location.reload();\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            web: res?.data?.web,\r\n            mobile: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, web: true, mobile: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Bottom Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Bottom Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            {/* <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            /> */}\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Banner Image</TableCell>\r\n                {/* <TableCell>Desktop Image</TableCell> */}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingBottom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingRoutingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    urlParam : \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLSTYLORISILVERROUTINGPAGE,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allBanners.nodes;\r\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n          setalllandingbanner(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_banner_data = {\r\n      position: +createlandingbanner.position,\r\n      urlParam: createlandingbanner.urlParam,\r\n      mobile: createlandingbanner.mobile,\r\n      web: createlandingbanner.web,\r\n      now: new Date().toISOString(),\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATESTYLORISILVERROUTINGPAGE,\r\n        variables: create_banner_data,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              NAC Listing Routing Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Router Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"mobile\"\r\n              label=\"Mobile Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.mobile}\r\n              name=\"mobile\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"web\"\r\n              label=\"Web Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.web}\r\n              name=\"web\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Router Link</TableCell>\r\n                <TableCell>Mobile URL</TableCell>\r\n                <TableCell>Web URL</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\r\n                      {val.urlParam}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      {val.mobile}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\r\n                      {val.web}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingRoutingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport SilverLandingPage from \"./components/silverlandingpage\";\r\nimport SilverListingPage from \"./components/silverlistingpage\";\r\nimport SpecificListPages from \"./components/specificListPages\";\r\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\r\nimport SilverListingBottom from \"./components/silverbottmpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Silverbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverLandingPage />\r\n      <SilverListingPage />\r\n      <SpecificListPages />\r\n      <SilverListingBottom />\r\n      {/* <SilverListingRoutingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default Silverbanner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SilverListingPage from \"../components/silverlistingpage\";\r\nimport { Breadcrumbs } from \"../../../../components\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverListingPage />\r\n      {/* <SilverListingRoutingPage /> */}\r\n      {/* <SilverLandingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingbanner;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { API_URL } from \"../../config\";\r\nimport { isString } from \"util\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  variantFontSize: {\r\n    fontSize: \".9rem\",\r\n  },\r\n  variantMarginTop: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nexport function CreateVariant(props) {\r\n  const classes = useStyle();\r\n  let prod_id = props.productId;\r\n  let colors = [];\r\n  let purities = [];\r\n  let diamondtypes = [];\r\n  let oldpurity = [];\r\n\r\n  const TOKEN = \"token\";\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\r\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\r\n    colors.push(colorobj.productColor);\r\n  });\r\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\r\n    purities.push(colorobj.purity);\r\n    oldpurity.push(colorobj);\r\n  });\r\n\r\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\r\n    diamondtypes.push(diamondobj.diamondType);\r\n  });\r\n\r\n  const [variant, setVariant] = useState({\r\n    metal_color: [],\r\n    metal_purity: [],\r\n    diamond_color: [],\r\n    diamond_clarity: [],\r\n    variant_diamond_type: [],\r\n    product_images: {},\r\n    size: [],\r\n  });\r\n\r\n  function handleMetalColor(status_data) {\r\n    let color = variant.metal_color;\r\n    color.some((color_data) => color_data.id === status_data.id)\r\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\r\n      : color.push(status_data);\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color,\r\n    });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    let color_arr = [];\r\n    value.map((color, index) => {\r\n      if (\r\n        productCtx.productMetalColor.some(\r\n          (item) => item.productColor === color.productColor\r\n        )\r\n      ) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          metal_color: color.productColor,\r\n        };\r\n        color_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color_arr,\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n  };\r\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    alert(url);\r\n    url = API_URL + url;\r\n    console.info(\"URL\", url, data);\r\n    const method = data ? \"POST\" : \"GET\",\r\n      headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    let resdata = null;\r\n    if (auth) {\r\n      const token = localStorage.getItem(TOKEN);\r\n      if (token) headers[\"auth\"] = token;\r\n      else window.location = \"/\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: isString(data) ? data : JSON.stringify(data),\r\n      headers,\r\n    });\r\n\r\n    if (response.status < 400) {\r\n      resdata = await response.json();\r\n    } else {\r\n      alert(\r\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\r\n      );\r\n    }\r\n    return resdata;\r\n  };\r\n\r\n  const handleMetalPurity = (type) => (event, value) => {\r\n    let purity_arr = [];\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    value.map((color, index) => {\r\n      let color_obj = {\r\n        ...color,\r\n        purity: color.purity,\r\n      };\r\n      purity_arr.push(color_obj);\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: purity_arr,\r\n    });\r\n  };\r\n  // function handleMetalPurity(status_data) {\r\n  //     status_data.metal_weight = \"\";\r\n  //     status_data.error_message = false;\r\n  //     // alert(JSON.stringify(status_data));\r\n  //     let purity = variant.metal_purity;\r\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         metal_purity: purity\r\n  //     })\r\n  // }\r\n  const diamondTypeChange = (type) => (event, value) => {\r\n    let diamondtype_arr = [];\r\n    value.map((color, index) => {\r\n      if (color.label) {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.label,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.diamondType,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      }\r\n\r\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n      //    }else{ let color_obj = {\r\n      //         ...color,\r\n      //         diamondType: color.label\r\n      //     }\r\n      //     diamondtype_arr.push(color_obj)\r\n      //   }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      variant_diamond_type: diamondtype_arr,\r\n    });\r\n    alert(JSON.stringify(value));\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: diamondtype_arr,\r\n    });\r\n  };\r\n\r\n  // function diamondTypeChange(status_data){\r\n  //     let diamond__type = variant.variant_diamond_type;\r\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         variant_diamond_type: diamond__type\r\n  //     })\r\n  // }\r\n\r\n  const sizeChange = (type) => (event, value) => {\r\n    let size_arr = [];\r\n    value.map((color, index) => {\r\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          label: color,\r\n        };\r\n        size_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      size: size_arr,\r\n    });\r\n  };\r\n  // function sizeChange(status_data) {\r\n  //     let variantSize = variant.size;\r\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         size: variantSize\r\n  //     })\r\n\r\n  // }\r\n\r\n  function setMetalWeightInput(e, metalPurityId) {\r\n    // alert(e.target.value)\r\n    let metalWeight = variant.metal_purity;\r\n    metalWeight =\r\n      metalWeight &&\r\n      metalWeight.map((metal_weight, index) => {\r\n        if (metalPurityId === metal_weight.id) {\r\n          metal_weight.metal_weight = e.target.value;\r\n        }\r\n        return metal_weight;\r\n      });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: metalWeight,\r\n    });\r\n  }\r\n  function saveCreateVariant() {\r\n    let createVariant = {\r\n      productId: prod_id,\r\n      productMetalcoloursByProductId: variant.metal_color,\r\n      productPuritiesByProductId: variant.metal_purity,\r\n      productDiamondTypes: variant.variant_diamond_type,\r\n      productSize: variant.size,\r\n      product_images: variant.product_images,\r\n      // productImage:variant.product_images\r\n    };\r\n\r\n    let metal_color_image_length = Object.entries(variant.product_images);\r\n    let metal_purity_weight = false;\r\n    let metal_purity =\r\n      variant.metal_purity &&\r\n      variant.metal_purity.map((metal_weight_check) => {\r\n        if (metal_weight_check.metal_weight === \"\") {\r\n          metal_weight_check.error_message = true;\r\n          metal_purity_weight = true;\r\n        }\r\n        return metal_weight_check;\r\n      });\r\n    variant[\"metal_purity\"] = metal_purity;\r\n    setVariant({\r\n      ...variant,\r\n      variant,\r\n    });\r\n    if (metal_color_image_length.length !== variant.metal_color.length) {\r\n      alert(\"Select Metal Color Images\");\r\n    }\r\n    if (\r\n      (variant.metal_color.length > 0 &&\r\n        variant.metal_color.length === metal_color_image_length.length) ||\r\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\r\n      variant.size.length > 0 ||\r\n      variant.variant_diamond_type.length > 0\r\n    ) {\r\n      let createVariants = productCtx.createVariantList;\r\n      let editVariants = productCtx.editVariants;\r\n      let variants = productCtx.variants;\r\n      let productImages = productCtx.productImages;\r\n      productImages = [...productImages, variant.product_images];\r\n      createVariants.push(createVariant);\r\n      let params = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(createVariant),\r\n      };\r\n    } else {\r\n      alert(\"please fill the Create variant\");\r\n    }\r\n  }\r\n  function backToProductAttribute() {\r\n    props.changeVariant();\r\n  }\r\n  async function uploadimagetoserver(\r\n    bodaydata,\r\n    imageposition,\r\n    imagecolor,\r\n    uploadtype\r\n  ) {\r\n    let prodimages = variant.product_images;\r\n    // if(true)\r\n    // {\r\n    var prodid = prod_id;\r\n    let imagecolourobj = variant.product_images[imagecolor];\r\n    var imagecount = 1;\r\n    if (imagecolourobj) {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        product_id: prodid,\r\n      },\r\n      false\r\n    );\r\n    var returnData =\r\n      responsedata && responsedata.data && responsedata.data.returnData;\r\n    var signedRequest = returnData && returnData.signedRequest;\r\n    var url = returnData && returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData && returnData.filepath;\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (imagecolourobj) {\r\n      const imageobj = {\r\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      if (uploadtype === \"edit\") {\r\n        imagecolourobj[imageposition] = imageobj;\r\n      } else {\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n    } else {\r\n      const imageobj = {\r\n        name: prodid + \"_1\" + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj);\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setVariant({ ...variant, product_images: prodimages });\r\n    // setFiles([])\r\n    // }\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.productColor}\r\n          getOptionDisabled={(option) =>\r\n            colors.indexOf(option.productColor) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductMetalColor}\r\n          options={productCtx.masterData.metalcolour}\r\n          value={productCtx.productMetalColor}\r\n          onChange={handleoptionChange(\"productMetalColor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.productColor}\r\n                {...getTagProps({ index })}\r\n                disabled={colors.indexOf(option.productColor) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Colours\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          margin=\"dense\"\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\r\n          defaultValue={productCtx.oldproductMetalPurity}\r\n          options={productCtx.masterData.metalpurity}\r\n          value={productCtx.productMetalPurity}\r\n          onChange={handleMetalPurity(\"productMetalPurity\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.purity}\r\n                {...getTagProps({ index })}\r\n                disabled={purities.indexOf(option.purity) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        {productCtx.productMetalPurity &&\r\n          productCtx.productMetalPurity.map((metal_purity) => (\r\n            <TextField\r\n              key={metal_purity.id}\r\n              className={classes.helperinput}\r\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={metal_purity.metal_weight}\r\n              id=\"metal_weight\"\r\n              error={metal_purity && metal_purity.error_message}\r\n              name=\"metal_weight\"\r\n              label={`Weight ${metal_purity.purity}`}\r\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n            />\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.label}\r\n          getOptionDisabled={(option) =>\r\n            diamondtypes.indexOf(option.label) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductDiamondTypesArray}\r\n          options={productCtx.masterData.diamondtypes}\r\n          value={\r\n            productCtx.productDiamondTypesArray\r\n              ? productCtx.productDiamondTypesArray\r\n              : []\r\n          }\r\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.diamondType}\r\n                {...getTagProps({ index })}\r\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Diamond Types\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            options={productCtx.productVariantSize}\r\n            value={productCtx.variant_size}\r\n            onChange={sizeChange(\"productSizes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Sizes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n\r\n      {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n\r\n      <Grid container>\r\n        {variant.metal_color === undefined\r\n          ? null\r\n          : variant.metal_color.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.productColor}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) =>\r\n                      new Promise((resolve, reject) => {})\r\n                    }\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={(fileItem) => {\r\n                      // Set currently active file objectsfiles to this.state\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {}}\r\n                    fileRenameFunction={(file) =>\r\n                      new Promise((resolve) => {\r\n                        var prodid = prod_id;\r\n                        let imagecolourobj = variant.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename =\r\n                          prodid +\r\n                          \"_\" +\r\n                          imagecount +\r\n                          value.name.charAt(0) +\r\n                          file.extension;\r\n                        resolve(imagename);\r\n                      })\r\n                    }\r\n                  ></FilePond>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n      {\r\n        <Grid\r\n          container\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => saveCreateVariant()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\nexport default CreateVariant;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  conatainerRow: {\r\n    width: \"300px\",\r\n    color: \"#6f6f6f\",\r\n    display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight: \" 256px\",\r\n    fontSize: \"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"500px\",\r\n      color: \"#6f6f6f\",\r\n      display: \"grid\",\r\n      padding: \"16px 24px\",\r\n      maxHeight: \" 270px\",\r\n      fontSize: \"14px\",\r\n      overflowX: \"visible\",\r\n      overflowY: \"scroll\",\r\n      gridColumnGap: \"20px\",\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Columns(props) {\r\n  const classes = useStyles();\r\n\r\n  const checkboxrow = props.columns;\r\n  const [columns, setColumns] = React.useState({\r\n    listOfValue: checkboxrow,\r\n  });\r\n  const [showcolumns, setshowColumns] = React.useState();\r\n\r\n  function stateChange(id) {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (id === data.id) {\r\n        data.isActive = data.isActive ? false : true;\r\n      }\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function resetButton() {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (!data.disabled) {\r\n        data.isActive = false;\r\n      }\r\n\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function saveaction() {\r\n    // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n    //     if(data.isActive){\r\n    //               }\r\n    //               return data;\r\n\r\n    // })\r\n    let columnnames = [];\r\n    columns.listOfValue.forEach((element) => {\r\n      if (element.isActive) {\r\n        columnnames.push(element);\r\n      }\r\n    });\r\n    props.selectcolumnfilter(columnnames, props.displytype);\r\n    props.columnclose();\r\n  }\r\n  // const lists = columns.listOfValue.map((head) =>\r\n  //     (\r\n  //         <Grid conatiner>\r\n  //             <Grid item xs={4}><Checkbox\r\n  //                 value=\"secondary\"\r\n  //                 color=\"primary\"\r\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n  //                 checked = {head.isActive}\r\n  //                 onChange = {()=>stateChange(head.id)}\r\n\r\n  //             />\r\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n  //             </Grid>\r\n  //         </Grid>\r\n  //     )\r\n\r\n  // );\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"420px\" }}>\r\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n      <Grid\r\n        style={{\r\n          height: \"270px\",\r\n          borderBottom: \"1px solid #ddd\",\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          paddingTop: \"5px\",\r\n          paddingBottom: \"10px\",\r\n        }}\r\n      >\r\n        <Grid conatiner>\r\n          <Grid item className={classes.conatainerRow}>\r\n            {columns.listOfValue.map((head) => (\r\n              <Grid container>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={head.isActive}\r\n                  disabled={head.disabled}\r\n                  onChange={() => stateChange(head.id)}\r\n                />\r\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"10px auto\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <Grid>\r\n          <Button size=\"large\" onClick={() => resetButton()}>\r\n            RESET\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button size=\"small\" onClick={() => props.columnclose()}>\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => saveaction()}\r\n            backgroundColor=\"secondary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            className={classes.margin}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h4 className=\"products\">\r\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\r\n        </h4>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className=\"column-btn\"\r\n          lg={5}\r\n          md={5}\r\n          sm={5}\r\n          xs={5}\r\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Button\r\n            className=\"product\"\r\n            size=\"small\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns\r\n              columns={options}\r\n              selectcolumnfilter={props.getColumnnames}\r\n              displytype={props.displytype}\r\n              columnclose={handleClose}\r\n            />\r\n          </Popover>\r\n        </Grid>\r\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditDiamond = (props) => {\r\n\r\n\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\r\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\r\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\r\n    diamonditemname: diamond.diamonditemname ?? \"\",\r\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\r\n    diamonddescription: diamond.diamonddescription ?? \"\",\r\n    diamondclarity: diamond.diamondClarity ?? \"\",\r\n    diamondtype: diamond.diamondType ?? \"\",\r\n    diamondcolor: diamond.diamondColour ?? \"\",\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n \r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {}, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Diamond Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonditemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonditemname\")}\r\n          />{\" \"}\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondsubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondsubitemname\")}\r\n          />{\" \"} */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonddescription}\r\n            placeholder={\"Diamond Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonddescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondweight}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            label=\"Weight\"\r\n            onChange={handleInputChange(\"diamondweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondcount\")}\r\n            value={editcontent.diamondcount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.diamondsettings}\r\n            value={editcontent.diamondsettings}\r\n            onChange={handleoptionChange(\"diamondsettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondshape}\r\n            options={productCtx.masterData.diamondshapes}\r\n            onChange={handleoptionChange(\"diamondshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                // label=\"Shape\"\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondcolor}\r\n            options={productCtx.masterData.diamondcolors}\r\n            onChange={handleoptionChange(\"diamondcolor\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />{\" \"}\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondclarity}\r\n            options={productCtx.masterData.diamondclarities}\r\n            onChange={handleoptionChange(\"diamondclarity\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Clarity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondtype}\r\n            options={productCtx.masterData.diamondtypes}\r\n            onChange={handleoptionChange(\"diamondtype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\r\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\r\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n  { id: \"Colour\", label: \"Colour\" },\r\n  { id: \"Clarity\", label: \"Clarity\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: \"flex\",\r\n\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    //marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit: JSON.parse(JSON.stringify(diamondData)),\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.id,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n  async function DiamondSave(diamondobj) {\r\n    // alert(JSON.stringify(productCtx.diamondsettings))\r\n    // alert(JSON.stringify(productCtx.diamondshape))\r\n    // alert(JSON.stringify(productCtx.diamondcount))\r\n    // alert(JSON.stringify(id))\r\n    var bodydata = {};\r\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\r\n      let list_data = props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\r\n        if (diamondobj.id === diamondListData.id) {\r\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\r\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\r\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\r\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\r\n          bodydata[\"diamondid\"] = diamondobj.id;\r\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\r\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\r\n          bodydata[\"description\"] = diamondobj.diamonddescription;\r\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\r\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\r\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      });\r\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\r\n\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\r\n      // let editDiamondLists = productCtx.editDiamondLists;\r\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\r\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\r\n      //   editDiamondLists = editDiamondLists && editDiamondLists\r\n      //   .map((diamond_list,index)=>{\r\n      //     if(diamond_list.id === editDiamondList.id){\r\n      //       return editDiamondList;\r\n      //     }\r\n      //     return diamond_list;\r\n      //   })\r\n      //   : editDiamondLists.push(editDiamondList);\r\n      // }\r\n      // // console.log(editDiamondLists,'editDiamondList')\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      // handleClick();\r\n      // setProductCtx({\r\n      //   ...productCtx,\r\n      //   diamondlist:DiamondChangeData,\r\n      //   editDiamondLists,\r\n      //   diamondsettings:\"\",\r\n      //   diamondshape: \"\",\r\n      //   diamondcount:\"\",\r\n      //   diamondweight:\"\",\r\n      // })\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n    window.location.reload();\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        {/* <CircularProgress color=\"secondary\"/> */}\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond &&\r\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondColour}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondClarity}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondweight\")}\r\n                        value={productCtx.diamondweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneWeight}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        type=\"number\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondcount\")}\r\n                        value={productCtx.diamondcount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneCount}\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondsettings}\r\n                        options={productCtx.masterData.diamondsettings}\r\n                        onChange={handleoptionChange(\"diamondsettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondSettings}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondshape}\r\n                        options={productCtx.masterData.diamondshapes}\r\n                        onChange={handleoptionChange(\"diamondshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondShape}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 ? (\r\n              <>\r\n                <TableRow style={{ height: 1 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              </>\r\n            ) : null}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.diamond && props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditGemstone = (props) => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    gemstonesettings: diamond?.gemstonesettings ?? null,\r\n    gemstonecount: diamond?.gemstonecount ?? \"\",\r\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\r\n    gemstonesize: diamond?.gemstonesize ?? \"\",\r\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\r\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\r\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\r\n    gemstoneshape: diamond?.gemstoneshape ?? null,\r\n    gemstonetype: diamond?.gemstonetype ?? null,\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    // alert(JSON.stringify(editcontent.gemstonecount))\r\n  }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Gemstone Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneitemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesubitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonedescription}\r\n            placeholder={\" Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonedescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesize}\r\n            label=\"Size\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesize\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            label=\"Weight\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneweight}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonecount\")}\r\n            value={editcontent.gemstonecount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.gemstonesettings}\r\n            value={editcontent.gemstonesettings}\r\n            onChange={handleoptionChange(\"gemstonesettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\" Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.name}\r\n            value={editcontent.gemstoneshape}\r\n            options={productCtx.masterData.gemstonshapes}\r\n            onChange={handleoptionChange(\"gemstoneshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.gemstonetype}\r\n            options={productCtx.masterData.gemstontypes}\r\n            onChange={handleoptionChange(\"gemstonetype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditGemstone;\r\n","import { Button, Chip, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\r\n  { id: \"SubItemName\", label: \"SubItem Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 120,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\r\n    });\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    setEditcontent({\r\n      id: gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n\r\n  async function GemstoneSave(gemdata) {\r\n\r\n    if (\r\n      gemdata.gemstonesettings &&\r\n      gemdata.gemstoneshape &&\r\n      gemdata.gemstonecount &&\r\n      gemdata.gemstoneweight &&\r\n      gemdata.gemstonesize\r\n    ) {\r\n\r\n      let list_data = props.gemstone;\r\n      var bodydata = {};\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\r\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\r\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\r\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\r\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\r\n          bodydata[\"id\"] = gemdata.id;\r\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\r\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\r\n          bodydata[\"description\"] = gemdata.gemstonedescription;\r\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\r\n\r\n          return gemstoneListData;\r\n        }\r\n\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\r\n      let editGemstoneList =\r\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\r\n        let status =\r\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\r\n            ? (editGemstoneLists =\r\n              editGemstoneLists &&\r\n              editGemstoneLists.map((gemstone_list, index) => {\r\n                if (gemstone_list.id === editGemstoneList.id) {\r\n                  return editGemstoneList;\r\n                }\r\n                return gemstone_list;\r\n              }))\r\n            : editGemstoneLists.push(editGemstoneList);\r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\",\r\n      });\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n   \r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n  \r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone &&\r\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Gemstone Size\"\r\n                        name=\"size\"\r\n                        onChange={handleInputChange(\"gemstonesize\")}\r\n                        autoComplete=\"size\"\r\n                        value={productCtx.gemstonesize}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSize}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstoneweight\")}\r\n                        value={productCtx.gemstoneweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneWeight}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstonecount\")}\r\n                        value={productCtx.gemstonecount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneCount}\r\n                      </TableCell>\r\n                    )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstonesettings}\r\n                        options={productCtx.masterData.gemstonesettings}\r\n                        onChange={handleoptionChange(\"gemstonesettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSetting}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstoneshape}\r\n                        options={productCtx.masterData.gemstonshapes}\r\n                        onChange={handleoptionChange(\"gemstoneshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneShape}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell align=\"center\">\r\n                        <Button onClick={(e) => GemstoneEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport \"./upload.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { IMAGEDELETE } from \"../../graphql/query\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30,\r\n  },\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = \"\";\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  product_id = useLocation().pathname.split('/').pop()\r\n\r\n  React.useEffect(() => {\r\n    setProductimages(props.prodimages);\r\n  }, [props.prodimages]);\r\n\r\n  productimages.forEach((imgobj) => {\r\n    console.log();\r\n    image_count = image_count + 1;\r\n    if (imgobj.productId) {\r\n      product_id = imgobj.productId;\r\n    }\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const deleteImage = async (imageData) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: IMAGEDELETE,\r\n        variables: { productimageid: imageData.id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        fatchvalue.statuscode = 200 && window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handlenewAssetChange = (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      var imagecount = 1;\r\n      if (productimages) {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = product_id + \"-\" + imagecount;\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n\r\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\r\n    });\r\n  };\r\n\r\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      { image: filetype, filename: imagename, product_id: prodid },\r\n      false\r\n    );\r\n\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    var filepathname = returnData.filepath;\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": filetype,\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (!isedit) {\r\n      const imageobj = {\r\n        name: product_id + \"_\" + (image_count + 1),\r\n        imagePosition: image_count + 1,\r\n        productColor: props.color,\r\n        productId: product_id,\r\n        imageUrl: url,\r\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n      };\r\n      imagecontent = imageobj;\r\n    }\r\n\r\n    if (!isedit) {\r\n      var productimgs = [];\r\n      productimages.forEach((img) => {\r\n        productimgs.push(img);\r\n      });\r\n      productimgs.push(imagecontent);\r\n    }\r\n\r\n    await axios.put(signedRequest, fileobj, options);\r\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\r\n    responsecontent.statuscode === 200 && setSuccess(true);\r\n    setTimeout(function () {\r\n      responsecontent.statuscode === 200 && window.location.reload();\r\n    }, 2500);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\r\n        <CardContent>\r\n          <Grid container spacing={2} className={classes.styleFile}>\r\n            {productimages.map((url, index) => (\r\n              <React.Fragment key={url.id}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <i\r\n                    className=\"fa fa-window-edit\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 11,\r\n                      color: \"red\",\r\n                      zIndex: \"12\",\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      width: \"150px\",\r\n                      wordBreak: \"break-all\",\r\n                      height: \"150px\",\r\n                      padding: \"8px\",\r\n                      margin: \"0\",\r\n                      // cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                    }}\r\n                    className=\"container\"\r\n                  >\r\n                    <img\r\n                      src={url.imageUrl}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      alt=\"product images\"\r\n                    />\r\n                  </Grid>\r\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\r\n                    <DeleteIcon style={{ color: \"grey\" }} />\r\n                  </Button>\r\n                  <br />\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n                    {\" \"}\r\n                    {index + 1}{\" \"}\r\n                  </Typography>\r\n\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n                    {\" \"}\r\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\r\n                  </Typography>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </React.Fragment>\r\n            ))}\r\n            <Grid\r\n              item\r\n              style={{\r\n                width: \"150px\",\r\n                wordBreak: \"break-all\",\r\n                height: \"150px\",\r\n                padding: \"8px\",\r\n                margin: \"0\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n              className=\"container\"\r\n            >\r\n              {\r\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\r\n                  <i\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      color: \"rgba(60,64,67,.15)\",\r\n                      fontSize: \"45px\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  ></i>\r\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\r\n                </label>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Input,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\r\n  { id: \"Markup Price\", label: \"Markup Price\" },\r\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\r\n  { id: \"Discount Price\", label: \"Discount Price\" },\r\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\r\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\r\n  { id: \"Discount\", label: \"Discount\" },\r\n\r\n  {\r\n    id: \"Disable\",\r\n    label: \"Price Update\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: \"\",\r\n  });\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    // }\r\n  };\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\r\n\r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku: diamondData.generatedSku,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.generatedSku,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    // setOpenedit(true)\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(priceobj) {\r\n    var bodydata = {};\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (priceobj.id === skulistdata.generatedSku) {\r\n        skulistdata.costPrice = priceobj.editcostprice;\r\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n        skulistdata.sellingPrice = priceobj.editsellingprice;\r\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\r\n        skulistdata.markupPrice = priceobj.editmarkupprice;\r\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\r\n        skulistdata.discountPrice = priceobj.editdiscountprice;\r\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\r\n\r\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\r\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\r\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\r\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\r\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\r\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\r\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\r\n        bodydata[\"discountPriceTax\"] = parseFloat(\r\n          priceobj.editdiscountpricetax\r\n        );\r\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\r\n          priceobj.marginOnSalePercentage\r\n        );\r\n\r\n        bodydata[\"generatedSku\"] = priceobj.id;\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    alert(JSON.stringify(bodydata));\r\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    // setEditcontent(null)\r\n    // setOpenedit(false)\r\n  }\r\n  //   const handleoptionChange = type => (event, value) => {\r\n\r\n  //     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.generatedSku}\r\n                    </TableCell>\r\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editcostprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price\"\r\n                            onChange={handleinputChange(\"editcostprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPrice}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editcostpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price Tax\"\r\n                            onChange={handleinputChange(\"editcostpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price\"\r\n                            onChange={handleinputChange(\"editsellingprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price Tax\"\r\n                            onChange={handleinputChange(\"editsellingpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            //onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkupprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price\"\r\n                            onChange={handleinputChange(\"editmarkupprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkuppricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price Tax\"\r\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountprice}\r\n                            id=\"productname\"\r\n                            onChange={handleinputChange(\"editdiscountprice\")}\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountpricetax}\r\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price Tax\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.marginOnSalePercentage}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.discount}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={(e) => props.onShow(row.generatedSku)}\r\n                        >\r\n                          Summary\r\n                        </Button>{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Button\r\n                          onClick={(e) => Skupricesync(row)}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        >\r\n                          ₹ Run\r\n                        </Button>\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\r\n                          <CircularProgress size={15} />\r\n                        ) : (\r\n                          <Button\r\n                            onClick={(e) => Skupricesync(row)}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            ₹ Run\r\n                          </Button>\r\n                        )}\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditPrice\r\n            diamond={editcontent}\r\n            onApply={DiamondSave}\r\n            onClose={handleApplicationClose}\r\n            open={openedit}\r\n          />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Button, Input, Typography } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\r\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\r\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\r\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\r\n\r\n  { id: \"Default\", label: \"Default\" },\r\n  { id: \"Show PriceBreakup\", label: \"Show PriceBreakup\" },\r\n  {\r\n    id: \"Active\",\r\n    label: \"Active\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  function handleChangeisdefault(variantId) {}\r\n\r\n  const handleChangeswitch = (name) => (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n\r\n    //  setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    console.log(diamondData);\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editleadtime: diamondData.vendorDeliveryTime,\r\n      discount: diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault: diamondData.isdefault,\r\n      editisactive: diamondData.isActive,\r\n      editisOrderable:  diamondData.isOrderable,\r\n      editorderShippingDays: diamondData.orderShippingDays\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(id) {\r\n    var bodydata = {};\r\n\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (id === skulistdata.generatedSku) {\r\n        skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n        skulistdata.isdefault = productCtx.editisdefault;\r\n        skulistdata.isActive = productCtx.editisactive;\r\n        skulistdata.isReadyToShip = productCtx.editreadytoship;\r\n        skulistdata.discountDesc = productCtx.discount;\r\n        skulistdata.isOrderable = productCtx.editisOrderable;\r\n        skulistdata.orderShippingDays = productCtx.editorderShippingDays;\r\n\r\n        bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\r\n        bodydata[\"isdefault\"] = productCtx.editisdefault;\r\n        bodydata[\"isActive\"] = productCtx.editisactive;\r\n        bodydata[\"discount\"] = productCtx.discount;\r\n        bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\r\n        bodydata[\"isOrderable\"] = productCtx.editisOrderable;\r\n        bodydata[\"orderShippingDays\"] = productCtx.editorderShippingDays;\r\n        bodydata[\"generatedSku\"] = id;\r\n        bodydata[\"showPriceBreakup\"] = productCtx.showPriceBreakup;\r\n\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.generatedSku}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.metalColor}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.purity}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuWeight}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell> */}\r\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuSize}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editleadtime}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Vendor Lead Time\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"editleadtime\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.vendorDeliveryTime}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.discount}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"discount\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountDesc}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editreadytoship\r\n                              : row.isReadyToShip\r\n                          }\r\n                          // onChange={()=>handleChange(row.id)}\r\n                          value=\"checkedA\"\r\n                          // onChange={handleChangeswitch('editreadytoship')}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editreadytoship\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Make an Order\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      <Switch\r\n                        checked={\r\n                          btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisOrderable : row.isOrderable\r\n                        }\r\n                        value=\"checkedA\"\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch(\"editisOrderable\") : null}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                      />\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Make an Order-Shipping Days\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40,minWidth:\"180px\" }} component=\"th\" scope=\"row\">\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <Input\r\n                        className={classes.helperinput}\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        style={{ width: 40 }}\r\n                        value={productCtx.editorderShippingDays}\r\n                        id=\"qty\"\r\n                        error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                        name=\"Qty\"\r\n                        label=\"Quantity\"\r\n                        onChange={handleinputChange(\"editorderShippingDays\")}\r\n                      />\r\n                    ) : (\r\n                      <Typography className={classes.heading}>{row.orderShippingDays}</Typography>\r\n                    )}{\" \"}\r\n                  </TableCell>\r\n                  ) : null}\r\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisdefault\r\n                              : row.isdefault\r\n                          }\r\n                          value=\"checkedA\"\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisdefault\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          // checked={row.showPriceBreakup}\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisactive\r\n                              : row.isActive\r\n                          }\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisactive\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Show PriceBreakup\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          checked={productCtx.showPriceBreakup}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"showPriceBreakup\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 20 }} align=\"center\">\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell align=\"center\" style={{ width: 20 }}>\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Chip,\r\n  FormControlLabel,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTDIAMONDTYPES, PRODUCTEDIT } from \"../../graphql/query\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport \"../Productupload/Productupload.css\";\r\nimport columnnames from \"./columnnames.json\";\r\nimport SortHeader from \"./Components/SortHeader\";\r\nimport CreateVariant from \"./CreateVariant\";\r\nimport DiamondDetails from \"./DiamondDetails\";\r\nimport GemstoneDetails from \"./GemstoneDetails\";\r\nimport Pricedetails from \"./Pricedetails\";\r\nimport Productimages from \"./Productimages\";\r\nimport Skupricing from \"./Skupricing\";\r\nimport Variants from \"./Variants\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(\r\n    columnnames.defaultvarients\r\n  );\r\n  const [displycolumns, setDisplycolumns] = React.useState(\r\n    columnnames.defaultvarientnames\r\n  );\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(\r\n    columnnames.pricing\r\n  );\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\r\n    columnnames.defaultpricing\r\n  );\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\r\n    columnnames.defaultpricingnames\r\n  );\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    createVariant();\r\n    setExpand(isExpanded ? true : false);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n\r\n  console.log(productCtx);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\",\r\n  });\r\n\r\n  let prod_id = props.location.pathname.split(\"/\")[2];\r\n  let product_sku = \"\";\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname });\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function dismisspricesummary() {\r\n    setIsshowpricesummary(false);\r\n  }\r\n  function getColumnnames(columnnames, displytype) {\r\n    let displycolumns = [];\r\n    let displycolumnnames = [];\r\n\r\n    columnnames.forEach((element) => {\r\n      displycolumnnames.push(element.name);\r\n      displycolumns.push(element);\r\n    });\r\n    if (displytype === 1) {\r\n      setDisplycolumns(displycolumnnames);\r\n      setVarientcolumns(columnnames);\r\n    } else {\r\n      setPricingcolumns(columnnames);\r\n      setDisplypricingcolumns(displycolumns);\r\n      setDisplycolumnnames(displycolumnnames);\r\n    }\r\n  }\r\n\r\n  let client = useApolloClient();\r\n\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    productCtx.diamondlist &&\r\n      productCtx.diamondlist.map((diamond_type) => {\r\n        let diamond_data = {\r\n          id: diamond_type.id,\r\n          diamondType: diamond_type.diamondType,\r\n        };\r\n        let status = diamondTypesArray.some(\r\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\r\n        )\r\n          ? \"\"\r\n          : diamondTypesArray.push(diamond_data);\r\n        return diamond_type;\r\n      });\r\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\r\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx,\r\n    });\r\n\r\n    client\r\n      .query({ query: PRODUCTDIAMONDTYPES })\r\n      .then((res) => {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async function saveProductEditItem() {\r\n    console.log(productCtx.product_type);\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productCategory: productCtx.product_categoy,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions: productCtx.occassions,\r\n      collections: productCtx.collections,\r\n      stonecount: productCtx.stonecount,\r\n      stonecolour: productCtx.stonecolour,\r\n      gender: productCtx.product_gender,\r\n      hashtags: productCtx.hashtags,\r\n      description: productCtx.description,\r\n      minOrderQty: productCtx.minOrderQty,\r\n      maxOrderQty: productCtx.maxOrderQty,\r\n      length: productCtx.length,\r\n      height: productCtx.height,\r\n\r\n      productType: productCtx?.product_type?.label ?? null,\r\n      productMetalColor: productCtx?.productMetalColor ?? null,\r\n      vendorCode: productCtx?.vendorcode?.name ?? null,\r\n      earingBacking: productCtx?.earringbacking?.label ?? null,\r\n      // productSize: \"12,13,14,15\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/editproduct\",\r\n      {},\r\n      productEditItem\r\n    );\r\n    window.location.reload();\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(productEditItem));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem));\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handledisableproduct = (name) => async (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n      isactive: event.target.checked,\r\n    };\r\n    let esbody = {\r\n      product_id: prod_id,\r\n    };\r\n    var endpoint = \"/reindex\";\r\n    if (event.target.checked) {\r\n      endpoint = \"/esearch_forceindex\";\r\n    }\r\n\r\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\r\n\r\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\r\n    let updateproductattr = await sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      esbody\r\n    );\r\n\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(bodycontent));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  };\r\n  async function showpricesummary(sku) {\r\n    let response = await sendNetworkRequest(\r\n      \"/viewskupricesummary/\" + sku,\r\n      {},\r\n      null\r\n    );\r\n    let price_summary = [];\r\n    let skuprice = response.price_summary.skuprice;\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n    let obj = {\r\n      component: \"SKU Price\",\r\n      cost_price: skuprice.cost_price,\r\n      selling_price: skuprice.selling_price,\r\n      markup_price: skuprice.markup_price,\r\n      discount_price: skuprice.discount_price,\r\n    };\r\n    price_summary.push(obj);\r\n\r\n    setPricesummaryvalue(price_summary);\r\n    setIsshowpricesummary(true);\r\n  }\r\n  function Skupricesync(product_id) {\r\n    let bodydata = {\r\n      product_sku: [product_id],\r\n    };\r\n    sendNetworkRequest(\"/price_run_latest\", {}, bodydata);\r\n  }\r\n  function Skumarkupsync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n      pricingcomponent: \"updateskuprice\",\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function backProductList() {\r\n    window.location = \"/productlist\";\r\n  }\r\n  useEffect(() => {\r\n    client\r\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\r\n      .then((res) => {\r\n        setLoadopen(false);\r\n\r\n        var { productListByProductId } = res.data;\r\n        var genders = productListByProductId.gender;\r\n        var productTypes = productListByProductId.productType;\r\n        var earringBackings = productListByProductId.earringBacking;\r\n        var size_obj = productListByProductId.sizeVarient;\r\n        var vendorCodes = productListByProductId.vendorCode;\r\n\r\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\r\n        // let productSize_arr = [];\r\n        // if (productSizes != null && productSizes != undefined) {\r\n        //\r\n        //   let productSizeArray = productSizes.split(\",\");\r\n        //   for (let i = 0; i < productSizeArray.length; i++) {\r\n        //\r\n        //     let obj_size = {\r\n        //       sizeValue: productSizeArray[i],\r\n        //     };\r\n        //     productSize_arr.push(obj_size);\r\n        //   }\r\n        // }\r\n\r\n        let sizes_arr = [];\r\n        if (size_obj) {\r\n          let sizes = size_obj.split(\",\");\r\n          sizes.forEach((element) => {\r\n            sizes_arr.push(element);\r\n          });\r\n        }\r\n        let gender_arr = [];\r\n        if (genders) {\r\n          genders = genders.split(\",\");\r\n          genders.forEach((element) => {\r\n            let gender_obj = {\r\n              label: element,\r\n            };\r\n            gender_arr.push(gender_obj);\r\n          });\r\n        }\r\n        let product_type = null;\r\n        if (productTypes !== null && productTypes !== undefined) {\r\n          productTypes = productTypes.split(\",\");\r\n          productTypes.forEach((element) => {\r\n            product_type = {\r\n              label: element,\r\n            };\r\n          });\r\n        }\r\n\r\n        let earring_backing = null;\r\n        if (earringBackings !== null && earringBackings !== undefined) {\r\n          earring_backing = {\r\n            label: earringBackings,\r\n          };\r\n        }\r\n\r\n        let vendor_code = null;\r\n        if (vendorCodes !== null && vendorCodes !== undefined) {\r\n          vendorCodes = vendorCodes.split(\",\");\r\n          vendorCodes.forEach((element) => {\r\n            vendor_code = {\r\n              name: element,\r\n            };\r\n          });\r\n        }\r\n        let defaultcolour = \"\";\r\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\r\n        images_arr.forEach((element) => {\r\n          if (element.isdefault) {\r\n            defaultcolour = element.productColor;\r\n          }\r\n        });\r\n        var metalcolors = [];\r\n        Array.prototype.insert = function (index, item) {\r\n          this.splice(index, 0, item);\r\n        };\r\n\r\n        var unfilterMetalColor =\r\n          productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\r\n        var metalColor = unfilterMetalColor;\r\n        var metalColor = unfilterMetalColor.filter(function (el) {\r\n          return el.productColor != null;\r\n        });\r\n\r\n        if (\r\n          typeof metalColor !== undefined &&\r\n          metalColor !== null &&\r\n          metalColor !== undefined\r\n        ) {\r\n        } else {\r\n          metalColor = {};\r\n        }\r\n\r\n        let metalcolor =\r\n          productListByProductId.productMetalcoloursByProductId.nodes;\r\n        metalcolor.forEach((colorobj) => {\r\n          if (colorobj.productColor === defaultcolour) {\r\n            colorobj[\"isdefault\"] = true;\r\n            metalcolors.insert(0, colorobj);\r\n          } else {\r\n            colorobj[\"isdefault\"] = false;\r\n            metalcolors.push(colorobj);\r\n          }\r\n        });\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: productListByProductId.productName,\r\n          isactive: productListByProductId.isactive,\r\n          product_type: product_type,\r\n          product_categoy: productListByProductId.productCategory,\r\n          gemstonelist:\r\n            productListByProductId.productGemstonesByProductSku.nodes,\r\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\r\n          variants: productListByProductId.transSkuListsByProductId.nodes,\r\n          productImages: productListByProductId.productImagesByProductId.nodes,\r\n          productMetalColor: metalColor,\r\n          // oldproductMetalColor: metalColor,\r\n          productMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          oldproductMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials:\r\n            productListByProductId.productMaterialsByProductSku.nodes,\r\n          vendorcode: vendor_code,\r\n          product_gender: gender_arr,\r\n          themes: productListByProductId.productThemesByProductId.nodes,\r\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\r\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\r\n          collections:\r\n            productListByProductId.productCollectionsByProductId.nodes,\r\n          stonecount:\r\n            productListByProductId.productStonecountsByProductId.nodes,\r\n          stonecolour:\r\n            productListByProductId.productStonecolorsByProductId.nodes,\r\n          description:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\r\n          minOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.minOrderQty,\r\n          maxOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.maxOrderQty,\r\n          height: productListByProductId?.height,\r\n          length: productListByProductId?.length,\r\n          earringbacking: earring_backing,\r\n          hashtags: productListByProductId?.productHashTagsByProductId?.nodes,\r\n          showPriceBreakup:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.showPriceBreakup,\r\n          // productSize: productSize_arr ?? [{}],\r\n          // productDiamondClarity:diamondClaritySku,\r\n        });\r\n\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(\r\n            JSON.stringify(productListByProductId.productName)\r\n          ),\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   client\r\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\r\n  //     .then((res) => {\r\n  //\r\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\r\n\r\n  //       //\r\n  //       // let FilteredProductSize = null;\r\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\r\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\r\n  //       //     return val.productType === productCtx?.product_type?.label;\r\n  //       //   });\r\n  //       // }\r\n  //\r\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\r\n  //       console.log(ProductSizeFullData);\r\n  //     })\r\n  //     .catch(console.error);\r\n  // }, [productCtx?.product_type?.label]);\r\n  return state.create_variant ? (\r\n    <CreateVariant\r\n      productMetalColor={productCtx.productMetalColor}\r\n      productMetalPurity={productCtx.productMetalPurity}\r\n      changeVariant={changeVariant}\r\n      productId={prod_id}\r\n    />\r\n  ) : (\r\n    <Grid container>\r\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <Grid item container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={3}\r\n          lg={3}\r\n          spacing={2}\r\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\r\n        >\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.productname}\r\n            id=\"productname\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.productname\r\n            }\r\n            name=\"productname\"\r\n            label=\"Product Name\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"productname\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          {/* <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_categoy}\r\n            id=\"product_category\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_categoy\r\n            }\r\n            name=\"product_category\"\r\n            label=\"Product Category\"\r\n          /> */}\r\n          <Autocomplete\r\n            id=\"product_category\"\r\n            className={classes.helperinput}\r\n            value={productCtx.product_categoy}\r\n            // getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"product_categoy\")}\r\n            options={productCtx.masterData.category.map((i) => i.name)}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Category\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.description}\r\n            id=\"description\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.description\r\n            }\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"description\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_type}\r\n            getOptionLabel={(option) => option.label}\r\n            onChange={handleoptionChange(\"product_type\")}\r\n            options={productCtx.masterData.product_type}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            disabled\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.vendorcode}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            onChange={handleoptionChange(\"vendorcode\")}\r\n            options={productCtx?.masterData?.vendorcode}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Ventor Name\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          {productCtx?.product_type?.label === \"Earrings\" ||\r\n          productCtx?.product_type?.label === \"earrings\" ? (\r\n            <Autocomplete\r\n              id=\"free-solo-2-demos\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.earringbacking}\r\n              getOptionLabel={(option) => option.label}\r\n              onChange={handleoptionChange(\"earringbacking\")}\r\n              options={productCtx.masterData.earringbacking}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.label}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Earring Backing\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\r\n            <Autocomplete\r\n              mutiple\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.productSize}\r\n              defaultValue={productCtx.productSize}\r\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\r\n              onChange={handleoptionChange(\"productSize\")}\r\n              options={productCtx?.masterProductSize}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Size\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.height}\r\n            id=\"height\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.height\r\n            }\r\n            name=\"height\"\r\n            label=\"Height \"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"height\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.length}\r\n            id=\"length\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.length\r\n            }\r\n            name=\"length\"\r\n            label=\"Width\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"length\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.minOrderQty}\r\n            id=\"minOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.minOrderQty\r\n            }\r\n            name=\"minOrderQty\"\r\n            label=\"Minimum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"minOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.maxOrderQty}\r\n            id=\"maxOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.maxOrderQty\r\n            }\r\n            name=\"maxOrderQty\"\r\n            label=\"Maximum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"maxOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productmaterials}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.materialName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Materials\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  readOnly: true,\r\n                  type: \"search\",\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            getOptionLabel={(option) => option.productColor}\r\n            getOptionSelected={(option, value) =>\r\n              option.productColor === value.productColor\r\n            }\r\n            onChange={handleoptionChange(\"productMetalColor\")}\r\n            options={productCtx.masterData.metalcolour}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalColor}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.productColor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalPurity}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.purity}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Purity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_gender}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) => option.label === value.label}\r\n            onChange={handleoptionChange(\"product_gender\")}\r\n            options={productCtx.masterData.gender}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gender\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.themeName\r\n            }\r\n            defaultValue={productCtx.themes}\r\n            options={productCtx.masterData.themes}\r\n            value={productCtx.themes}\r\n            onChange={handleoptionChange(\"themes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.themeName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ display: \"none\" }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Themes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.styleName\r\n            }\r\n            defaultValue={productCtx.prod_styles}\r\n            options={productCtx.masterData.styles}\r\n            onChange={handleoptionChange(\"prod_styles\")}\r\n            value={productCtx.prod_styles}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.styleName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Styles\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.occassions}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.occassionName\r\n            }\r\n            defaultValue={productCtx.occassions}\r\n            options={productCtx.masterData.occasions}\r\n            onChange={handleoptionChange(\"occassions\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.occassionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Occasions\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.collections}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.collectionName\r\n            }\r\n            defaultValue={productCtx.collections}\r\n            options={productCtx.masterData.collections}\r\n            onChange={handleoptionChange(\"collections\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.collectionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Collections\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"hashtags\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.hashtags}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            options={productCtx.masterData.hashtags}\r\n            onChange={handleoptionChange(\"hashtags\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Hash Tags\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecount}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecount}\r\n            options={productCtx.masterData.stones}\r\n            onChange={handleoptionChange(\"stonecount\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecount}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"No of Stones\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecolour}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecolour}\r\n            options={productCtx.masterData.gemstonecolor}\r\n            onChange={handleoptionChange(\"stonecolour\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecolor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Stone Colour\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            label={\r\n              productCtx.isactive\r\n                ? \"Disable this product\"\r\n                : \"Enable this product\"\r\n            }\r\n            control={\r\n              <Switch\r\n                checked={productCtx.isactive}\r\n                onChange={handledisableproduct(\"isactive\")}\r\n                value=\"checkedA\"\r\n              />\r\n            }\r\n          />\r\n          <Grid\r\n            item\r\n            container\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => saveProductEditItem()}\r\n              >\r\n                Update\r\n              </Button>\r\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={9}\r\n          lg={9}\r\n          spacing={2}\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid container item md={6}></Grid>\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Diamond Table\r\n          </Grid>\r\n          <DiamondDetails diamond={productCtx.diamondlist} />\r\n          {productCtx.gemstonelist.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\r\n              >\r\n                Gemstone Table\r\n              </Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <Grid style={{}}></Grid>\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              columnnames={columnnames.varients}\r\n              getColumnnames={getColumnnames}\r\n              displytype={1}\r\n            />{\" \"}\r\n          </Grid>\r\n\r\n          <Variants\r\n            variants={productCtx.variants}\r\n            columns={varientcolumns}\r\n            displycolumns={displycolumns}\r\n          />\r\n\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              title={\"Pricing Table\"}\r\n              columnnames={pricingcolumns}\r\n              displycolumns={displypricingcolumns}\r\n              getColumnnames={getColumnnames}\r\n              displytype={2}\r\n            />\r\n            <Button\r\n              onClick={(e) => Skupricesync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Price Run For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => Skumarkupsync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={true}\r\n            >\r\n              Run Markup For This Product\r\n            </Button>\r\n          </Grid>\r\n          {isshowpricesummary ? (\r\n            <Pricedetails\r\n              onClose={dismisspricesummary}\r\n              values={pricesummaryvalues}\r\n            />\r\n          ) : null}\r\n          <Skupricing\r\n            variants={productCtx.variants}\r\n            onShow={showpricesummary}\r\n            columns={displypricingcolumns}\r\n            displycolumns={displycolumnnames}\r\n          />\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Product Images\r\n          </Grid>\r\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\r\n          <Productimages\r\n            //color={colors.productColor}\r\n            //isdefault={colors.isdefault}\r\n            prodimages={productCtx.productImages}\r\n          />\r\n          {/* ))} */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter((props) => {\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n\r\n  const _content = (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n  return _content;\r\n});\r\nexport default withRouter(ProductAttributes);\r\n","const route = {\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  profile: \"/profile\",\r\n  productupload: \"/productupload\",\r\n  configuration: \"/Configuration\",\r\n  vendor: \"/vendorlist\",\r\n  productlist: \"/productlist\",\r\n  orderlist: \"/orderlist\",\r\n  orderdetails: \"/orderdetails/:id\",\r\n  appointmentdetails: \"/appointmentdetails/:id\",\r\n  userorders: \"/orderlist/:userid\",\r\n  userwishlist: \"/userwishlist/:userid\",\r\n  address: \"/address/:userid\",\r\n  cmshome: \"/cmshome\",\r\n\r\n  materiallist: \"/material\",\r\n  mastermaterial: \"/materialmaster\",\r\n  mastercolors: \"/mastercolors\",\r\n  masterpurities: \"/masterpurities\",\r\n  salediscountlist: \"/salediscountlist\",\r\n  voucherdiscountlist: \"/voucherdiscountlist\",\r\n\r\n  producttypes: \"/producttypes\",\r\n  voucherdiscount: \"/voucherdiscount\",\r\n  salediscount: \"/salediscount\",\r\n  priceupdate: \"/priceupdate\",\r\n  priceupload: \"/price_upload\",\r\n  productAttributes: \"/product_attributes\",\r\n  diamondDetails: \"/diamond_details\",\r\n  gemstoneDetails: \"/gemstone-details\",\r\n  variants: \"/variants\",\r\n  images: \"/images\",\r\n  createVariant: \"/create_variant\",\r\n  materiallistpage: \"/newmaterial\",\r\n  editCategory: \"/editcategory\",\r\n  vendorPrice: \"/vendorpricesetup\",\r\n  markupPrice: \"/markuppricesetup\",\r\n  taxsetup: \"/taxsetup\",\r\n  editdiscount: \"/salediscount/:id\",\r\n  editvoucher: \"/voucherdiscount/:id\",\r\n  masterstyles: \"/masterstyles\",\r\n  masterthemes: \"/masterthemes\",\r\n  masteroccassions: \"/masteroccassions\",\r\n  masterpaymentstatus: \"/paymentstatus\",\r\n  mastercollections: \"/collections\",\r\n  masterdesigns: \"/designs\",\r\n  masterorderstatus: \"/orderstatus\",\r\n  shippingzones: \"/zones\",\r\n  shipmentsettings: \"/shipmensettings\",\r\n  shippingattributes: \"/shippingattributes\",\r\n  masterdiamonds: \"/diamonds\",\r\n  diamondsettings: \"/diamondsettings\",\r\n  diamondshapes: \"/diamondshapes\",\r\n  earringbacking: \"/earringbacking\",\r\n  addshippingattributes: \"/addshippingattributes\",\r\n  addtaxattributes: \"/addtaxattributes\",\r\n  userconfiguration: \"/userconfiguration\",\r\n  masterroles: \"/masterroles\",\r\n  manageadminusers: \"/manageadminusers\",\r\n  goldpriceupdate: \"/goldpriceupdate\",\r\n\r\n  manageusers: \"/manageusers\",\r\n\r\n  masterpages: \"/masterpages\",\r\n\r\n  gemsettings: \"/gemstonesettings\",\r\n  gemshapes: \"/gemstoneshapes\",\r\n  gemtypes: \"/gemstonetypes\",\r\n  gender: \"/genders\",\r\n  seo: \"/seopriority\",\r\n  taxsettings: \"/taxsettings\",\r\n  masterattributes: \"/masterattributes\",\r\n  mastercountries: \"/countries\",\r\n  dailyMetalRate: \"/daily_metal_rate\",\r\n\r\n  masterstones: \"/masterstones\",\r\n  masterstonecolors: \"/masterstonecolors\",\r\n  masterstoneshapes: \"/masterstoneshapes\",\r\n  weights: \"/weights\",\r\n  customerdetails: \"/customerdetails/:id\",\r\n\r\n  category: \"/categories\",\r\n\r\n  warehouse: \"/warehouse\",\r\n  holiday_manager: \"/holiday-manager\",\r\n  inventory: \"/inventory\",\r\n\r\n  silverbanner: \"/silverbanner\",\r\n  silverlistingbanner: \"/listingPage\",\r\n  FeaturedProduct: \"/featuredproduct\",\r\n\r\n  Comments: \"/comments\",\r\n  Newarrival: \"/newarrival\",\r\n  Manageappoinment: \"/manageappoinment\",\r\n  Manageshedule: \"/manageshedule\",\r\n  abandoned_cart: \"/cart-details\",\r\n  pricelogs: \"/price-logs\",\r\n  imageUpload:\"/imageUpload\",\r\n\r\n  cmsComponents:\"/cmsComponent\",\r\n  ComboOfferConfig:\"/combo_offer_config\"\r\n\r\n};\r\n\r\nexport default route;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n     \r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: \"1 0 auto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        outline: 0,\r\n        zIndex: 1200,\r\n        position: \"fixed\",\r\n        overflowY: \"auto\",\r\n        flexDirection: \"column\",\r\n       \r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: 'fit-content'\r\n    },\r\n    avatar: {\r\n      width: 60,\r\n      height: 60\r\n    },\r\n    name: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));","import Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink, withRouter } from \"react-router-dom\";\r\nimport { GlobalContext, ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport data from \"../menupages.json\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload, setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem(\"accesspages\");\r\n\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  };\r\n  const handleClick = (type) => (e) => {\r\n    if (\r\n      type === \"Pricing\" ||\r\n      type == \"Inventory & Shipping Setup\" ||\r\n      type == \"Appoinment Management\" ||\r\n      type === \"Orders\"\r\n    ) {\r\n      setGlobalCtx({\r\n        ...globalCtx,\r\n        optionname: type,\r\n        selectedIndex: 5,\r\n        isExpand: !globalCtx.isExpand,\r\n      });\r\n    } else {\r\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\r\n    }\r\n  };\r\n  async function getmasterpages() {\r\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach((element) => {\r\n      pages.push(element.pageurl);\r\n      if (element.is_write) {\r\n        pagepermissions.push(element.pageurl);\r\n      }\r\n    });\r\n    // setPages(pageaccess)\r\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n    //setIsreload(true)\r\n\r\n    localStorage.setItem(\"accesspages\", pages);\r\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n    window.location.reload();\r\n  }\r\n  React.useEffect(() => {\r\n    //alert(globalCtx.accesspages)\r\n    if (!accesspages) {\r\n      // getmasterpages()\r\n    } else {\r\n      //  setIsreload(true)\r\n    }\r\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n\r\n    console.log(\"pagess\", globalCtx);\r\n  }, []);\r\n  function handleListItemClick(event, index) {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {data.menus.map((menuobj, index) => (\r\n            <React.Fragment key={index}>\r\n              {menuobj.submenu ? (\r\n                <>\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <>\r\n                      <ListItem button onClick={handleClick(menuobj.name)}>\r\n                        <ListItemIcon>\r\n                          {/* <InboxIcon /> */}\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Console\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n\r\n                        {globalCtx.isExpand &&\r\n                        globalCtx.optionname === menuobj.name ? (\r\n                          <ExpandLess />\r\n                        ) : (\r\n                          <ExpandMore />\r\n                        )}\r\n                      </ListItem>\r\n                      <Collapse\r\n                        in={\r\n                          globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <List component=\"div\" disablePadding>\r\n                          {menuobj.submenu.map((submenuobj, subindex) => (\r\n                            <React.Fragment key={subindex}>\r\n                              {accesspages &&\r\n                              accesspages.indexOf(submenuobj.url) > -1 ? (\r\n                                <Link\r\n                                  underline=\"none\"\r\n                                  component={RouterLink}\r\n                                  to={submenuobj.url}\r\n                                >\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={\r\n                                      globalCtx.selectedIndex === subindex\r\n                                    }\r\n                                    onClick={(event) =>\r\n                                      handleListItemClick(event, subindex)\r\n                                    }\r\n                                  >\r\n                                    <ListItemIcon>\r\n                                      <img\r\n                                        style={{ width: \"18px\" }}\r\n                                        src={submenuobj.icons}\r\n                                        alt=\"NAC Console\"\r\n                                      ></img>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={submenuobj.name} />\r\n                                  </ListItem>\r\n                                </Link>\r\n                              ) : null}\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </List>\r\n                      </Collapse>{\" \"}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <Link\r\n                      underline=\"none\"\r\n                      component={RouterLink}\r\n                      to={menuobj.url}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        key={\"Product List\"}\r\n                        selected={globalCtx.optionname === menuobj.name}\r\n                        onClick={handleClick(menuobj.name)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Icon\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ) : null}{\" \"}\r\n                </>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      color: 'red',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        marginLeft: \"0px\",\r\n        width:\"100%\"\r\n      },\r\n    },\r\n \r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      width:\"100%\",\r\n      overflow:\"auto\",\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));","import { CssBaseline } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"./style.css\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\");\r\n    window.location = \"/\";\r\n  }\r\n\r\n  function handleDrawer() {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: globalCtx.sideBarOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\r\n            NAC jewellery\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = (props) => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Component {...rest} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const withAppBar = (component, props) => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrimaryAppBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport route from \"./route\";\r\nimport { withAppBar } from \"../components/PrimaryAppBar\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { component, ...rest } = props;\r\n\r\n  const checkAuth = () => {\r\n    let accesstoken = localStorage.getItem(\"accesstoken\");\r\n    if (accesstoken) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const Component = (props) => withAppBar(component, props);\r\n  return checkAuth() ? (\r\n    rest.path === \"/\" || rest.path === \"/login\" ? (\r\n      <Redirect to={route.productlist} />\r\n    ) : (\r\n      <Component {...rest} />\r\n    )\r\n  ) : (\r\n    <Redirect to={route.login} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import ApolloClient from \"apollo-boost\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\r\nimport Newarrival from \"../components/Newarrival/NewArrival\";\r\nimport Review from \"../components/Review/Review\";\r\nimport { GlobalContext } from \"../context\";\r\nimport { NetworkProvider } from \"../context/NetworkContext\";\r\nimport { ProductContext } from \"../context/ProductuploadContext\";\r\nimport {\r\n  Addshippingattributes,\r\n  Addtaxattributes,\r\n  CategoryList,\r\n  Configuration,\r\n  Customerdetails,\r\n  Dashboard,\r\n  DiscountList,\r\n  Earringbacking,\r\n  Goldpriceupdate,\r\n  HolidayManager,\r\n  Inventory,\r\n  Login,\r\n  Manageadminusers,\r\n  Manageappoinment,\r\n  ManageShedule,\r\n  Manageusers,\r\n  Markupprice,\r\n  Masterattribute,\r\n  Mastercategories,\r\n  Mastercollections,\r\n  Masterdesigns,\r\n  Masterdiamonds,\r\n  Masterdiamondsettings,\r\n  Masterdiamondshapes,\r\n  Mastergemsettings,\r\n  Mastergemshapes,\r\n  Mastergemtypes,\r\n  Mastergenders,\r\n  Mastermetalcolors,\r\n  Masteroccassions,\r\n  Masterorderstatus,\r\n  Masterpaymentstatus,\r\n  Masterproducttypes,\r\n  Masterpurities,\r\n  Masterroles,\r\n  Masterscreens,\r\n  Masterstonecolors,\r\n  Masterstones,\r\n  Masterstoneshapes,\r\n  Masterstyles,\r\n  Masterthemes,\r\n  Masterweights,\r\n  Materialmaster,\r\n  OrderList,\r\n  OrderManagementDetails,\r\n  Priceupdate,\r\n  Productlist,\r\n  Productupload,\r\n  Salediscount,\r\n  Seopriority,\r\n  Shipmentsettings,\r\n  Shippingattributes,\r\n  Shippingzones,\r\n  Taxsettings,\r\n  Taxsetup,\r\n  Useraddresses,\r\n  Userconfiguration,\r\n  Userwishlist,\r\n  Vendorlist,\r\n  Vendorprice,\r\n  Voucherdiscount,\r\n  VoucherdiscountListing,\r\n  Warehouse,\r\n  AbandonedCart,\r\n  PriceUpload,\r\n  MasterCountry,\r\n  DailyMetalRate,\r\n  PriceLogs,\r\n  ImageUpload,\r\n  AppointmentManagementDetails,\r\n  CmsComponent,\r\n  ComboOfferConfig\r\n} from \"../screens\";\r\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\r\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\r\nimport cmshome from \"../screens/cms/cmshome\";\r\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\r\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\r\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\r\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport route from \"./route\";\r\n\r\nconst MainApp = () => {\r\n  const { globalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx } = React.useContext(ProductContext);\r\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {/* <ProductProvider > */}\r\n      <NetworkProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Login} />\r\n          <Route path={route.login} component={Login} />\r\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n          <PrivateRoute path={route.productupload} component={Productupload} />\r\n          <PrivateRoute path={route.configuration} component={Configuration} />\r\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n          <PrivateRoute path={route.productlist} component={Productlist} />\r\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n          <PrivateRoute path={route.cmshome} component={cmshome} />\r\n          <PrivateRoute\r\n            path={route.producttypes}\r\n            component={Masterproducttypes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.Manageappoinment}\r\n            component={Manageappoinment}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscount}\r\n            component={Voucherdiscount}\r\n          />\r\n          <PrivateRoute path={route.pricelogs} component={PriceLogs} />\r\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n          <PrivateRoute path={route.orderlist} component={OrderList} />\r\n          <PrivateRoute path={route.userorders} component={OrderList} />\r\n          <PrivateRoute path={route.address} component={Useraddresses} />\r\n          <PrivateRoute path={route.imageUpload} component={ImageUpload} />\r\n\r\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n          <PrivateRoute path={route.category} component={Mastercategories} />\r\n          <PrivateRoute\r\n            path={route.masterattributes}\r\n            component={Masterattribute}\r\n          />\r\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n          <PrivateRoute\r\n            path={route.masterstonecolors}\r\n            component={Masterstonecolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterstoneshapes}\r\n            component={Masterstoneshapes}\r\n          />\r\n          <PrivateRoute path={route.weights} component={Masterweights} />\r\n          <PrivateRoute\r\n            path={route.masteroccassions}\r\n            component={Masteroccassions}\r\n          />\r\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n          <PrivateRoute\r\n            path={route.manageadminusers}\r\n            component={Manageadminusers}\r\n          />\r\n          <PrivateRoute\r\n            path={route.goldpriceupdate}\r\n            component={Goldpriceupdate}\r\n          />\r\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n          <PrivateRoute\r\n            path={route.customerdetails}\r\n            component={Customerdetails}\r\n          />\r\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n          <PrivateRoute\r\n            path={route.orderdetails}\r\n            component={OrderManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.appointmentdetails}\r\n            component={AppointmentManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.userconfiguration}\r\n            component={Userconfiguration}\r\n          />\r\n\r\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n          <PrivateRoute\r\n            path={route.mastermaterial}\r\n            component={Materialmaster}\r\n          />\r\n          <PrivateRoute\r\n            path={route.mastercolors}\r\n            component={Mastermetalcolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterpurities}\r\n            component={Masterpurities}\r\n          />\r\n          <PrivateRoute\r\n            path={route.salediscountlist}\r\n            component={DiscountList}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscountlist}\r\n            component={VoucherdiscountListing}\r\n          />\r\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n          <PrivateRoute\r\n            path={route.mastercollections}\r\n            component={Mastercollections}\r\n          />\r\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n          <PrivateRoute\r\n            path={route.masterdiamonds}\r\n            component={Masterdiamonds}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondsettings}\r\n            component={Masterdiamondsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondshapes}\r\n            component={Masterdiamondshapes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.earringbacking}\r\n            component={Earringbacking}\r\n          />\r\n          <PrivateRoute\r\n            path={route.gemsettings}\r\n            component={Mastergemsettings}\r\n          />\r\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n          <PrivateRoute\r\n            path={route.masterpaymentstatus}\r\n            component={Masterpaymentstatus}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterorderstatus}\r\n            component={Masterorderstatus}\r\n          />\r\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n          <PrivateRoute\r\n            path={route.shippingattributes}\r\n            component={Shippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addshippingattributes}\r\n            component={Addshippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addtaxattributes}\r\n            component={Addtaxattributes}\r\n          />\r\n\r\n          <PrivateRoute path={route.gender} component={Mastergenders} />\r\n          <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={route.editdiscount}\r\n            component={Salediscount}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.productAttributes}/:id`}\r\n            component={ProductAttributes}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.createVariant}`}\r\n            component={CreateVariant}\r\n          />\r\n          <PrivateRoute\r\n            path={route.shipmentsettings}\r\n            component={Shipmentsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.holiday_manager}\r\n            component={HolidayManager}\r\n          />\r\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\r\n          <PrivateRoute path={route.inventory} component={Inventory} />\r\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\r\n          <PrivateRoute path={route.Manageshedule} component={ManageShedule} />\r\n          <PrivateRoute\r\n            path={route.silverlistingbanner}\r\n            component={SilverListingbanner}\r\n          />\r\n          <PrivateRoute\r\n            path={route.FeaturedProduct}\r\n            component={FeaturedProduct}\r\n          />\r\n          <PrivateRoute path={route.Comments} component={Review} />\r\n          <PrivateRoute path={route.Newarrival} component={Newarrival} />\r\n          <PrivateRoute path={route.abandoned_cart} component={AbandonedCart} />\r\n          <PrivateRoute path={route.priceupload} component={PriceUpload} />\r\n          <PrivateRoute\r\n            path={route.mastercountries}\r\n            component={MasterCountry}\r\n          />\r\n          <PrivateRoute\r\n            path={route.dailyMetalRate}\r\n            component={DailyMetalRate}\r\n          />\r\n          <PrivateRoute\r\n            path={route.cmsComponents}\r\n            component={CmsComponent}\r\n          />\r\n          <PrivateRoute\r\n            path={route.ComboOfferConfig}\r\n            component={ComboOfferConfig}\r\n          />\r\n        </Switch>\r\n      </NetworkProvider>\r\n      {/* </ProductProvider> */}\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport { Alerts as Alert } from \"./components\";\r\nimport { AlertProps, AlertContext } from \"./context\";\r\n\r\nclass AppAlert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    };\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    });\r\n  };\r\n\r\n  set = (props) => {\r\n    this.setState({ ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AlertContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          onclose: this.close,\r\n          setSnack: this.set,\r\n        }}\r\n      >\r\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\r\n        {this.props.children}\r\n      </AlertContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAlert;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainApp from \"./routes\";\r\nimport { GlobalProvider } from \"./context\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport AppAlert from \"./App.Alert\";\r\n\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// const theme = createMuiTheme({\r\n//   typography: {\r\n//     fontFamily: [\r\n\r\n//       'Roboto'\r\n\r\n//     ].join(','),\r\n//   },\r\n// });\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n          <Router >\r\n            <AppAlert>\r\n              <MainApp />\r\n            </AppAlert>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}