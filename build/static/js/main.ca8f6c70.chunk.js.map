{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/SelectPlaceholder.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","screens/Productupload/AddressForm.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","SelectPlaceholder","_this","call","onFocus","setState","onBlur","_this$props","state","SelectPlaceholder_SelectView","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","AddressForm","_React$useContext","useContext","handlechange","selectedOption","minvalue","maxvalue","shortCode","i","push","handleTextChange","handleInputChange","_objectSpread4","index","indexOf","splice","index1","indexval","Fragment","container","sm","id","Box","mt","components_SelectPlaceholder","options","isMulti","_objectSpread5","material_names","forEach","element","productvendorcode","earringbacking","includes","PaymentForm","purityChange","disabled","autoComplete","default_size","button","paper","gempapper","leftIcon","rightIcon","marginLeft","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","clearmetalvalue","metalname","settings","clarity","count","weight","gemstonesettings","handleClick","metalsarr","stonedetails","Paper","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","Edit_default","Delete_default","deletematerial","valueContainer","flex","alignItems","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","vendorDelivaryDays","isreorder","default_metal_colour","default_metal_purity","default_metal_size","styles","occasions","stones","gemstonecolor","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","allMasterEarringBackings","apidata","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","params","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","alert","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","img","objectFit","control","setMetalcolour","_React$useState3","_React$useState4","files","setFiles","uploadimagetoserver","_x4","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","imagecolourobj","imageobj","_imageobj","charAt","unshift","direction","imageindex","react_filepond","labelIdle","allowMultiple","maxFiles","onupdatefiles","fileItem","onaddfile","onremovefile","source","server","load","then","res","blob","fileItems","removedfile","removefiles","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","marginBottom","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","formdata","purity","default_metal_color","diamond","gemstone","product_vendor_code","stonecolours","defaultsize","defaultmetalsize","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","aria-label","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","CardHeader","Divider","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","option","cursor","& + &","cardcontent","primary","selectedOptiondefault","common","optionRadio","optionDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","discounttype","setDiscounttype","minreq","setMinreq","_useState7","_useState8","usagelimit","setUsagelimit","_useState9","_useState10","isonce","setIsonce","_useState11","_useState12","selected","_useState13","Date","_useState14","selectedDate","handleDateChange","handleusagelimit","handleonceperorder","generateCoupon","result","characters","charactersLength","floor","random","toUpperCase","makeid","categories","CardActionArea","Radio","handleminreq","DateTimePicker","inputVariant","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","grow","menuButton","search","fade","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","minHeight","_clsx2","_React$useContext2","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","black","dark","light","warning","blueGrey","link","default","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","MuiThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca8f6c70.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={<b>{helperText}</b>}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  height: 55,\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api.stylori.net\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.net/graphql\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step4','Step5','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[{\n            value:1,\n            label:\"1\"\n        },{\n            value:2,\n            label:\"2\"\n        },{\n            value:3,\n            label:\"3\"\n        },{\n            value:4,\n            label:\"4\"\n        }],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[]\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\n\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\n\n  \n  \nexport default function AddressForm() {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 26\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 19\n\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n              if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step4','Step5','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    \n    \n  return (\n\n    <React.Fragment>\n    \n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6} spacing={1}>\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={handleTextChange('productname')}\n                      />\n       \n          </Grid>  \n          \n          <Grid item xs={12} sm={6} spacing={1}>\n            <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Product Type\"\n                    value={productCtx.product_type}\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    placeholderUp={productCtx.product_type ? true : false}\n\n                    onChange={handlechange('product_type')}\n                    options={productCtx.masterData.product_type}\n                  />\n            </Box>      \n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n                  <SelectPlaceholder\n                  value={productCtx.product_categoy}\n                    placeholder=\"Select Product Category\"\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    options={productCtx.masterData.category}\n                    onChange={handlechange('product_categoy')}\n                    placeholderUp={productCtx.product_categoy ? true : false}\n\n                  />\n            </Grid>\n\n            \n           \n            <Grid item xs={12} sm={6}>\n                <SelectPlaceholder\n                    placeholder=\"Select Product Materials\"\n                    isMulti\n                    style={{zIndex: 500}}\n                    value={productCtx.material}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    onChange={materialChange('material')}\n                    options={productCtx.masterData.material}\n                    placeholderUp={productCtx.material ? true : false}\n\n                  />\n                             \n          \n\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n                <Box mt={1} >\n            <SelectPlaceholder\n                    className=\"suboverlay\"\n                    fullWidth\n                    value={productCtx.vendorcode}\n                    placeholder=\"Select Vendor Code\"\n                    onChange={handlevendorChange}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    placeholderUp={productCtx.vendorcode ? true : false}\n                    options={productCtx.masterData.vendorcode}\n                  />\n                </Box>\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Product Vendor Code\"\n                      fullWidth\n                      value={productCtx.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n           \n                    placeholder=\"Earring Backing\"\n                    value={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking}\n                    onChange={handleInputChange('earringbacking')}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                    \n                    placeholderUp={productCtx.earringbacking ? true : false}\n                  />\n                </Box>\n            </Grid>        \n            <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Gender\"\n                    value={productCtx.selectedgender}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                    options={productCtx.masterData.gender}\n                    onChange={handleInputChange('selectedgender')}\n                    placeholderUp={productCtx.selectedgender ? true : false}\n                  />\n                </Box>\n            </Grid>\n\n            <Grid item xs={12} sm={6} spacing={1}>\n                <Box mt={1} >\n                <SelectPlaceholder\n                        isMulti\n                        isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                        placeholder=\"Select Product Size\"\n                        onChange={handlesizeChange}\n                        placeholderzindex=\"2\"\n                       selectzindex=\"2\"\n                        placeholderUp={productCtx.selected_sizes.length ? true : false}\n                        value={productCtx.selected_sizes}\n                        options={productCtx.sizes}\n                      />\n                </Box>      \n                </Grid>\n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\n\n\n\nexport default function PaymentForm() {\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n\n  return (\n    <React.Fragment>\n      \n\n      <Grid container spacing={1}>\n      <Grid item xs={6} sm={3}>\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n      </Grid>\n      \n     <Grid item xs={6} sm={3}>      \n          {/* <FormLabel component=\"legend\" >Material Purity</FormLabel> */}\n           <Box mt={1} >         \n          <SelectPlaceholder\n                    isMulti\n                    value = {productCtx.metalpurity}\n                    placeholder=\"Metal Purity\"\n                    onChange={purityChange('metalpurity')}\n                    options={productCtx.masterData.metalpurity}\n                    placeholderzindex=\"4\"\n                selectzindex=\"4\"\n                 placeholderUp={productCtx.metalpurity.length ? true : false}\n                  />\n          </Box>          \n          \n    </Grid>\n    \n\n    <Grid item xs={6} sm={3}>\n      \n      \n      {/* <FormLabel component=\"legend\" >Metal Colour</FormLabel> */}\n       <Box mt={1} >         \n      <SelectPlaceholder\n                isMulti\n                value = {productCtx.metalcolour}\n                placeholder=\"Metal Colour\"\n                onChange={purityChange('metalcolour')}\n                options={productCtx.masterData.metalcolour}\n                placeholderzindex=\"3\"\n                selectzindex=\"3\"\n                 placeholderUp={productCtx.metalcolour.length ? true : false}\n              />\n      </Box>          \n      \n</Grid>\n<Grid item xs={3} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Default Size for Price\"\n    name=\"size\"\n    autoComplete=\"size\"\n    onChange = {handleInputChange('default_size')}\n    value={productCtx.default_size}\n    \n    />\n</Grid>\n      \n     <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Weight for Default Size\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_weight')}\n          value={productCtx.metal_weight === 0 ? \"\" : productCtx.metal_weight}\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n    </Grid>\n\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid>\n           \n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr })\n\n  }\n  function clearmetalvalue()\n  {\n    setProductCtx({ ...productCtx, \n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    if(productCtx.diamondclarity)\n    {\n      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n\n    }else{\n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }\n\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n      {!productCtx.material_names.includes(\"Diamond\") ? null : <Paper className={classes.paper} >\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                        <SelectPlaceholder\n                        fullWidth\n                        placeholder=\"Diamond Type/Clarity\"\n                        onChange={handleChange(\"diamondclarity\")}\n                        value={productCtx.diamondclarity}\n                        options={productCtx.masterData.diamondclarities  }\n                        placeholderzindex=\"9\"\n                        selectzindex=\"9\"\n                        placeholderUp={productCtx.diamondclarity ? true : false}\n\n                      />\n              \n          \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      <SelectPlaceholder\n                      fullWidth\n                        placeholder=\"Diamond Colour\"\n                        onChange={handleChange('diamondcolor')}\n                        value={productCtx.diamondcolor}\n                        options={productCtx.masterData.diamondcolors}\n                        placeholderzindex=\"8\"\n                        selectzindex=\"8\"\n                        placeholderUp={productCtx.diamondcolor ? true : false}\n                      />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n            <SelectPlaceholder\n            fullWidth\n                        placeholder=\"Diamond Setting\"\n                        onChange={handleChange('diamondsettings')}\n                        value={productCtx.diamondsettings}\n                        options={productCtx.masterData.diamondsettings}\n                        placeholderzindex=\"7\"\n                        selectzindex=\"7\"\n                        placeholderUp={productCtx.diamondsettings ? true : false}\n                      />\n        </Grid>\n        <Grid item xs={4} >\n      \n        <SelectPlaceholder\n\n                        placeholder=\"Diamond Shape\"\n                        value={productCtx.diamondshape}\n                        onChange={handleChange('diamondshape')}\n                        options={productCtx.masterData.diamondshapes}\n                        placeholderzindex=\"6\"\n                        selectzindex=\"6\"\n                        placeholderUp={productCtx.diamondshape ? true : false}\n                      />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      \n      \n        </Paper>\n      }\n\n      {!productCtx.material_names.includes(\"Gemstone\") ? null : <Paper className={classes.gempapper} >\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                  <SelectPlaceholder\n                      placeholder=\"Gemstone Type\"\n                      value={productCtx.gemstonetype}\n                      onChange={handleChange('gemstonetype')}\n                      options={productCtx.masterData.gemstontypes}\n                      placeholderzindex=\"5\"\n                      selectzindex=\"5\"\n                      placeholderUp={productCtx.gemstonetype ? true : false}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n      <SelectPlaceholder\n                      placeholder=\"Gemstone Shape\"\n                      value={productCtx.gemstoneshape}\n                      onChange={handleChange('gemstoneshape')}\n                      options={productCtx.masterData.gemstonshapes}\n                      placeholderzindex=\"4\"\n                      selectzindex=\"4\"\n                      placeholderUp={productCtx.gemstoneshape ? true : false}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          <SelectPlaceholder\n                      placeholder=\"Gemstone Setting\"\n                      value={productCtx.gemstonesettings}\n                      onChange={handleChange('gemstonesettings')}\n                      options={productCtx.masterData.gemstonesettings}\n                      placeholderzindex=\"3\"\n                      selectzindex=\"3\"\n                      placeholderUp={productCtx.gemstonesettings ? true : false}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </Paper>\n      }\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n        <Grid item xs={6} >\n        </Grid> \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    <Grid item xs={12} sm={4} >\n    <TextField fullWidth\n        label=\"Vendor Code\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.shortCode}\n        \n      />\n    </Grid>\n    \n    <Grid item xs={12} sm={4}>\n    <TextField fullWidth\n        label=\"Vendor Lead Time\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.vendorDelivaryDays+\" days\"}\n        \n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n                  <SelectPlaceholder\n                    value={productCtx.isreorder}\n                    placeholder=\"Reorderable\"\n                    onChange={handleChange('isreorder')}\n                    options={[{value:'Yes',label:'Yes'},{value:'No',label:'No'}]}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                     placeholderUp={productCtx.isreorder ? true : false}\n                 />\n    </Grid>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Default SKU For Display\n          </Typography> \n    </Grid>\n    <Grid item xs={4} >\n\n                  \n                  <SelectPlaceholder\n                    value={productCtx.default_metal_colour}\n                    placeholder=\"Metal Colour\"\n                    onChange={handleChange('default_metal_colour')}\n                    options={productCtx.metalcolour}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                     placeholderUp={productCtx.default_metal_colour ? true : false}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_purity}\n                    placeholder=\"Metal Purity\"\n                    onChange={handleChange('default_metal_purity')}\n                    options={productCtx.metalpurity}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_purity ? true : false}\n                  />\n   \n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_size}\n                    isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                    placeholder=\"Size\"\n                    onChange={handleChange('default_metal_size')}\n                    options={productCtx.default_metal_size}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_size ? true : false}\n\n                  />\n   \n    </Grid>\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport { ProductContext } from '../../context';\n\nexport default function Review() {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                          <SelectPlaceholder\n                          placeholder=\"Themes\"\n                          isMulti\n                          value={productCtx.themes}\n                          onChange={handleChange('themes')}\n                          options={productCtx.masterData.themes}\n                          placeholderzindex=\"8\"\n                          selectzindex=\"8\"\n                           placeholderUp={productCtx.themes.length ? true : false} />\n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    <SelectPlaceholder\n        placeholder=\"Style\"\n        isMulti\n        value={productCtx.prod_styles}\n        onChange={handleChange('prod_styles')}\n        options={productCtx.masterData.styles}\n        placeholderzindex=\"7\"\n        selectzindex=\"7\"\n         placeholderUp={productCtx.prod_styles.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    <SelectPlaceholder\n        placeholder=\"Occasions\"\n        isMulti\n        value={productCtx.occassions}\n        onChange={handleChange('occassions')}\n        options={productCtx.masterData.occasions}\n        placeholderzindex=\"6\"\n        selectzindex=\"6\"\n         placeholderUp={productCtx.occassions.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n    <SelectPlaceholder\n        placeholder=\"Collections\"\n        isMulti\n        value={productCtx.collections}\n        onChange={handleChange('collections')}\n        options={productCtx.masterData.collections}\n        placeholderzindex=\"5\"\n        selectzindex=\"5\"\n         placeholderUp={productCtx.collections.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n    <SelectPlaceholder\n        placeholder=\"Number of stones\"\n        value={productCtx.stonecount}\n        onChange={handleChange('stonecount')}\n        options={productCtx.masterData.stones}\n        placeholderzindex=\"4\"\n        selectzindex=\"4\"\n       placeholderUp={productCtx.stonecount ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n    <SelectPlaceholder\n        placeholder=\"Stone Colour\"\n        value={productCtx.stonecolour}\n        onChange={handleChange('stonecolour')}\n        isMulti\n        options={productCtx.masterData.gemstonecolor}\n        placeholderzindex=\"3\"\n        selectzindex=\"3\"\n         placeholderUp={productCtx.stonecolour.length ? true : false}\n      />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        return {\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n  let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    setFiles([])\n  }\n\n  //  let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension})\n  //  var returnData = responsedata.data.returnData;\n  //  var signedRequest = returnData.signedRequest;\n  //  var url = returnData.url;\n  //  console.log(\"responseurl\"+url);\n  //  // Put the fileType in the headers for the upload\n  //  var options = {\n  //      headers: {\n  //          'Content-Type': bodaydata.fileExtension,\n  //          'Access-Control-Allow-Origin':'*'\n  //      }\n  //  };\n  //  axios.put(signedRequest, bodaydata.file, options)\n  //      .then(result => {\n  //         alert(url);\n  //      })\n  //      .catch(error => {\n  //      })\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n      alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))}\n            <Grid xs={3} item>\n              <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(4, 0, 5),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n      var formdata = {\n        productname: productCtx.productname,\n        product_categoy:productCtx.product_categoy,\n        product_type:productCtx.product_type,\n        materials:productCtx.material,\n        metals:productCtx.metals,\n        gender: productCtx.selectedgender,\n        size: productCtx.selected_sizes,\n        vendor: productCtx.vendorcode,\n        product_code:productCtx.product_code,\n        purity:productCtx.metalpurity,\n        metal_color:productCtx.metalcolour,\n        default_metal_color:productCtx.default_metal_colour,\n        default_metal_purity:productCtx.default_metal_purity,\n        diamond:productCtx.diamondlist,\n        gemstone:productCtx.gemstonelist,\n        metal_height: productCtx.metal_height,\n        metal_weight: productCtx.metal_weight,\n        metal_length: productCtx.metal_length,\n        metal_width: productCtx.metal_width,\n        themes: productCtx.themes,\n        style: productCtx.prod_styles,\n        product_vendor_code: productCtx.productvendorcode,\n        earringbacking: productCtx.earringbacking,\n        occassions: productCtx.occassions,\n        collections: productCtx.collections,\n        stonecount: productCtx.stonecount,\n        stonecolours: productCtx.stonecolour,\n        isreorder : productCtx.isreorder,\n        defaultsize: productCtx.default_size,\n        defaultmetalsize: productCtx.default_metal_size\n\n     }\n     sendNetworkRequest('/productupload', {}, formdata)\n     }\n    \n     \n      setActiveStep(activeStep + 1);\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n            Product Upload\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n                      </Stepper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(6))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n\n      <Grid   item xs={10} sm={10} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />\n      </Grid>\n\n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n\n          \n\n        </Grid>\n        \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid>\n\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n      \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  categories={[\"Gold\"]} />\n        \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n      {/* <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n        </List>\n      </Collapse>\n */}\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n\n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}